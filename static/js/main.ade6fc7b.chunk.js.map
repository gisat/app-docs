{"version":3,"sources":["assets/panther-icon.png","serviceWorker.js","state/Store.js","config/rewrites.js","config/index.js","config/appDefaults.js","components/Docs.js","components/Page.js","components/pages/index.js","components/pages/design/index.js","components/pages/design/Typography.js","components/ComponentPropsTable/ComponentPropsTable.js","components/pages/components/atoms/ButtonsDoc.js","components/ResizableContainer/ResizableContainer.js","components/pages/components/visualizations/cartesianCharts/CartesianCharts.js","components/pages/components/visualizations/cartesianCharts/ColumnChartDoc.js","components/pages/components/visualizations/cartesianCharts/LineChartDoc.js","components/pages/components/visualizations/cartesianCharts/ScatterChartDoc.js","components/pages/components/visualizations/AsterChartDoc.js","components/pages/components/visualizations/SankeyChartDoc.js","components/pages/components/atoms/FormsDoc.js","components/pages/components/atoms/ItemSelectDoc.js","components/pages/components/maps/MapDoc/presentation.js","components/pages/components/maps/MapDoc/index.js","components/pages/components/maps/MapSetDoc/presentation.js","components/pages/components/maps/MapSetDoc/index.js","components/pages/components/commonFeatures/HoverHandlerDoc.js","components/pages/architecture/systemDataTypes/LayersDoc.js","components/pages/architecture/systemDataTypes/MapViewDoc.js","components/pages/architecture/commonDataTypes/StyleDoc/index.js","components/pages/components/maps/ReactLeafletMapDoc/index.js","components/pages/components/maps/WorldWindMapDoc/index.js","utils.js","components/pages/components/maps/ReactLeafletMapDoc/LeafletVectorLayer.js","components/pages/components/maps/ReactLeafletMapDoc/LeafletDiagramLayer.js","components/pages/components/maps/WorldWindMapDoc/WorldWindVectorLayer.js","components/pages/components/maps/ReactLeafletMapDoc/LeafletIndexedVectorLayer.js","components/pages/components/maps/MapPresentational.js","components/pages/components/maps/MapControls/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","history","isServer","createMemoryHistory","createBrowserHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createEnhancer","requestCounter","reduxBatch","middlewares","createAsyncMiddleware","thunk","process","applyMiddleware","filter","v","createMiddleware","createAppStore","options","isPreloaded","__PRELOADED_STATE__","initialState","createRequestCounter","store","createStore","combineReducers","baseStores","router","connectRouter","gst206","geoServerUrl","serverUrl","apiGeoserverWFSHost","apiGeoserverWMSHost","apiBackendHost","devHostnames","requestPageSize","_","merge","configDefaults","mockDataRepositoryUrl","rewrites","passParentPath","children","path","React","Children","map","child","cloneElement","parentPath","props","Directory","component","pathUtils","join","exact","Page","Anchor","withRouter","tree","processNode","level","currentPath","node","label","colour","className","current","includesCurrent","specificClass","type","startsWith","classNames","active","activeDescendant","to","style","borderColor","bind","pathname","PageTitle","LightDarkBlock","forceRows","SyntaxHighlighter","language","customStyle","background","tomorrow","InlineCodeHighlighter","DocsToDo","ImplementationToDo","title","lightDark","withNamespaces","href","Prop","name","defaultValue","required","key","icon","Section","colSpan","PropOption","ComponentPropsTable","content","this","renderContent","renderChildren","prop","index","isEmpty","default","renderDescription","description","objectPropsDescription","desc","objectPropsDesc","objectProp","PureComponent","onClick","ButtonsDoc","primary","secondary","id","isRequired","small","large","src","pantherIcon","invisible","bottom","right","disabled","ghost","inverted","side","circular","ResizableContainer","state","width","ref","createRef","resize","self","setTimeout","maxWidth","offsetWidth","utils","getRemSize","setState","e","direction","delta","coord","remSize","size","position","minWidth","onResize","disableDragging","bounds","x","y","enableResizing","top","left","topRight","bottomRight","bottomLeft","topLeft","defaultProps","CartesianCharts","data","sample_4","keySourcePath","nameSourcePath","xSourcePath","ySourcePath","colorSourcePath","sorting","xValues","yValues","xTicks","yTicks","yOptions","min","withoutYbaseline","minAspectRatio","serie_10","slice","serieDataSourcePath","sample_15","target","sample_serie_4","height","innerPaddingLeft","innerPaddingRight","innerPaddingTop","hash","xGridlines","xOptions","xLabel","xValuesSize","yGridlines","unit","max","highlightedArea","from","yLabel","yValuesSize","series_logarithmic_10","yScaleType","tickCount","xScaleType","inputValueFormat","axisValueFormat","popupValueFormat","diverging","serie_50_time_iso_years","isSerie","pointRadius","serie_5_time_iso_2hours","log_50","legend","defaultSchemePointColors","ColumnChartDoc","defaultColor","highlightColor","defaultSchemeBarColors","minBarWidth","barGapRatio","sample_200","diversionValue","diverging_stacked","color","stacked","LineChartDoc","withPoints","sample_serie_30","forceMode","sample_serie_500","ScatterChartDoc","sample_50","zSourcePath","sample_serie_10","itemNameSourcePath","pointSymbol","AsterChartDoc","sample_7","valueSourcePath","sample_30","relative","padding","forceMinimum","forceMaximum","gridGapMin","gridStepsMax","radialsLabels","hoverValueSourcePath","SankeyChartDocs","sample_1","nodeColorSourcePath","linkColorSourcePath","linkNameSourcePath","linkValueSourcePath","nodeNameSourcePath","nodeValueSourcePath","nodeHoverNameSourcePath","nodeHoverValueSourcePath","FormsDoc","value","placeholder","multiline","baseOptions","customOptions","labelCz","ItemSelectDoc","baseSelectedValues","customSelectedValues","creatableBaseOptions","creatableBaseSelectedValues","creatableCustomOptions","creatableCustomSelectedValues","singleValueMultiselectOptions","singleValueMultiselectValue","selectedValues","optionsKey","selectedKeys","option","keyPath","alert","get","onChange","evt","onOptionLabelClick","onOptionClick","optionLabel","optionValue","creatable","onAdd","withKeyPrefix","singleValue","Map","connects","PresentationMap","view","center","lat","lon","boxRange","presentational_backgroundLayer","url","connectedBackgroundLayer","layerTemplateKey","metadataModifiers","applicationKey","presentationalLayers","params","layers","connectedLayers","MapDoc","addMap","backgroundLayer","marginBottom","mapComponent","WorldWindMap","marginTop","mapKey","stateMapKey","display","flexWrap","margin","viewLimits","boxRangeRange","levelsBased","zoomOnly","ReactLeafletMap","connect","ownProps","dispatch","Action","maps","presentation","ConnectedMap","ConnectedMapSet","MapSet","connectedLayers2","unconnectedBackgroundOsm","unconnectedLayersCuzk","opacity","MapSetDoc","addSet","setSetSync","heading","addMapToSet","removeSet","removeMap","stateMapSetKey","connectedMapComponent","setKey","activeMapKey","sync","tilt","activeSetKey","Select","getActiveSetKey","set","setSetBackgroundLayer","removeSetBackgroundLayer","HoverHandlerDoc","selectedItems","sample_10","LayersDoc","MapViewDoc","europeView","czView","pragueView","polygonLayers_noStyles","features","cz_gadm","polygonLayers_fill","rules","styles","fill","fillOpacity","polygonLayers_outline","outlineColor","outlineWidth","outlineOpacity","hoveredSelectedDefault","fidColumnName","selected","testSelection","keys","polygonLayers_hoveredSelectedDefault","hoveredSelectedDefined","hovered","hoveredStyle","polygonLayers_hoveredSelectedDefined","polygonLayers_attributeValues","attributeKey","attributeValues","polygonLayers_intervals","attributeClasses","interval","intervalBounds","polygonLayers_scales","attributeScale","scalesStyleVolume","volume","Math","PI","pointLayers_scales_size","points_50","pointAsMarker","pointLayers_scales_volume","polygonLayers_diagrams","diagramShape","diagramFillOpacity","diagramFill","diagramOutlineWidth","diagramOutlineColor","diagramSize","polygonLayers_countries","nuts_2","largeDataLayers","largePointData","largeDataStyle","definition","levelsRange","MapContainer","hideWorldWind","uuid","onLayerClick","onSelect","hideLeaflet","Index","layer","updatedLayers","popupContentComponent","cuzk","polygons","wmsExampleLayers","polygonLayers","ReactLeafletMapDoc","crs","wmsLayers","WorldWindMapDoc","request","method","query","payload","queryString","stringify","fetch","body","JSON","then","response","ok","json","Error","error","viewEurope","viewHradec","polygonsWithSelection","choropleth","basicPolygonLayers","basicPolygonLayersWithSelection","choroplethLayers","pointsStyle","pointStyle","pointsInPx","pointData","pointsInMetersStyle","cloneDeep","outputInterval","pointsInMeters","pointsInPxLayers","pointsInMetersLayers","shapeLayers","lineFeaturesLayers","1","2","3","mixedFeaturesLayer","mixed_features","mixedFeaturesLayers","LeafletVectorLayer","addLineData","config","catch","err","toFixed","red","blue","green","LeafletDiagramLayer","polygonsWithoutStyle","polygonsWithStyle","polygonsWithoutStyleLayers","polygonsWithStyleLayers","hundredsOfPolygonsLayers","WorldWindVectorLayer","updatedLayers2","default_points_boxRangeRange","default_polygons_boxRangeRange","cz_large_data_layers","polygon_layers","LeafletIndexedVectorLayer","maxBoxRange","currentPointsBoxRange","currentPolygonsBoxRange","removeAllPoints","onViewChange","limit","promises","i","push","length","loading","Promise","all","flatten","item","populateLayer","addData","step","onMaxRangeChange","round","addPolygonData","removePolygonData","MapPresentational","osm","MapControlsDocs","app","updateLocalConfiguration","users","apiLoadCurrentUser","ReactDOM","render","titleTemplate","defaultTitle","StyleDoc","Design","Typography","MapControls","SankesChartDoc","Buttons","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ade6fc7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/panther-icon.ddf98d25.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n\tcreateStore,\r\n\tcombineReducers,\r\n\tapplyMiddleware,\r\n\tcompose,\r\n\tthunk,\r\n\treduxBatch,\r\n\tlogger\r\n} from '@gisatcz/ptr-state';\r\nimport {createBrowserHistory, createMemoryHistory} from 'history';\r\nimport {\r\n\tcreateRequestCounter,\r\n\tcreateAsyncMiddleware,\r\n\tisServer,\r\n} from '@gisatcz/ptr-core';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\n// base types\r\nimport {baseStores} from '@gisatcz/ptr-state';\r\n\r\nexport const history = isServer\r\n\t? createMemoryHistory()\r\n\t: createBrowserHistory();\r\n\r\nfunction createMiddleware(requestCounter) {\r\n\tconst middlewares = [\r\n\t\tcreateAsyncMiddleware(requestCounter),\r\n\t\tthunk,\r\n\t\tprocess.env.NODE_ENV === 'development' && !isServer && logger,\r\n\t];\r\n\r\n\treturn applyMiddleware(...middlewares.filter((v) => v !== false));\r\n}\r\n\r\nfunction createReducer() {\r\n\treturn combineReducers({...baseStores, router: connectRouter(history)});\r\n}\r\n\r\nconst composeEnhancers =\r\n\t(typeof window !== 'undefined' &&\r\n\t\twindow?.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?.({})) ||\r\n\tcompose;\r\n\r\nfunction createEnhancer(requestCounter) {\r\n\treturn composeEnhancers(\r\n\t\treduxBatch,\r\n\t\tcreateMiddleware(requestCounter),\r\n\t\treduxBatch\r\n\t);\r\n}\r\n\r\n/**\r\n * Returns object with keys `store`, `readyP`.\r\n * - `readyP` - Promise that resolves once the app is initialized (helpful with SSR).\r\n * - `store` - Redux store.\r\n */\r\nfunction createAppStore(options) {\r\n\tconst isPreloaded = !isServer && window.__PRELOADED_STATE__ != null;\r\n\tconst initialState = isPreloaded ? window.__PRELOADED_STATE__ : {};\r\n\tif (isPreloaded) {\r\n\t\tdelete window.__PRELOADED_STATE__;\r\n\t}\r\n\r\n\tconst requestCounter = createRequestCounter();\r\n\tconst store = createStore(\r\n\t\tcreateReducer(),\r\n\t\tinitialState,\r\n\t\tcreateEnhancer(requestCounter)\r\n\t);\r\n\r\n\treturn {\r\n\t\tstore: store,\r\n\t\trequestCounter: requestCounter,\r\n\t};\r\n}\r\n\r\nexport default createAppStore;","/**\r\n * CONFIG\r\n *\r\n * Per-instance values, development values & features.\r\n * See documentation in ./defaults.js\r\n * Versions/variants managed in github.com/gisat/docker/\r\n */\r\n\r\nlet gst206 = {\r\n    geoServerUrl: 'http://192.168.2.206/geoserver/',\r\n    serverUrl: 'http://192.168.2.206/backend/',\r\n    apiGeoserverWFSHost: '192.168.2.206',\r\n    apiGeoserverWMSHost: '192.168.2.206',\r\n    apiBackendHost: '192.168.2.206',\r\n\r\n    devHostnames: ['127.0.0.1'],\r\n    requestPageSize: 100\r\n};\r\n\r\nexport default gst206;\r\n","/**\r\n * CONFIG LOGIC - NOT FOR CONFIGURATION VALUES\r\n */\r\n\r\nimport _ from 'lodash';\r\n\r\n/**\r\n * DEFAULT VALUES (fallback)\r\n * Used if not specified in rewrites.\r\n */\r\nimport {configDefaults} from '@gisatcz/ptr-core';\r\n/**\r\n * APP SPECIFIC DEFAULT VALUES\r\n */\r\nimport appDefaults from \"./appDefaults\";\r\n\r\n/**\r\n * CONFIG PROPER\r\n * Per-instance values, development values & features.\r\n */\r\nimport rewrites from './rewrites';\r\n\r\nexport default _.merge({}, configDefaults, appDefaults, rewrites);\r\n","export default {\r\n    mockDataRepositoryUrl: \"http://gisat-static.kralicinora.cz/\"\r\n}","import React from 'react';\r\nimport {Link, NavLink, withRouter} from \"react-router-dom\";\r\nimport {Redirect, Route, Switch, matchPath} from \"react-router\";\r\nimport pathUtils from 'path';\r\nimport classNames from 'classnames';\r\n\r\nconst passParentPath = (children, path) => React.Children.map(children, child => React.cloneElement(child, {parentPath: path, ...child.props}));\r\n\r\nexport const Directory = ({children, path, parentPath, component, ...props}) => {\r\n\tpath = pathUtils.join(parentPath, path);\r\n\tchildren = passParentPath(children, path);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Route exact path={path} component={component} />\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const Page = ({children, path, parentPath, component, ...props}) => {\r\n\tpath = pathUtils.join(parentPath, path);\r\n\treturn (\r\n\t\t<Route exact path={path} component={component} />\r\n\t);\r\n};\r\n\r\nexport const Anchor = props => null;\r\n\r\n\r\nconst Docs = ({component, location, children, ...props}) => {\r\n\t\r\n\tconst processNode = (level, currentPath, parentPath, node, ...args) => {\r\n\t\tlet {children, label, path, colour, className, ...props} = node.props;\r\n\t\tif (typeof node === \"object\") {\r\n\t\t\tlet specificClass = \"ptr-docs-node-\" + path;\r\n\t\t\tlet current, includesCurrent;\r\n\t\t\tif (node.type === Directory) {\r\n\t\t\t\tpath = pathUtils.join(parentPath, path);\r\n\t\t\t\tif (path === currentPath) {\r\n\t\t\t\t\tcurrent = true;\r\n\t\t\t\t} else if (currentPath.startsWith(path)) {\r\n\t\t\t\t\tincludesCurrent = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className={classNames(\"ptr-docs-nav-directory\", \"level\" + level, specificClass, className, {active: current, activeDescendant: includesCurrent})}>\r\n\t\t\t\t\t\t<span className=\"ptr-docs-nav-link\"><NavLink to={path}>{label}</NavLink></span>\r\n\t\t\t\t\t\t<div style={colour ? {borderColor: colour} : null}>{React.Children.map(children, processNode.bind(this, level + 1, currentPath, path))}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse if (node.type === Page) {\r\n\t\t\t\tpath = pathUtils.join(parentPath, path);\r\n\t\t\t\tif (path === currentPath) {\r\n\t\t\t\t\tcurrent = true;\r\n\t\t\t\t}\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className={classNames(\"ptr-docs-nav-page\", \"level\" + level, specificClass, className, {active: current})}>\r\n\t\t\t\t\t\t<span className=\"ptr-docs-nav-link\"><NavLink to={path}>{label}</NavLink></span>\r\n\t\t\t\t\t\t<div>{ current ? React.Children.map(children, processNode.bind(this, level + 1, currentPath, path)) : null}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse if (node.type === Anchor) {\r\n\t\t\t\tpath = parentPath + \"#\" + path;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className={classNames(\"ptr-docs-nav-anchor\", \"level\" + level, specificClass, className)}>\r\n\t\t\t\t\t\t<span className=\"ptr-docs-nav-link\"><NavLink to={path}>{label}</NavLink></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst tree = React.Children.map(children, processNode.bind(this, 1, location.pathname, \"/\"));\r\n\r\n\tchildren = passParentPath(children, \"/\");\r\n\t\r\n\treturn (\r\n\t\t<div className=\"ptr-docs ptr-light\">\r\n\t\t\t<div className=\"ptr-docs-nav\">\r\n\t\t\t\t<div className=\"ptr-docs-nav-header\">\r\n\t\t\t\t\t<span className=\"ptr-docs-nav-header-title\"><NavLink to=\"/\">Panther docs</NavLink></span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ptr-docs-nav-tree\">\r\n\t\t\t\t\t{tree}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"ptr-docs-content\">\r\n\t\t\t\t<Route exact path=\"/\" component={component} />\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\r\n};\r\n\r\nexport default withRouter(Docs);","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport classNames from 'classnames';\r\nimport _ from 'lodash';\r\nimport { Prism as Highlighter } from 'react-syntax-highlighter';\r\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport {Icon} from '@gisatcz/ptr-atoms';\r\n\r\nexport const PageTitle = ({children}) => (\r\n\t<div className=\"ptr-docs-page-title\">\r\n\t\t<Helmet><title>{children}</title></Helmet>\r\n\t\t<h1>{children}</h1>\r\n\t</div>\r\n);\r\n\r\nexport const LightDarkBlock = ({forceRows, children}) => (\r\n\t<div className={classNames(\"ptr-docs-light-dark-block\", {forceRows})}>\r\n\t\t<div className=\"ptr-light\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t\t<div className=\"ptr-dark\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport const SyntaxHighlighter = ({language, children}) => (\r\n\t<Highlighter language={language} customStyle={{background: null}} className=\"ptr-docs-syntax-highlighter\" style={tomorrow}>\r\n\t\t{children}\r\n\t</Highlighter>\r\n);\r\n\r\nexport const InlineCodeHighlighter = ({children}) => (\r\n\t<span className=\"ptr-docs-inline-code-highlighter\">{children}</span>\r\n);\r\n\r\nexport const DocsToDo = ({children}) => (\r\n\t<div className=\"ptr-docs-todo\">\r\n\t\t<div className=\"ptr-docs-todo-title\">Missing documentation</div>\r\n\t\t<div className=\"ptr-docs-todo-body\">{children}</div>\r\n\t</div>\r\n);\r\n\r\nexport const ImplementationToDo = ({children}) => (\r\n\t<div className=\"ptr-docs-todo implementation\">\r\n\t\t<div className=\"ptr-docs-todo-title\">Missing implementation</div>\r\n\t\t<div className=\"ptr-docs-todo-body\">{children}</div>\r\n\t</div>\r\n);\r\n\r\nexport const DocsToDoInline = ({children}) => (\r\n\t<span className=\"ptr-docs-todo-inline\">\r\n\t\t<i>Missing documentation:</i>\r\n\t\t{children}\r\n\t</span>\r\n);\r\n\r\nconst Page = ({title, lightDark, children}) => (\r\n\t<div className={classNames(\"ptr-docs-page\", {lightDark})}>\r\n\t\t{title ? (<PageTitle>{title}</PageTitle>\t) : null}\r\n\t\t{children}\r\n\t</div>\r\n);\r\n\r\nexport default Page;","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\n\r\nimport Page from \"../Page\";\r\n\r\nconst Index = props => (\r\n\t<Page>\r\n\t\tHic sunt pantherae.\r\n\t</Page>\r\n);\r\n\r\nexport default withNamespaces()(Index);","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\n\r\nconst Design = props => (\r\n\t<span>Hic sunt pantherae.</span>\r\n);\r\n\r\nexport default withNamespaces()(Design);","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\nimport _ from 'lodash';\r\n\r\nimport Page from '../../Page';\r\n\r\nconst Typography = props => (\r\n\t<Page title=\"Typography\">\r\n\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quam id leo in vitae turpis. Egestas sed sed risus pretium quam. Suscipit adipiscing bibendum est ultricies integer quis auctor elit. Congue quisque egestas diam in.</p>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h2>Basic</h2>\r\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quam id leo in vitae turpis. Egestas sed sed risus pretium quam. Suscipit adipiscing bibendum est ultricies integer quis auctor elit. Congue quisque egestas diam in.</p>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h3>In nulla posuere</h3>\r\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quam id leo in vitae turpis. Egestas sed sed risus pretium quam. Suscipit adipiscing bibendum est ultricies integer quis auctor elit. Congue quisque egestas diam in.</p>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h4>Ullamcorper a lacus</h4>\r\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Quam id leo in vitae turpis. Egestas sed sed risus <a href=\"#aaa\">pretium</a> quam. Suscipit adipiscing bibendum est ultricies integer quis auctor elit. Congue quisque egestas diam in.</p>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h5>In nulla posuere</h5>\r\n\t\t\t<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <a href=\"#\">Quam id leo in vitae turpis</a>. Egestas sed sed risus pretium quam. Suscipit adipiscing bibendum est ultricies integer quis auctor elit. Congue quisque egestas diam in.</p>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h2>Basic</h2>\r\n\t\t\t<h3>Ullamcorper a lacus</h3>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<hr/>\r\n\t\t\t<h1>Nec ullamcorper sit amet risus nullam eget felis eget Egestas diam in arcu cursus euismod quis viverra nibh cras.</h1>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h2>Nec ullamcorper sit amet risus nullam eget felis eget Egestas diam in arcu cursus euismod quis viverra nibh cras.</h2>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h3>Nec ullamcorper sit amet risus nullam eget felis eget Egestas diam in arcu cursus euismod quis viverra nibh cras.</h3>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h4>Nec ullamcorper sit amet risus nullam eget felis eget Egestas diam in arcu cursus euismod quis viverra nibh cras.</h4>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t\t<h5>Nec ullamcorper sit amet risus nullam eget felis eget Egestas diam in arcu cursus euismod quis viverra nibh cras.</h5>\r\n\t\t\t<p>Ullamcorper a lacus vestibulum sed arcu. Nec ullamcorper sit amet risus nullam eget felis eget. Egestas diam in arcu cursus euismod quis viverra nibh cras. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Lectus vestibulum mattis ullamcorper velit. In nulla posuere sollicitudin aliquam ultrices.</p>\r\n\t\t</div>\r\n\t</Page>\r\n\t);\r\n\r\nexport default withNamespaces()(Typography);","import React from 'react';\r\nimport _ from \"lodash\";\r\nimport {Icon} from '@gisatcz/ptr-atoms';\r\n\r\nimport './style.scss';\r\n\r\nexport const Prop = ({name, type, defaultValue, required, children}) => (\r\n\t<tr key={name}>\r\n\t\t<td className=\"ptr-docs-props-table-name\">{name}</td>\r\n\t\t<td className=\"ptr-docs-props-table-type\">{type}</td>\r\n\t\t<td className=\"ptr-docs-props-table-default\">{defaultValue}</td>\r\n\t\t<td className=\"ptr-docs-props-table-required\">{required ? <Icon icon=\"circle\"/> : null}</td>\r\n\t\t<td className=\"ptr-docs-props-table-description\">{children}</td>\r\n\t</tr>\r\n);\r\n\r\nexport const Section = ({name, children}) => (\r\n\t<>\r\n\t\t<tr key={'section' + name} className=\"ptr-docs-props-table-section\">\r\n\t\t\t<td colSpan={5}>{name}</td>\r\n\t\t</tr>\r\n\t\t{children}\r\n\t</>\r\n);\r\n\r\nexport const PropOption = ({name, type, children}) => (\r\n\t<div className=\"ptr-docs-props-table-prop-option\">\r\n\t\t<span>{name} [<em>{type}</em>]: </span>\r\n\t\t{children}\r\n\t</div>\r\n);\r\n\r\nclass ComponentPropsTable extends React.PureComponent {\r\n\trender() {\r\n\t\tconst content = this.props.content;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"ptr-docs-props-table-container\">\r\n\t\t\t\t<table className=\"ptr-docs-props-table\">\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t\t<th>Default</th>\r\n\t\t\t\t\t\t<th>Required</th>\r\n\t\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{content ? this.renderContent(content) : this.renderChildren()}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderContent(content) {\r\n\t\treturn content.map((prop, index) => {\r\n\t\t\treturn _.isEmpty(prop) ? (\r\n\t\t\t\t<tr key={index} className=\"ptr-docs-props-table-empty-row\">\r\n\t\t\t\t\t<td colSpan={5}><div></div></td>\r\n\t\t\t\t</tr>\r\n\t\t\t) : (\r\n\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t<td className=\"ptr-docs-props-table-name\">{prop.name}</td>\r\n\t\t\t\t\t<td className=\"ptr-docs-props-table-type\">{prop.type}</td>\r\n\t\t\t\t\t<td className=\"ptr-docs-props-table-default\">{prop.default}</td>\r\n\t\t\t\t\t<td className=\"ptr-docs-props-table-required\">{prop.required ? <Icon icon=\"circle\"/> : null}</td>\r\n\t\t\t\t\t{this.renderDescription(prop.description, prop.objectPropsDescription)}\r\n\t\t\t\t</tr>)\r\n\t\t});\r\n\t}\r\n\r\n\trenderDescription(desc, objectPropsDesc) {\r\n\t\tlet content = (\r\n\t\t\t<>\r\n\t\t\t\t{desc}\r\n\t\t\t\t{objectPropsDesc ? (\r\n\t\t\t\t\t<div className=\"ptr-docs-props-table-description-object\">\r\n\t\t\t\t\t\t{objectPropsDesc.map((objectProp, index) => (\r\n\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t<span>{objectProp.name + ' [' + objectProp.type + ']: '}</span>\r\n\t\t\t\t\t\t\t\t{objectProp.description}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\t\t\t</>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<td className=\"ptr-docs-props-table-description\">{content}</td>\r\n\t\t);\r\n\t}\r\n\t\r\n\trenderChildren() {\r\n\t\treturn this.props.children || null;\r\n\t}\r\n}\r\n\r\nexport default ComponentPropsTable;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {Button, Buttons, ButtonGroup, Icon, Menu, MenuItem} from '@gisatcz/ptr-atoms';\r\n\r\nimport Page, {LightDarkBlock, SyntaxHighlighter} from '../../../Page';\r\nimport ComponentPropsTable from \"../../../ComponentPropsTable/ComponentPropsTable\";\r\n\r\nimport pantherIcon from '../../../../assets/panther-icon.png';\r\n\r\nconst onClick = () => {};\r\n\r\nclass ButtonsDoc extends React.PureComponent {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Buttons\">\r\n\t\t\t\t<Buttons>\r\n\t\t\t\t\t<Button onClick={onClick} icon=\"search\">Search</Button>\r\n\t\t\t\t\t<Button onClick={onClick} primary>Save</Button>\r\n\t\t\t\t\t<Button onClick={onClick} secondary>Save & close</Button>\r\n\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"search\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"info\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"filter\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"dots\">\r\n\t\t\t\t\t\t\t<Menu>\r\n\t\t\t\t\t\t\t\t<MenuItem>Settings…</MenuItem>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</Buttons>\r\n\r\n\t\t\t\t<h2 id=\"props\">Props</h2>\r\n\t\t\t\t<ComponentPropsTable\r\n\t\t\t\t\tcontent={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"circular\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"TODO + link\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"className\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: \"Additional classes.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"disabled\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"Set true to make button disabled.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"ghost\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"TODO + link\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"icon\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: (<>Go to <Link to=\"#content\">Content section</Link> to see how to handle with icons or visit <Link to=\"/components/atoms/icons\">Icons</Link> documentation to choose the icon you need.</>)\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"inverted\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"TODO + link\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"invisible\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"TODO + link\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"large\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: (<>See <Link to=\"#sizes\">Sizes section</Link></>)\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"onClick\",\r\n\t\t\t\t\t\t\ttype: \"function\",\r\n\t\t\t\t\t\t\tisRequired: true,\r\n\t\t\t\t\t\t\tdescription: \"A function which is called on button press.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"primary\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: (<>See <Link to=\"#levels\">Levels section</Link></>)\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"secondary\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: (<>See <Link to=\"#levels\">Levels section</Link></>)\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"side\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"TODO + link\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"small\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: (<>See <Link to=\"#sizes\">Sizes section</Link></>)\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"title\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: \"Text for HTML title attribute.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"unfocusable\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"Button can't get focus.\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t\r\n\t\t\t\t<h2 id=\"levels\">Levels</h2>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'<Button onClick={onClick}>Basic</Button>\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick} primary>Primary action</Button>\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick} secondary>Secondary action</Button>\\n'\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock>\r\n\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick}>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} primary>Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} secondary>Secondary</Button>\r\n\t\t\t\t\t</Buttons>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"sizes\">Sizes</h2>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'<Button onClick={onClick} small>Small size</Button>\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick}>Normal size</Button>\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick} large>Large size</Button>\\n'\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock>\r\n\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick} small>Small size</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick}>Normal size</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large>Large size</Button>\r\n\t\t\t\t\t</Buttons>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"content\">Content</h2>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'// Icon as a prop\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick} icon=\"search\">Search</Button>\\n\\n' +\r\n\t\t\t\t\t\t'// Icon as a child\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick}><Icon icon=\"search\"/>Search</Button>\\n\\n' +\r\n\t\t\t\t\t\t'// Multiple icons as children\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick}><Icon icon=\"search\"/>Search<Icon icon=\"search\"/></Button>\\n'\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock>\r\n\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"search\">Search</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick}><Icon icon=\"search\"/>Search</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick}><Icon icon=\"search\"/>Search<Icon icon=\"search\"/></Button>\r\n\t\t\t\t\t</Buttons>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'// Multiline content\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick}>Stay calm <br/> & enjoy Panther</Button>\\n\\n' +\r\n\t\t\t\t\t\t'// Highlight textual content\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick}><><b>Stay calm</b> and enjoy Panther</></Button>\\n\\n' +\r\n\t\t\t\t\t\t'// Use image as content\\n' +\r\n\t\t\t\t\t\t'<Button onClick={onClick}><img src={pantherIcon}/></Button>\\n'\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock>\r\n\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick}>Stay calm <br/> & enjoy Panther</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick}><><b>Stay calm</b> and enjoy Panther</></Button>\r\n\t\t\t\t\t\t<Button onClick={onClick}><img src={pantherIcon}/></Button>\r\n\t\t\t\t\t</Buttons>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h2 id=\"variants\">Variants</h2>\r\n\t\t\t\t<h3>Icons only</h3>\r\n\t\t\t\t<LightDarkBlock>\r\n\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\" small/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\" large/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\" small primary/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\" primary/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\" large primary/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\" small secondary/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\" secondary/>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"times\" large secondary/>\r\n\t\t\t\t\t</Buttons>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\t\t\t\t<h3>Invisible</h3>\r\n\t\t\t\t<LightDarkBlock>\r\n\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick} invisible>Invisible</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} invisible icon=\"dots\">\r\n\t\t\t\t\t\t\t<Menu bottom right>\r\n\t\t\t\t\t\t\t\t<MenuItem disabled>Disabled item</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem>Active item</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem>Another active item</MenuItem>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Buttons>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3>Ghost</h3>\r\n\t\t\t\t<LightDarkBlock>\r\n\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost small>Search</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost>Search</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost large>Search</Button>\r\n\t\t\t\t\t</Buttons>\r\n\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost small primary>Search</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost primary>Search</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost large primary>Search</Button>\r\n\t\t\t\t\t</Buttons>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3>Inverted</h3>\r\n\r\n\t\t\t\t<h2>Containers/grouping/ ???</h2>\r\n\t\t\t\t<h3>Buttons</h3>\r\n\t\t\t\t<h3>ButtonGroup</h3>\r\n\t\t\t\t<h2>Special cases</h2>\r\n\t\t\t\t<h3>Circular</h3>\r\n\t\t\t\t<h3>Side</h3>\r\n\r\n\t\t\t\t<LightDarkBlock>\r\n\t\t\t\t\t<h2>Normal size</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Buttons>\r\n\t\t\t\t\t\t<Button onClick={onClick}>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} primary>Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} secondary>Secondary</Button>\r\n\t\t\t\t\t\t</Buttons>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Normal size with icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"delete\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"download\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"plus\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} primary icon=\"delete\">Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} primary icon=\"download\">Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} primary icon=\"plus\">Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} secondary icon=\"delete\">Secondary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} secondary icon=\"download\">Secondary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} secondary>Secondary<Icon icon=\"plus\"/></Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Normal size icon only</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"delete\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} primary icon=\"plus\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} secondary icon=\"delete\"/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Small size</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} small>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} small primary>Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} small secondary>Secondary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Small size with icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} small icon=\"delete\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} small icon=\"download\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} small icon=\"plus\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} small secondary>Secondary<Icon icon=\"plus\"/></Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Small size with icon only</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} small icon=\"delete\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} small icon=\"download\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} small icon=\"plus\"/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Large size</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} large>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large primary>Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large secondary>Secondary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Large size with icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} large icon=\"delete\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large icon=\"download\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large icon=\"plus\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large primary icon=\"delete\">Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large primary icon=\"download\">Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large primary icon=\"plus\">Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large secondary icon=\"delete\">Secondary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large secondary icon=\"download\">Secondary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} large secondary>Secondary<Icon icon=\"plus\"/></Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Large size with icon only</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} large icon=\"delete\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} large icon=\"download\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} large icon=\"plus\"/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Disabled</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} disabled>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} disabled primary>Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} disabled secondary>Secondary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Disabled with icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} disabled icon=\"delete\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} disabled primary icon=\"download\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} disabled secondary icon=\"plus\">Basic</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Invisible</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} invisible>Basic</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Button with menu</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} icon=\"dots\" invisible>\r\n\t\t\t\t\t\t\t<Menu bottom right>\r\n\t\t\t\t\t\t\t\t<MenuItem disabled>Item 1</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem>Wtf menu item</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem>Omg</MenuItem>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Ghost</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost primary>Primary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Ghost with icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost icon=\"delete\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost primary icon=\"download\">Basic</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Ghost small</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost small>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost small primary>Primary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Ghost small with icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost small icon=\"delete\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost small primary icon=\"plus\">Basic</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Ghost large</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost large>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost large primary>Primary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Ghost large with icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost large icon=\"delete\">Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost large primary icon=\"plus\">Basic</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Ghost disabled</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost disabled>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost disabled primary>Primary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Inverted</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section inverted\">\r\n\t\t\t\t\t\t<Button onClick={onClick} inverted>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} inverted primary>Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} inverted secondary>Primary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Inverted disabled</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section inverted\">\r\n\t\t\t\t\t\t<Button onClick={onClick} inverted disabled>Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} inverted disabled primary>Primary</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} inverted disabled secondary>Primary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Inverted invisible</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section inverted\">\r\n\t\t\t\t\t\t<Button onClick={onClick} inverted invisible>Basic</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Inverted ghost</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section inverted\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost inverted >Basic</Button>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost inverted primary>Primary</Button>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Side icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} side=\"left\" icon=\"times\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} side=\"right\" icon=\"chevron-left\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} side=\"top\" primary icon=\"plus\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} side=\"bottom\" secondary icon=\"pushpin\"/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Ghost side icon</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost side=\"left\" icon=\"times\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost side=\"right\" icon=\"chevron-left\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost side=\"right\" icon=\"chevron-right\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost side=\"top\" primary icon=\"plus\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} ghost side=\"bottom\" primary icon=\"pushpin\"/>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t<h2>Circular</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} circular icon=\"chevron-left\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} circular primary icon=\"plus\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} circular secondary icon=\"edit\"/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Circular small</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} circular small icon=\"expand\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} circular small primary icon=\"search\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} circular small secondary icon=\"chevron-left\"/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h2>Circular large</h2>\r\n\t\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t\t<Button onClick={onClick} circular large icon=\"expand\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} circular large primary icon=\"search\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} circular large primary icon=\"times\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} circular large secondary icon=\"chevron-left\"/>\r\n\t\t\t\t\t\t<Button onClick={onClick} circular large secondary icon=\"chevron-right\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LightDarkBlock>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ButtonsDoc;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Rnd} from 'react-rnd';\r\nimport './style.scss';\r\nimport {utils} from '@gisatcz/ptr-utils'\r\n\r\nclass ResizableContainer extends React.PureComponent {\r\n\r\n\t/* Sizes in rem */\r\n\tstatic defaultProps = {\r\n\t\twidth: 40,\r\n\t\tminWidth: 10,\r\n\t\tmaxWidth: null\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\twidth: this.props.width\r\n\t\t};\r\n\t\tthis.ref = React.createRef();\r\n\r\n\t\tthis.resize = this.resize.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet self = this;\r\n\t\tsetTimeout(() => {\r\n\t\t\tlet maxWidth = self.ref.current.offsetWidth/utils.getRemSize();\r\n\t\t\tif (maxWidth < self.state.width) {\r\n\t\t\t\tself.setState({width: maxWidth});\r\n\t\t\t}\r\n\t\t}, 100);\r\n\t}\r\n\r\n\tresize(e, direction, ref, delta, coord) {\r\n\t\tthis.setState({width: ref.offsetWidth/utils.getRemSize()});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst remSize = utils.getRemSize();\r\n\t\tlet size = {width: this.state.width*remSize};\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"ptr-resizable-container\" ref={this.ref}>\r\n\t\t\t\t<Rnd\r\n\t\t\t\t\tsize={size}\r\n\t\t\t\t\tstyle={{position: 'relative'}}\r\n\t\t\t\t\tminWidth={this.props.minWidth*remSize}\r\n\t\t\t\t\tmaxWidth={this.props.maxWidth ? this.props.maxWidth*remSize : '100%'}\r\n\t\t\t\t\tonResize={this.resize}\r\n\t\t\t\t\tdisableDragging={true}\r\n\t\t\t\t\tbounds='parent'\r\n\t\t\t\t\tdefault={{\r\n\t\t\t\t\t\tx: 0,\r\n\t\t\t\t\t\ty: 0,\r\n\t\t\t\t\t\twidth: '100%'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tenableResizing={{ top:false, right:true, bottom:false, left:false, topRight:false, bottomRight:false, bottomLeft:false, topLeft:false }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{React.cloneElement(this.props.children, {width: this.state.width})}\r\n\t\t\t\t</Rnd>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ResizableContainer;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Page, {\r\n\tDocsToDo,\r\n\tInlineCodeHighlighter,\r\n\tLightDarkBlock,\r\n\tSyntaxHighlighter\r\n} from \"../../../../Page\";\r\nimport serie_10 from \"../../../../mockData/scatterChart/serie_10\";\r\nimport sample_4 from \"../../../../mockData/sample_4\";\r\nimport sample_15 from \"../../../../mockData/sample_15\";\r\nimport sample_serie_4 from \"../../../../mockData/sample_serie_4\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport {ColumnChart, LineChart, ScatterChart} from '@gisatcz/ptr-charts';\r\nimport ResizableContainer from \"../../../../ResizableContainer/ResizableContainer\";\r\nimport ComponentPropsTable from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\nimport serie_5_time_iso_2hours from \"../../../../mockData/timeBased/serie_5_time_iso_2hours\";\r\nimport serie_50_time_iso_years from \"../../../../mockData/timeBased/serie_50_time_iso_years\";\r\nimport series_logarithmic_10 from \"../../../../mockData/logarithmic/series_logarithmic_10\";\r\nimport log_50 from \"../../../../mockData/logarithmic/points_50\";\r\n\r\nclass CartesianCharts extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Cartesian charts\">\r\n\t\t\t\t<div className=\"ptr-docs-visualizations-intro-example cartesian-charts\">\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\tkey=\"column-chart-doc-typical-usage\"\r\n\t\t\t\t\t\t\tdata={sample_4}\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\tcolorSourcePath=\"data.color\"\r\n\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"desc\"]]}\r\n\r\n\t\t\t\t\t\t\txValues={false}\r\n\t\t\t\t\t\t\tyValues={false}\r\n\r\n\t\t\t\t\t\t\txTicks={false}\r\n\t\t\t\t\t\t\tyTicks={false}\r\n\r\n\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\tmin: 0\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\twithoutYbaseline={false}\r\n\r\n\t\t\t\t\t\t\tminAspectRatio={1.7}\r\n\t\t\t\t\t\t\t// maxWidth={15}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\tkey=\"line-chart-doc-typical-usage\"\r\n\r\n\t\t\t\t\t\t\tdata={serie_10.slice(7,10)}\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\txValues={false}\r\n\t\t\t\t\t\t\tyValues={false}\r\n\r\n\t\t\t\t\t\t\txTicks={false}\r\n\t\t\t\t\t\t\tyTicks={false}\r\n\r\n\t\t\t\t\t\t\twithoutYbaseline={false}\r\n\r\n\t\t\t\t\t\t\tminAspectRatio={1.7}\r\n\t\t\t\t\t\t\t// maxWidth={15}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\tkey=\"scatter-chart-doc-typical-usage\"\r\n\t\t\t\t\t\t\tdata={sample_15}\r\n\r\n\t\t\t\t\t\t\txSourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\tySourcePath=\"data.some_value_2\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\r\n\t\t\t\t\t\t\txValues={false}\r\n\t\t\t\t\t\t\tyValues={false}\r\n\r\n\t\t\t\t\t\t\txTicks={false}\r\n\t\t\t\t\t\t\tyTicks={false}\r\n\r\n\t\t\t\t\t\t\twithoutYbaseline={false}\r\n\r\n\t\t\t\t\t\t\tminAspectRatio={1.7}\r\n\t\t\t\t\t\t\t// maxWidth={15}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>Each type of chart is suitable for different use case. For detailed information about proper chart type usage, please go to the particular chart documentation. Based on input data and, mainly, based on the message you want to deliver to your audience, you can choose from following charts:</p>\r\n\t\t\t\t<ul className=\"ptr-docs-basic-list\">\r\n\t\t\t\t\t<li><Link to=\"/components/visualizations/cartesianCharts/columnChart\"><b>Column chart</b></Link> - one attribute/indicator at one point in time (e.g. Population in 2015 by country) or multiple comparable (relative, same unit etc.) attributes/indicators for one area at one point in time</li>\r\n\t\t\t\t\t<li><Link to=\"/components/visualizations/cartesianCharts/lineChart\"><b>Line chart</b></Link> - progress of one attribute/indicator (e.g. Population progress between 1985 and 2015 by country) or progress of multiple comparable attributes/indicators for one area</li>\r\n\t\t\t\t\t<li><Link to=\"/components/visualizations/cartesianCharts/scatterChart\"><b>Scatter chart</b></Link> - two attributes/indicators at one point (or even multiple points) in time (e.g. Population growth vs. Urban area growth by country in 2000, 2005 and 2010)</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h2 id=\"props\">Common props</h2>\r\n\t\t\t\t<ComponentPropsTable\r\n\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t[{\r\n\t\t\t\t\t\t\tname: \"data\",\r\n\t\t\t\t\t\t\ttype: \"array\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: \"Data load for chart. See particular chart type documentation for a detailed description.\"\r\n\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\tname: \"keySourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: \"Path to key value in data item object (e.g. 'key' or 'data.key').\"\r\n\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\tname: \"nameSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: \"Path to name value in data item object (e.g. 'name' or 'content.name'). If there is no name column in data, use the path to the key.\"\r\n\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\tname: \"colorSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: \"Path to color value in data item object.\"\r\n\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\tname: \"serieDataSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: \"Path to serie data in data item object. It is required for Line chart.\"\r\n\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\tname: \"xSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: \"Path to value for axis x. The Value could be string or number depending on chart type. If data are serial, the path is in the context of the serie.\"\r\n\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\tname: \"ySourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string|array\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: <>Path to value for axis y. The value has to be numeric. If data are serial, the path is in the context of the serie. It could be a collection as well (See <Link to=\"/components/visualizations/cartesianCharts/columnChart#stacked\">stacked column charts</Link>).</>\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"sorting\",\r\n\t\t\t\t\t\t\ttype: \"array\",\r\n\t\t\t\t\t\t\tdescription: \"List of sorting pairs. [[path, order]] - if data are serial, path is in the cotext of the serie. Example: [['period', 'asc']] - it sorts data by 'period' column in ascending order.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"width\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdescription: \"Chart width in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"height\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"15\",\r\n\t\t\t\t\t\t\tdescription: \"Chart height in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"maxWidth\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdescription: \"Maximal chart width in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"minWidth\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"10\",\r\n\t\t\t\t\t\t\tdescription: \"Minimal chart width in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"minAspectRatio\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdescription: \"Minimal ratio between width and height, otherwise height is adjusted to fit the ratio.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"xValuesSize\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"3\",\r\n\t\t\t\t\t\t\tdescription: \"Space for values below axis x in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"yValuesSize\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"3\",\r\n\t\t\t\t\t\t\tdescription: \"Space for values next to axis x in rem.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"innerPaddingLeft\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"0.7\",\r\n\t\t\t\t\t\t\tdescription: \"Space between chart body and axis x in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"innerPaddingRight\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"0.7\",\r\n\t\t\t\t\t\t\tdescription: \"Space between chart body and right margin in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"innerPaddingTop\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"0.7\",\r\n\t\t\t\t\t\t\tdescription: \"Space between chart body and top margin in rem.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"xGridlines\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true/false\",\r\n\t\t\t\t\t\t\tdescription: \"Show vertical grid. False for column chart by default, otherwise true.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"xLabel\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"Show label (title) of axis x. Its components could be defined in xOptions.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"xOptions\",\r\n\t\t\t\t\t\t\ttype: \"object\",\r\n\t\t\t\t\t\t\tobjectPropsDescription: [{\r\n\t\t\t\t\t\t\t\tname: \"max\",\r\n\t\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\t\tdescription: \"Set fixed maximum value, if axis x is linear.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"min\",\r\n\t\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\t\tdescription: \"Set fixed minimum value, if axis x is linear.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"name\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: \"Axis x title.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"unit\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: \"Axis x unit. It's displayed in brackets next to the title.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"diversionValue\",\r\n\t\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\t\tdescription: \"Use together with 'diverging' prop to move axis Y baseline to this value. Scale of axis X has to be linear (currently useful for scatter charts only). By default 0.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"startingTick\",\r\n\t\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\t\tdefault: 0,\r\n\t\t\t\t\t\t\t\tdescription: \"Show ticks (and value labels, gridlines) starting from this position. For ordinal scales only.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"tickStep\",\r\n\t\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\t\tdefault: 1,\r\n\t\t\t\t\t\t\t\tdescription: \"Show every nth tick (and value label, gridline). For ordinal scales only.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"axisValueFormat\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: <>Time format used as x axis value label. Use together with xScaleType='time'. See <a href=\"https://momentjs.com/docs/#/displaying/\" target=\"_blank\">MomentJS documentation</a> to set the format correctly.</>\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"popupValueFormat\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: <>Time format used in popup. Use together with xScaleType='time'. See <a href=\"https://momentjs.com/docs/#/displaying/\" target=\"_blank\">MomentJS documentation</a> to set the format correctly.</>\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"inputValueFormat\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: <>Time format which should be used for parsing input data. Use if source data for time are not in ISO 8601 date and time format (2000-12-31T07:02:44). Currently implemented for <b>line charts only</b>. Use together with xScaleType='time'. See <a href=\"https://momentjs.com/docs/#/displaying/\" target=\"_blank\">MomentJS documentation</a> to set the format correctly.</>\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"timeValueLanguage\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: <>Languge used for time values. Possible values 'en' (default) or 'cs'. Other languages are possible, but not implemented yet.</>\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"xTicks\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true\",\r\n\t\t\t\t\t\t\tdescription: \"Show ticks on axis x.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"xScaleType\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdefault: \"'ordinal'/'linear'\",\r\n\t\t\t\t\t\t\tdescription: <>Possible values are for column chart - ordinal (default); for line chart - ordinal (default), time; for scatter chart - linear (default), time. ISO 8601 date and time format (2000-12-31T07:02:44) is recommended for input data. See <Link to={\"#scales\"}>Scales section</Link> how to use different scale types.</>\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"xValues\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true\",\r\n\t\t\t\t\t\t\tdescription: \"Show values on axis x.\"\r\n\t\t\t\t\t\t},{}, {\r\n\t\t\t\t\t\t\tname: \"yGridlines\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true\",\r\n\t\t\t\t\t\t\tdescription: \"Show horizontal grid.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"yLabel\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"Show label (title) of axis y. Its components could be defined in yOptions.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"yOptions\",\r\n\t\t\t\t\t\t\ttype: \"object\",\r\n\t\t\t\t\t\t\tobjectPropsDescription: [{\r\n\t\t\t\t\t\t\t\tname: \"max\",\r\n\t\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\t\tdescription: \"Set fixed maximum value.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"min\",\r\n\t\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\t\tdescription: \"Set fixed minimum value.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"name\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: \"Axis y title.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"unit\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: \"Axis y unit. It's displayed in brackets next to the title.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"diversionValue\",\r\n\t\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\t\tdescription: \"Use together with 'diverging' prop to move axis X baseline to this value. By default 0.\"\r\n\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\tname: \"highlightedArea\",\r\n\t\t\t\t\t\t\t\ttype: \"object\",\r\n\t\t\t\t\t\t\t\tdescription: \"Using 'from' and 'to' define the area in the chart which will be highlighted.\"\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"yScaleType\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdefault: \"'linear'\",\r\n\t\t\t\t\t\t\tdescription: <>Possible values are for column chart - linear (default); for line chart - linear (default), logarithmic; for scatter chart - linear (default). See <Link to=\"#scales\">Scales section</Link> how to use different scale types.</>\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"yTicks\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true/false\",\r\n\t\t\t\t\t\t\tdescription: \"Show ticks on axis y. True for scatter chart by default, otherwise false.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"yValues\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true\",\r\n\t\t\t\t\t\t\tdescription: \"Show values on axis y.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"withoutYbaseline\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true/false\",\r\n\t\t\t\t\t\t\tdescription: \"Hide axis y baseline. False for scatter chart by default, otherwise true.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"legend\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"Show legend below chart.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"diverging\",\r\n\t\t\t\t\t\t\ttype: \"string|boolean\",\r\n\t\t\t\t\t\t\tdescription: (<>Use if the values are diverging from some point (defined in xOptions or yOptions). See <Link to=\"/components/visualizations/cartesianCharts/columnChart#diverging\">Diverging column chart</Link> to find out more. Possible values: 'single', 'double'. If double, ySourcePath must be an array containing paths to both values. If value is not defined, 'single' is used by default.</>)\r\n\t\t\t\t\t\t}]\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<h2>Examples</h2>\r\n\t\t\t\t<h3>Fixed width and height</h3>\r\n\t\t\t\t<p>By default, cartesian chart <InlineCodeHighlighter>width</InlineCodeHighlighter> is 100 % of parent container and <InlineCodeHighlighter>height</InlineCodeHighlighter> is 15 rem. However, it is possible to set custom value for both properties.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Sorting is not required, but recommended. \\n' +\r\n\t\t\t\t\t'// Use HoverHandler to see popups when move cursor over line or point. \\n' +\r\n\t\t\t\t\t'// The input data structure is described for each chart type separately. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"cartesians-docs-chart-width\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\",\"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\twidth={30}\\n' +\r\n\t\t\t\t\t'\\t\\theight={25}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\tkey=\"cartesians-docs-chart-width\"\r\n\r\n\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\twidth={30}\r\n\t\t\t\t\t\t\theight={25}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3>Maximal and minimal width customization</h3>\r\n\t\t\t\t<p>If you want to restrict width of the chart, set <InlineCodeHighlighter>minWidth</InlineCodeHighlighter> or <InlineCodeHighlighter>maxWidth</InlineCodeHighlighter> value in rem. Try to resize the chart box in the examples below to see the restriction.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"cartesians-docs-chart-max-min-width\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"data.some_value_1\",\"desc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tminWidth={30}\\n' +\r\n\t\t\t\t\t'\\t\\tmaxWidth={45}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"cartesians-docs-chart-max-min-width\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"desc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\t\tminWidth={30}\r\n\t\t\t\t\t\t\t\tmaxWidth={45}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3>Minimal aspect ratio</h3>\r\n\t\t\t\t<p>Minimal aspect ratio defines minimal allowed width to height ratio. If this ratio is higher than defined value, the height is adjusted to fit <InlineCodeHighlighter>minAcpectRatio</InlineCodeHighlighter>. Try to resize the box in the example below to see the height adjustment.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ScatterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"cartesians-docs-chart-min-aspect-ratio\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_2\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tminAspectRatio={1.5}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"cartesians-docs-chart-min-aspect-ratio\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_2\"\r\n\r\n\t\t\t\t\t\t\t\tminAspectRatio={1.5}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3>Handling inner padding</h3>\r\n\t\t\t\t<p>Inner padding defines the space between plot area edge and plot itself in rem values. Currently, it is possible to set <InlineCodeHighlighter>innerPaddingLeft</InlineCodeHighlighter> - space between plot and axis y, <InlineCodeHighlighter>innerPaddingTop</InlineCodeHighlighter> - space between plot and the top edge of the chart area, and <InlineCodeHighlighter>innerPaddingRight</InlineCodeHighlighter> - space between plot and the right edge of the chart.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"cartesians-docs-chart-inner-padding\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\",\"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tinnerPaddingLeft={0}\\n' +\r\n\t\t\t\t\t'\\t\\tinnerPaddingTop={4}\\n' +\r\n\t\t\t\t\t'\\t\\tinnerPaddingRight={2}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"cartesians-docs-chart-width\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\t\tinnerPaddingLeft={0}\r\n\t\t\t\t\t\t\t\tinnerPaddingRight={2}\r\n\t\t\t\t\t\t\t\tinnerPaddingTop={4}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3>Axis customization</h3>\r\n\t\t\t\t<p>There are plenty of options to customize both axis x and axis y. In the example below, there are listed all props associated with axis for clarity, even if some of them are truthy by default for column chart (<Link to={{hash: \"#props\"}}>See props table in the top of this page</Link>).</p>\r\n\t\t\t\t<p>The values next to axis y (<InlineCodeHighlighter>yValues</InlineCodeHighlighter>) and below axis x (<InlineCodeHighlighter>xValues</InlineCodeHighlighter>) should be shown by default. However, the default space may not to be enough for them (or is too large on the other hand ). For such cases, it is possible to adjust space for values using <InlineCodeHighlighter>xValuesSize</InlineCodeHighlighter> or <InlineCodeHighlighter>yValuesSize</InlineCodeHighlighter>.</p>\r\n\t\t\t\t<p>To increase readability you can switch on or off gridlines (<InlineCodeHighlighter>xGridlines</InlineCodeHighlighter> - auxiliary horizontal lines, <InlineCodeHighlighter>yGridlines</InlineCodeHighlighter> - auxiliary vertical lines) and ticks (<InlineCodeHighlighter>xTicks</InlineCodeHighlighter>, <InlineCodeHighlighter>yTicks</InlineCodeHighlighter>) for both axis.</p>\r\n\t\t\t\t<p>Use <InlineCodeHighlighter>xLabel</InlineCodeHighlighter>/<InlineCodeHighlighter>yLabel</InlineCodeHighlighter> to add label (title) for axis x/axis y. Source data for the label must be defined in <InlineCodeHighlighter>xOptions</InlineCodeHighlighter>/<InlineCodeHighlighter>yOptions</InlineCodeHighlighter> object as you can see in the example below.</p>\r\n\t\t\t\t<p>Furthermore, you can extend minimum and maximum for axis y (or even for axis x, if its scale is linear - e.g. scatter chart) in the options object.</p>\r\n\t\t\t\t<p>If you want to highlight certain area in the chart (e.g. emphasize filter range), you can define the <InlineCodeHighlighter>highlightedArea</InlineCodeHighlighter> object in <InlineCodeHighlighter>yOptions</InlineCodeHighlighter>. Specify <InlineCodeHighlighter>from</InlineCodeHighlighter> and <InlineCodeHighlighter>to</InlineCodeHighlighter> property to set the range on axis y which should be highlighted.</p>\r\n\t\t\t\t<p>For axis y, there is an additional prop <InlineCodeHighlighter>withoutYbaseline</InlineCodeHighlighter>nset to false. It means show the baseline of axis Y, because the baseline is hidden by default for column chart.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"cartesians-docs-chart-axis\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"data.some_value_1\",\"desc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txGridlines\\n' +\r\n\t\t\t\t\t'\\t\\txOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"U.S. states\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\t\\txLabel\\n' +\r\n\t\t\t\t\t'\\t\\txTicks\\n' +\r\n\t\t\t\t\t'\\t\\txValues\\n' +\r\n\t\t\t\t\t'\\t\\txValuesSize={5}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tyGridlines\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Urban Area\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tunit: \"sqkm\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tmin: 0\\n' +\r\n\t\t\t\t\t'\\t\\t\\tmax: 104000\\n' +\r\n\t\t\t\t\t'\\t\\t\\thighlightedArea: {\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tfrom: 30000\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tto: 60000\\n' +\r\n\t\t\t\t\t'\\t\\t\\t}\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\t\\tyLabel\\n' +\r\n\t\t\t\t\t'\\t\\tyTicks\\n' +\r\n\t\t\t\t\t'\\t\\tyValues\\n' +\r\n\t\t\t\t\t'\\t\\tyValuesSize={4.5}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\twithoutYbaseline={false}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"cartesians-docs-chart-max-min-width\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"desc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\t\txGridlines\r\n\t\t\t\t\t\t\t\txOptions={{\r\n\t\t\t\t\t\t\t\t\tname: \"U.S. states\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\txLabel\r\n\t\t\t\t\t\t\t\txTicks\r\n\t\t\t\t\t\t\t\txValues\r\n\t\t\t\t\t\t\t\txValuesSize={5}\r\n\r\n\t\t\t\t\t\t\t\tyGridlines\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tname: \"Urban Area\",\r\n\t\t\t\t\t\t\t\t\tunit: \"sqkm\",\r\n\t\t\t\t\t\t\t\t\tmin: 0,\r\n\t\t\t\t\t\t\t\t\tmax: 104000,\r\n\t\t\t\t\t\t\t\t\thighlightedArea: {\r\n\t\t\t\t\t\t\t\t\t\tfrom: 30000,\r\n\t\t\t\t\t\t\t\t\t\tto: 60000\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tyLabel\r\n\t\t\t\t\t\t\t\tyTicks\r\n\t\t\t\t\t\t\t\tyValues\r\n\t\t\t\t\t\t\t\tyValuesSize={4.5}\r\n\r\n\t\t\t\t\t\t\t\twithoutYbaseline={false}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3 id=\"scales\">Scales</h3>\r\n\r\n\t\t\t\t<p>Currently, this functionality is under development. However, it is possible to use some basic scale types for both axis x and y in line chart and scatter chart.</p>\r\n\r\n\t\t\t\t<h4>Line chart</h4>\r\n\t\t\t\t<p>For line chart, the default scale of axis y is linear (all line chart examples above). Optionally it is possible to use logarithmic scale: <InlineCodeHighlighter>yScaleType=\"logarithmic\"</InlineCodeHighlighter>. Use logarithmic scale type together with <InlineCodeHighlighter>yOptions (min, max, tickCount).</InlineCodeHighlighter> to get nice rounded values and gridlines on axis y.</p>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"time-scale-line\"\r\n\r\n\t\t\t\t\t\t\t\tdata={series_logarithmic_10}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"time\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"otherValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tyScaleType=\"logarithmic\"\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tmin: 0.01,\r\n\t\t\t\t\t\t\t\t\tmax: 100,\r\n\t\t\t\t\t\t\t\t\ttickCount: 4\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"time\", \"asc\"]]} // not required, but recommended\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<p>For axis x, the default scale is ordinal (all line chart examples above). Another scale you can use for axis x is time-based by setting <InlineCodeHighlighter>xScaleType=\"time\"</InlineCodeHighlighter>. It is recommended to specify <InlineCodeHighlighter>axisValueFormat</InlineCodeHighlighter> and <InlineCodeHighlighter>popupValueFormat</InlineCodeHighlighter> to format axis x value labels and values in popups. Additionally, if the input data which represents the period is not in ISO 8601 date and time format (2000-12-31T07:02:44), specify <InlineCodeHighlighter>inputValueFormat</InlineCodeHighlighter> (this functionality is experimental).</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"time-scale-line\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tisSerie\\n' +\r\n\t\t\t\t\t'\\t\\tpointRadius={3}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txScaleType=\"time\"\\n' +\r\n\t\t\t\t\t'\\t\\txOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Time\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\taxisValueFormat \"YYYY\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpopupValueFormat: \"YYYY\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tinputValueFormat \"YYYY\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tunit: \"inhabitans\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tdiverging\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\", \"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"time-scale-line\"\r\n\r\n\t\t\t\t\t\t\t\txScaleType=\"time\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\txOptions={{\r\n\t\t\t\t\t\t\t\t\tinputValueFormat: 'YYYY',\r\n\t\t\t\t\t\t\t\t\taxisValueFormat: 'YYYY',\r\n\t\t\t\t\t\t\t\t\tpopupValueFormat: 'YYYY',\r\n\t\t\t\t\t\t\t\t\tname: 'Time',\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tunit: \"inhabitans\"\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tdiverging\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h4>Scatter chart</h4>\r\n\t\t\t\t<p>For axis x, the default scale is linear (all line chart examples above). Another scale you can use for axis x is time-based by setting <InlineCodeHighlighter>xScaleType=\"time\"</InlineCodeHighlighter>. It is recommended to specify <InlineCodeHighlighter>axisValueFormat</InlineCodeHighlighter> and <InlineCodeHighlighter>popupValueFormat</InlineCodeHighlighter> to format axis x value labels and values in popups.</p>\r\n\t\t\t\t<p>See the examples bellow how different time ranges are handled. An optional range of axis x is set in the first example. In the second example, time scale on axis x is combined with linear scale with diverging values on axis y.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ScatterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"time-scale-scatter-2\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"time\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"some_value_1\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tisSerie\\n' +\r\n\t\t\t\t\t'\\t\\tpointRadius={3}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txScaleType=\"time\"\\n' +\r\n\t\t\t\t\t'\\t\\txOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Time\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\taxisValueFormat \"YYYY\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpopupValueFormat: \"D MMMM YYYY\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Time\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tmax \"2022-01-01T00:00:00\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tmin \"2012-01-01T00:00:00\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Temperature\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tunit: \"°C\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"time-scale-scatter-2\"\r\n\t\t\t\t\t\t\t\tdata={serie_50_time_iso_years}\r\n\r\n\t\t\t\t\t\t\t\txSourcePath=\"time\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"some_value_1\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\r\n\t\t\t\t\t\t\t\tisSerie\r\n\t\t\t\t\t\t\t\tpointRadius={3}\r\n\r\n\t\t\t\t\t\t\t\txScaleType=\"time\"\r\n\t\t\t\t\t\t\t\txOptions={{\r\n\t\t\t\t\t\t\t\t\tmax: '2022-01-01T00:00:00',\r\n\t\t\t\t\t\t\t\t\tmin: '2012-01-01T00:00:00',\r\n\t\t\t\t\t\t\t\t\taxisValueFormat: 'YYYY',\r\n\t\t\t\t\t\t\t\t\tpopupValueFormat: 'D MMMM YYYY',\r\n\t\t\t\t\t\t\t\t\tname: 'Time'\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tname: 'Temperature',\r\n\t\t\t\t\t\t\t\t\tunit: '°C'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ScatterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"time-scale-scatter\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"time\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"some_value_1\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tisSerie\\n' +\r\n\t\t\t\t\t'\\t\\tpointRadius={3}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txScaleType=\"time\"\\n' +\r\n\t\t\t\t\t'\\t\\txOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Time\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\taxisValueFormat \"H:mm\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpopupValueFormat: \"D MMMM YYYY (H:mm)\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Time\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\t\\txValuesSize={5}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Temperature\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tunit: \"°C\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tmin: -100\\n' +\r\n\t\t\t\t\t'\\t\\t\\tmax: +100\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\t\\tyLabel\\n' +\r\n\t\t\t\t\t'\\t\\tyTicks={false}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\twithoutYbaseline={false}\\n' +\r\n\t\t\t\t\t'\\t\\tdiverging\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"time-scale-scatter\"\r\n\t\t\t\t\t\t\t\tdata={serie_5_time_iso_2hours}\r\n\r\n\t\t\t\t\t\t\t\txSourcePath=\"time\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"some_value_1\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\r\n\t\t\t\t\t\t\t\tisSerie\r\n\t\t\t\t\t\t\t\tpointRadius={3}\r\n\r\n\t\t\t\t\t\t\t\txScaleType=\"time\"\r\n\t\t\t\t\t\t\t\txValuesSize={5}\r\n\t\t\t\t\t\t\t\txOptions={{\r\n\t\t\t\t\t\t\t\t\taxisValueFormat: 'H:mm',\r\n\t\t\t\t\t\t\t\t\tpopupValueFormat: 'D MMMM YYYY (H:mm)',\r\n\t\t\t\t\t\t\t\t\tname: 'Time'\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tyLabel\r\n\t\t\t\t\t\t\t\tyTicks={false}\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tname: 'Temperature',\r\n\t\t\t\t\t\t\t\t\tunit: '°C',\r\n\t\t\t\t\t\t\t\t\tmin: -100,\r\n\t\t\t\t\t\t\t\t\tmax: 100\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tdiverging\r\n\t\t\t\t\t\t\t\twithoutYbaseline={true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<p>Moreover, it is possible to set <InlineCodeHighlighter>logarithmic</InlineCodeHighlighter> scale, both for axis x and y.</p>\r\n\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{`<HoverHandler>\r\n\\t<ScatterChart\r\n\\t\\tkey=\"logarithmic\"\r\n\\t\\tdata={log_50}\r\n\r\n\\t\\txSourcePath=\"data.exp2\"\r\n\\t\\tySourcePath=\"data.exp1\"\r\n\\t\\tnameSourcePath=\"data.name\"\r\n\\t\\tkeySourcePath=\"key\"\r\n\r\n\\t\\tinnerPaddingLeft={0}\r\n\r\n\\t\\txScaleType=\"logarithmic\"\r\n\\t\\txOptions={{\r\n\\t\\t\\tmin: 1,\r\n\\t\\t\\tmax: 10000\r\n\\t\\t}}\r\n\r\n\\t\\tyValuesSize={4}\r\n\\t\\tyScaleType=\"logarithmic\"\r\n\\t\\tyOptions={{\r\n\\t\\t\\tmin: 1,\r\n\\t\\t\\tmax: 10000\r\n\\t\\t}}\r\n\\t/>\r\n</HoverHandler>`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"logarithmic\"\r\n\t\t\t\t\t\t\t\tdata={log_50}\r\n\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.exp2\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.exp1\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\r\n\t\t\t\t\t\t\t\tinnerPaddingLeft={0}\r\n\r\n\t\t\t\t\t\t\t\txScaleType=\"logarithmic\"\r\n\t\t\t\t\t\t\t\txOptions={{\r\n\t\t\t\t\t\t\t\t\tmin: 1,\r\n\t\t\t\t\t\t\t\t\tmax: 10000\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tyValuesSize={4}\r\n\t\t\t\t\t\t\t\tyScaleType=\"logarithmic\"\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tmin: 1,\r\n\t\t\t\t\t\t\t\t\tmax: 10000\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\t\t\t\t<h3>Show legend</h3>\r\n\t\t\t\t<p>A legend could be used in line chart or scatter and is hidden by default. To show the legend just add <InlineCodeHighlighter>legend</InlineCodeHighlighter> prop. In the examples below you can se the legend usage for all types of cartesian charts.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"cartesians-docs-chart-legend-line\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\",\"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tlegend\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"cartesians-docs-chart-legend-line\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\t\tlegend\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ScatterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"cartesians-docs-chart-legend-scatter\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_2\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tdefaultSchemeBarColors\\n' +\r\n\t\t\t\t\t'\\t\\tlegend\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"cartesians-docs-chart-legend-scatter\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_2\"\r\n\r\n\t\t\t\t\t\t\t\tdefaultSchemePointColors\r\n\t\t\t\t\t\t\t\tlegend\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CartesianCharts;","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\nimport sample_15 from \"../../../../mockData/sample_15\";\r\nimport sample_200 from \"../../../../mockData/sample_200\";\r\nimport sample_serie_4 from \"../../../../mockData/sample_serie_4\";\r\nimport diverging_stacked from \"../../../../mockData/columnChart/diverging_stacked_sample\";\r\nimport {ColumnChart} from '@gisatcz/ptr-charts';\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\n\r\nimport Page, {\r\n\tDocsToDoInline,\r\n\tInlineCodeHighlighter,\r\n\tLightDarkBlock,\r\n\tSyntaxHighlighter\r\n} from '../../../../Page';\r\nimport {Link} from \"react-router-dom\";\r\nimport ResizableContainer from \"../../../../ResizableContainer/ResizableContainer\";\r\nimport ComponentPropsTable from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\n\r\nclass ColumnChartDoc extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Column chart\">\r\n\t\t\t\t<div className=\"ptr-docs-visualizations-intro-example\">\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\tmaxWidth={50}\r\n\r\n\t\t\t\t\t\t\tkey=\"typical-example\"\r\n\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\r\n\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"desc\"]]}\r\n\t\t\t\t\t\t\txValuesSize={5}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>A column chart presents categorical data with rectangular bars with heights proportional to the values that they represent. Currently, the column charts can show vertical bars only. Use this type of chart to <b>show attribute value for multiple cases</b> ( e.g. areas), or to show multiple comparable attribute values for one case.</p>\r\n\r\n\t\t\t\t<h2 id=\"props\">Props</h2>\r\n\t\t\t\t<p>Bellow are listed specific props for column chart. Other props are common to all cartesian charts (<Link to=\"/components/visualizations/CartesianCharts\">see Cartesian charts documentation</Link>).</p>\r\n\r\n\t\t\t\t<ComponentPropsTable\r\n\t\t\t\t\tcontent={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"defaultSchemeBarColors\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"By default, all bars in chart have one color. Set to true to have own color for each bar, if there is no color defined in input data.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"defaultColor\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: \"Default color of bars.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"highlightColor\",\r\n\t\t\t\t\t\t\ttype: \"string|object\",\r\n\t\t\t\t\t\t\tdescription: \"Color which is used for hover.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"minBarWidth\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"4\",\r\n\t\t\t\t\t\t\tdescription: \"Minimal width of bar in pixels. Bars will be aggregated, if the width is smaller.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"barGapRatio\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"0.35\",\r\n\t\t\t\t\t\t\tdescription: \"Bar width to gap between bars width ratio.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"animateChangeData\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true\",\r\n\t\t\t\t\t\t\tdescription: \"Rendering of values is by default animated. Sometime we want fast switch of values without animation. Set to false to turn off animation.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"hoverValueSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: <>Path to value show in hover. If 'hoverValueSourcePath' is undefined, then 'valueSourcePath' use as value. See <Link to=\"/components/visualizations/asterChart#customHover\">example in Aster chart</Link></>\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"stacked\",\r\n\t\t\t\t\t\t\ttype: \"boolean|string\",\r\n\t\t\t\t\t\t\tdescription: (<>The bars will be composed of segments. There will be one segment per attribute. The attributes has to be defined in <InlineCodeHighlighter>ySourcePath</InlineCodeHighlighter> property. Possible values: 'absolute', 'relative'. If value is not defined, 'absolute' is used by default. See <Link to=\"#stacked\">Stacked section</Link> to find out more.</>)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<h2 id=\"dataStructure\">Input data structure</h2>\r\n\t\t\t\t<p>Input data for line chart has to be a collection, where each object (or its children) must contain at least three key-value pairs, one as a source for key, second as a source for axis x and third as a source for axis y.</p>\r\n\t\t\t\t<p>As the data source it is possible to use <Link to=\"/components/visualizations/cartesianCharts/lineChart#dataStructure\">the same data structure as for line chart</Link> as well. See how such data source is handled in the section <Link to=\"#serialData\">Serial data input handling.</Link></p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{'const data = [\\n' +\r\n\t\t\t\t\t'\\t{\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"230bd221-5384-4c09-bfa3-069eacbcfff8\",   //use \\'key\\' as keySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Missouri\",   //use \\'data.name\\' as nameSourcePath and xSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\tvalue: \"12.56\",   //use \\'data.value\\' as ySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff0000\",   //use \\'data.color\\' as colorSourcePath (if present)\\n' +\r\n\t\t\t\t\t'\\t\\t} \\n' +\r\n\t\t\t\t\t'\\t}, {\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"91c6851e-c5ef-4165-9b15-8cd987a92904\",\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {...}\\n'\t+\r\n\t\t\t\t\t'\\t},\\n' +\r\n\t\t\t\t\t'\\t...\\n' +\r\n\t\t\t\t\t']'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"basicSettings\">Basic necessary settings</h2>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Sorting is not required, but recommended. \\n' +\r\n\t\t\t\t\t'// Use HoverHandler to see popups when move cursor over line or point. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"basic-settings\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"data.some_value_1\",\"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"basic-settings\"\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"asc\"]]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"serialData\">Serial data input handling</h2>\r\n\t\t\t\t<p>It is possible to use data in serial structure as input data for column chart. Examine <Link to=\"/components/visualizations/cartesianCharts/lineChart#dataStructure\">the Line chart documentation</Link> to get an overview of the data structure, as well as the example below to see how such data is handled.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"serial-data-input\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.data[3].someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"data.data[3].someStrangeValue\",\"desc\"]]}\\n' +\r\n\t\t\t\t\t'\\t\\txValuesSize={4}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tmaxWidth={50}\r\n\r\n\t\t\t\t\t\t\t\tkey=\"serial-data-input\"\r\n\t\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.data[3].someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.data[3].someStrangeValue\", \"desc\"]]}\r\n\t\t\t\t\t\t\t\txValuesSize={4}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"barColors\">Custom bar colors</h2>\r\n\r\n\t\t\t\t<p>By default, all the bars have the same color (accent color from CSS). However, it is possible to change this color using <InlineCodeHighlighter>defaultColor</InlineCodeHighlighter> property as well as the color for hover using   <InlineCodeHighlighter>highlightColor</InlineCodeHighlighter> property.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"default-color\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"data.some_value_1\",\"desc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tdefaultColor=\"#ffaaaa\"\\n' +\r\n\t\t\t\t\t'\\t\\thighlightColor=\"#ff0000\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"default-color\"\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"desc\"]]}\r\n\r\n\t\t\t\t\t\t\t\tdefaultColor=\"#ffaaaa\"\r\n\t\t\t\t\t\t\t\thighlightColor=\"#ff0000\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<p>In some cases, it will be useful if every column has its own color (e.g. for visualizing elections results). There are two options to achieve it. Either use <InlineCodeHighlighter>defaultSchemeBarColors</InlineCodeHighlighter> to assign colors from D3 scheme, or define your own colors in input data. Then use <InlineCodeHighlighter>colorSourcePath</InlineCodeHighlighter> property instead.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"colored\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"data.some_value_1\",\"desc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tdefaultSchemeBarColors\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"colored\"\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"desc\"]]}\r\n\r\n\t\t\t\t\t\t\t\tdefaultSchemeBarColors\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"aggregation\">Aggregation</h2>\r\n\r\n\t\t\t\t<p>There are two options how to involve bars aggregation. First of them is <InlineCodeHighlighter>minBarWidth</InlineCodeHighlighter> which defines minimal width of bar in pixels. </p><p>The other one is <InlineCodeHighlighter>barGapRatio</InlineCodeHighlighter> which is the ratio between the bar width and the width of the gap next to the bar. Please notice that there are two gaps for each bar, one on the left and one on the right. So the ratio 0.5 actually means that the gap between two bars will have the same width as the bar itself.</p>\r\n\t\t\t\t<p>Try to resize to see how <InlineCodeHighlighter>minBarWidth</InlineCodeHighlighter> and <InlineCodeHighlighter>barGapRatio</InlineCodeHighlighter> involve aggregation.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"aggregation\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"data.some_value_1\",\"desc\"]]}\\n' +\r\n\t\t\t\t\t'\\t\\txValuesSize={5}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tminBarWidth={15}\\n' +\r\n\t\t\t\t\t'\\t\\tbarGapRatio={0.5}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"aggregation\"\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"desc\"]]}\r\n\t\t\t\t\t\t\t\txValuesSize={5}\r\n\r\n\t\t\t\t\t\t\t\tminBarWidth={15}\r\n\t\t\t\t\t\t\t\tbarGapRatio={0.5}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<p>If number of items in data is too big the bars are aggregated as well. We use 200 items in the example below. The narrower is the chart, the more items are aggregated into one bar. Hover the chart to see the bars.</p>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"aggregation-200\"\r\n\t\t\t\t\t\t\t\tdata={sample_200}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_1\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.some_value_1\", \"desc\"]]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"diverging\">Diverging bars</h2>\r\n\t\t\t\t<p>Use <InlineCodeHighlighter>diverging</InlineCodeHighlighter> prop if the values are diverging from some point (typically positive and negative values). The point of diversion can be set via <InlineCodeHighlighter>yOptions</InlineCodeHighlighter>. All the bars representing values greater than the <InlineCodeHighlighter>diversionValue</InlineCodeHighlighter> will be rendered upwards and vice versa.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Sorting is not required, but recommended, especially for aggregated bars. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"diverging-bars\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_2\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"data.some_value_2\",\"desc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tdiverging\\n' +\r\n\t\t\t\t\t'\\t\\txGridlines\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tdiversionValue: 3\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"diverging-chart\"\r\n\t\t\t\t\t\t\t\tdata={sample_15}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_2\"\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"data.some_value_2\", \"desc\"]]}\r\n\r\n\t\t\t\t\t\t\t\tminBarWidth={4}\r\n\t\t\t\t\t\t\t\tdiverging\r\n\t\t\t\t\t\t\t\txGridlines\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tdiversionValue: 3,\r\n\t\t\t\t\t\t\t\t\tname: \"Random attribute with pretty looooooooooong name\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\t\t\t\t<p>Set <InlineCodeHighlighter>diverging='double'</InlineCodeHighlighter> if you want to render bars both upwards and downwards for the same item. In this case, <InlineCodeHighlighter>ySourcePath</InlineCodeHighlighter> must be an array containing paths to both values.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Sorting is not required, but recommended, especially for aggregated bars. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"diverging-bars\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath={[\"data.positive\",\"data.negative\"]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tdiverging=\"double\"\\n' +\r\n\t\t\t\t\t'\\t\\txGridlines\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"diverging-chart\"\r\n\t\t\t\t\t\t\t\tdata={diverging_stacked}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath={[\"data.positive\", \"data.negative\"]}\r\n\r\n\t\t\t\t\t\t\t\tdiverging=\"double\"\r\n\t\t\t\t\t\t\t\txGridlines\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"stacked\">Stacked bars</h2>\r\n\t\t\t\t<p>Stacked bars are useful to visualize more attributes in one bar at once. The attributes have to be defined in <InlineCodeHighlighter>ySourcePath</InlineCodeHighlighter> property. Stacked bars could be either absolute (default option) or <Link to=\"#stacked-relative\">relative</Link>. It is also possible to <Link to=\"#stacked-diverging\">combine diverging and stacked absolute bars</Link>.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// See ySourcePath. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"stacked-chart\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath={[{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part1\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part1\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff0000\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part2\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part2\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#00ff00\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part3\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part3\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff00ff\"\\n' +\r\n\t\t\t\t\t'\\t\\t}]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txValuesSize={5}\\n' +\r\n\t\t\t\t\t'\\t\\txGridlines\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txLabel\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{ \\n'+\r\n\t\t\t\t\t'\\t\\t\\tname: \"Random attribute\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tstacked\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"stacked-chart\"\r\n\t\t\t\t\t\t\t\tdata={diverging_stacked}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath={[\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part1\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 1\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#ff0000\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part2\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 2\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#00ff00\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part3\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 3\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#ff00ff\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t]}\r\n\r\n\t\t\t\t\t\t\t\txValuesSize={5}\r\n\t\t\t\t\t\t\t\txGridlines\r\n\r\n\t\t\t\t\t\t\t\tyLabel\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tname: \"Random attribute with pretty looooooooooong name\"\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tstacked\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3 id=\"stacked-relative\">Relative stacked bars</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// See ySourcePath. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"stacked-chart-relative\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath={[{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part1\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part1\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff0000\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part2\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part2\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#00ff00\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part3\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part3\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff00ff\"\\n' +\r\n\t\t\t\t\t'\\t\\t}]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txValuesSize={5}\\n' +\r\n\t\t\t\t\t'\\t\\txGridlines\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txLabel\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{ \\n'+\r\n\t\t\t\t\t'\\t\\t\\tname: \"Random attribute\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tstacked=\"relative\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"stacked-chart-relative\"\r\n\t\t\t\t\t\t\t\tdata={diverging_stacked}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath={[\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part1\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 1\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#ff0000\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part2\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 2\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#00ff00\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part3\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 3\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#ff00ff\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t]}\r\n\r\n\t\t\t\t\t\t\t\txValuesSize={5}\r\n\t\t\t\t\t\t\t\txGridlines\r\n\r\n\t\t\t\t\t\t\t\tyLabel\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tname: \"Random attribute\"\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tstacked=\"relative\"\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h3 id=\"stacked-diverging\">Diverging stacked bars</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// See ySourcePath. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ColumnChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"stacked-diverging-chart\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath={[{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part1\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part1\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff0000\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part2\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part2\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#00ff00\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part3\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part3\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff00ff\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part4\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part4\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ffff00\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part5\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part5\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#aaccff\"\\n' +\r\n\t\t\t\t\t'\\t\\t},{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tpath: \"data.part6\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Part6\",\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#0000ff\"\\n' +\r\n\t\t\t\t\t'\\t\\t}]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txValuesSize={5}\\n' +\r\n\t\t\t\t\t'\\t\\txGridlines\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txLabel\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{ \\n'+\r\n\t\t\t\t\t'\\t\\t\\tname: \"Random attribute\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tstacked\\n' +\r\n\t\t\t\t\t'\\t\\tdiverging=\"double\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\t\tkey=\"stacked-diverging-chart\"\r\n\t\t\t\t\t\t\t\tdata={diverging_stacked}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tySourcePath={[\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part1\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Very loooooooooong part name, realy loooooooong\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#ff0000\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part2\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 2\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#00ff00\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part3\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 3\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#ff00ff\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part4\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 4\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#ffff00\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part5\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 5\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#aaccff\"\r\n\t\t\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\t\t\tpath: \"data.part6\",\r\n\t\t\t\t\t\t\t\t\t\tname: \"Part 6\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#0000ff\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t]}\r\n\r\n\t\t\t\t\t\t\t\txValuesSize={5}\r\n\t\t\t\t\t\t\t\txGridlines\r\n\r\n\t\t\t\t\t\t\t\tyLabel\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tname: \"Random attribute\",\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tstacked\r\n\t\t\t\t\t\t\t\tdiverging=\"double\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withNamespaces()(ColumnChartDoc);","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\nimport {LineChart} from '@gisatcz/ptr-charts';\r\n\r\nimport sample_serie_4 from \"../../../../mockData/sample_serie_4\";\r\nimport sample_serie_30 from \"../../../../mockData/sample_serie_30\";\r\nimport sample_serie_500 from \"../../../../mockData/sample_serie_500\";\r\n\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport Page, {\r\n\tInlineCodeHighlighter,\r\n\tLightDarkBlock,\r\n\tSyntaxHighlighter\r\n} from \"../../../../Page\";\r\nimport ResizableContainer from \"../../../../ResizableContainer/ResizableContainer\";\r\nimport ComponentPropsTable, {Prop, PropOption} from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\n\r\nclass LineChartDoc extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Line chart\">\r\n\t\t\t\t<div className=\"ptr-docs-visualizations-intro-example\">\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\tkey=\"line-chart-doc-typical-usage-2\"\r\n\t\t\t\t\t\t\tmaxWidth={50}\r\n\r\n\t\t\t\t\t\t\txScaleType=\"time\"\r\n\r\n\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\txOptions={{\r\n\t\t\t\t\t\t\t\tinputValueFormat: 'YYYY',\r\n\t\t\t\t\t\t\t\taxisValueFormat: 'YYYY',\r\n\t\t\t\t\t\t\t\tpopupValueFormat: 'YYYY',\r\n\t\t\t\t\t\t\t\tname: 'Time'\r\n\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p>A line chart is a type of chart which displays information as a series of data points connected by straight line segments. Use this type of chart to <b>show progress</b> of one attribute/indicator in the time, or to show progress of multiple comparable attributes/indicators for one area.</p>\r\n\r\n\t\t\t\t<h2 id=\"props\">Props</h2>\r\n\t\t\t\t<p>Bellow are listed specific props for line chart. Other props are common to all cartesian charts (<Link to=\"/components/visualizations/CartesianCharts\">see Cartesian charts documentation</Link>).</p>\r\n\t\t\t\t<ComponentPropsTable>\r\n\t\t\t\t\t<Prop name=\"aggregationThreshold\" type=\"number\" defaultValue={50}>f there is more lines than threshold, lines will be aggregated to average, min and max.</Prop>\r\n\t\t\t\t\t<Prop name=\"forceMode\" type=\"string\">Set the mode independently of number of lines. Possible values: 'gray' or 'aggregated'</Prop>\r\n\t\t\t\t\t<Prop name=\"grayingThreshold\" type=\"number\" defaultValue={10}>If there are more lines than threshold, lines will be gray.</Prop>\r\n\t\t\t\t\t<Prop name=\"pointNameSourcePath\" type=\"string\">Path to name for point in source data.</Prop>\r\n\t\t\t\t\t<Prop name=\"pointOptions\" type=\"object\">\r\n\t\t\t\t\t\t<PropOption name=\"showOnHover\" type=\"boolean\">Show line points on hover. Only if withPoints is set to true.</PropOption>\r\n\t\t\t\t\t</Prop>\r\n\t\t\t\t\t<Prop name=\"withPoints\" type=\"boolean\" defaultValue={false}>If true, lines will be rendered with points.</Prop>\r\n\t\t\t\t</ComponentPropsTable>\r\n\t\t\t\t<h2 id=\"dataStructure\">Input data structure</h2>\r\n\t\t\t\t<p>Input data for line chart has to be a collection, where each object must contain at least key and collection of attribute data objects. The attribute data object must contain at least two key-value pairs, one as source for axis x and second as source for axis y.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{'const data = [\\n' +\r\n\t\t\t\t\t'\\t{\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"230bd221-5384-4c09-bfa3-069eacbcfff8\",   //use \\'key\\' as keySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Missouri\",   //use \\'data.name\\' as nameSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff0000\",   //use \\'data.color\\' as colorSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\tdata: [{   //use \\'data.data\\' as serieDataSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tperiod: 2006,   //use \\'period\\' as xSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tsomeStrangeValue: 1532   //use \\'someStrangeValue\\' as ySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\t}, {\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tperiod: 1991,\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tsomeStrangeValue\": null\\n' +\r\n\t\t\t\t\t'\\t\\t\\t}, ...]\\n' +\r\n\t\t\t\t\t'\\t\\t}\\n' +\r\n\t\t\t\t\t'\\t}, {\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"91c6851e-c5ef-4165-9b15-8cd987a92904\",\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {...}\\n'\t+\r\n\t\t\t\t\t'\\t},\\n' +\r\n\t\t\t\t\t'\\t...\\n' +\r\n\t\t\t\t\t']'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h2 id=\"basicSettings\">Basic necessary settings</h2>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Sorting is not required, but recommended. \\n' +\r\n\t\t\t\t\t'// Use HoverHandler to see popups when move cursor over line or point. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"test1\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\", \"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"test1\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h2 id=\"withoutPoints\">Lines without points</h2>\r\n\t\t\t\t<p>For simple use cases, it is possible to show line chart without points by setting <InlineCodeHighlighter>withPoints</InlineCodeHighlighter> prop to false. Be aware that you will lose information about values in popups in this case.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"without-points\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\", \"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\twithPoints={false}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"without-points\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\t\twithPoints={false}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h2 id=\"graying\">Graying and aggregation</h2>\r\n\t\t\t\t<p>As you can see in the examples above, every line in the chart has its own color, so the chart is easy to read. However, the more lines are in the chart, the worse is the readability. Graying mode helps solve these cases.</p>\r\n\t\t\t\t<p>By default, <InlineCodeHighlighter>grayingThreshold</InlineCodeHighlighter> is set to 10, so if there are more than 10 lines (and less than aggregation threshold at the same time), all lines will have gray color and no points. In the example below, data with 30 items is used.</p>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"without-points\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_30}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<p>Number of items in input data could be dynamic in real-world use cases and so setting of grayingThreshold would not be enough. In this case is useful the <InlineCodeHighlighter>forceMode</InlineCodeHighlighter> property. If we set its value to \"gray\", the lines will be always gray. In the example below, data with 4 items is used.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"graying-threshold\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\",\"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tforceMode=\"gray\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"without-points\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\t\tforceMode=\"gray\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<p>At the end of the day, even the chart with gray lines only will be confusing for big number of lines and we have to aggregate lines to average values and buffer. By default, <InlineCodeHighlighter>aggregationThreshold</InlineCodeHighlighter> is set to 50, but again we can change the value or use <InlineCodeHighlighter>forceMode</InlineCodeHighlighter> property. </p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Data with 500 items. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"aggregation-threshold\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\", \"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"aggregation-threshold\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_500}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Data with 4 items forced to aggregation. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<LineChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"aggregation-forced\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tsorting={[[\"period\",\"asc\"]]}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tforceMode=\"aggregated\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\t\tkey=\"without-points\"\r\n\r\n\t\t\t\t\t\t\t\tdata={sample_serie_4}\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\txSourcePath=\"period\" // in context of serie\r\n\t\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]} // not required, but recommended\r\n\r\n\t\t\t\t\t\t\t\tforceMode=\"aggregated\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withNamespaces()(LineChartDoc);","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport {ScatterChart} from '@gisatcz/ptr-charts';\r\n\r\nimport sample_50 from \"../../../../mockData/sample_50\";\r\n\r\nimport sample_serie_10 from \"../../../../mockData/scatterChart/serie_10\";\r\nimport Page, {\r\n\tDocsToDo,\r\n\tImplementationToDo,\r\n\tInlineCodeHighlighter,\r\n\tLightDarkBlock,\r\n\tSyntaxHighlighter\r\n} from \"../../../../Page\";\r\nimport ComponentPropsTable from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ResizableContainer from \"../../../../ResizableContainer/ResizableContainer\";\r\n\r\nclass ScatterChartDoc extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Scatter chart\">\r\n\t\t\t\t<div className=\"ptr-docs-visualizations-intro-example\">\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\tkey=\"typical-usage\"\r\n\t\t\t\t\t\t\tdata={sample_50}\r\n\r\n\t\t\t\t\t\t\txSourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\tySourcePath=\"data.some_value_2\"\r\n\t\t\t\t\t\t\tzSourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\r\n\t\t\t\t\t\t\tinnerPaddingRight={0}\r\n\t\t\t\t\t\t\tinnerPaddingTop={0}\r\n\t\t\t\t\t\t\tinnerPaddingLeft={0}\r\n\r\n\t\t\t\t\t\t\tmaxWidth={30}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p>A scatter chart is a type of chart using Cartesian coordinates to display values for two attributes. One attribute value is the position on the horizontal axis x and second attribute value is the position on the vertical axis y. Use this type of chart to <b>show relation between two attributes</b> for one or multiple cases in one or multiple points in time.</p>\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"props\">Props</h2>\r\n\t\t\t\t<p>Bellow are listed specific props for scatter chart. Other props are common to all cartesian charts (<Link to=\"/components/visualizations/CartesianCharts\">see Cartesian charts documentation</Link>).</p>\r\n\t\t\t\t<ComponentPropsTable\r\n\t\t\t\t\tcontent={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"defaultSchemePointColors\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"By default, all points in chart have one color. Set to true to have own color for each point (or serie), if there is no color defined in input data.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"pointRadius\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"5\",\r\n\t\t\t\t\t\t\tdescription: \"Radius of points in pixels.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"isSerie\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: \"True for serial source data.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"itemNameSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: \"Required if isSerie is true.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"pointSymbol\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdefault: \"circle\",\r\n\t\t\t\t\t\t\tdescription: \"Other possible values: 'plus'\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"zSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: \"Path to value for point size. If data are serial, the path is in the context of the serie.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"zOptions\",\r\n\t\t\t\t\t\t\ttype: \"object\",\r\n\t\t\t\t\t\t\tobjectPropsDescription: [{\r\n\t\t\t\t\t\t\t\tname: \"name\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: \"Z attrribute title.\"\r\n\t\t\t\t\t\t\t},{\r\n\t\t\t\t\t\t\t\tname: \"unit\",\r\n\t\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\t\tdescription: \"Z attribute units\"\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"dataStructure\">Input data structure</h2>\r\n\t\t\t\t<p>There are two ways of data structure for scatter chart:</p>\r\n\t\t\t\t<ul className=\"ptr-docs-basic-list\">\r\n\t\t\t\t\t<li><b>Basic</b> - collection, where each object (or its children) must contain at least 4 key-value pairs, one as a source for key, second a source of name, third as a source for axis x and fourth as a source for axis y.</li>\r\n\t\t\t\t\t<li><b>Serial</b> - collection, where each object must contain at least source for key, name and collection of attribute data objects. The attribute data object must contain at least three key-value pairs, one as source for axis x, second as source for axis y and third as source for item name (such a period).</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3>Example of basic data structure</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{'const data = [\\n' +\r\n\t\t\t\t\t'\\t{\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"230bd221-5384-4c09-bfa3-069eacbcfff8\",   //use \\'key\\' as keySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff0000\",   //use \\'data.color\\' as colorSourcePath (if present)\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Missouri\",   //use \\'data.name\\' as nameSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\tattribute_1: \"12.56\",   //use \\'data.attribute_1\\' as xSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\tattribute_2: \"-45\",   //use \\'data.attribute_2\\' as ySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t} \\n' +\r\n\t\t\t\t\t'\\t}, {\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"91c6851e-c5ef-4165-9b15-8cd987a92904\",\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {...}\\n'\t+\r\n\t\t\t\t\t'\\t},\\n' +\r\n\t\t\t\t\t'\\t...\\n' +\r\n\t\t\t\t\t']'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h3>Example of serial data structure</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{'const data = [\\n' +\r\n\t\t\t\t\t'\\t{\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"230bd221-5384-4c09-bfa3-069eacbcfff8\",   //use \\'key\\' as keySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Missouri\",   //use \\'data.name\\' as nameSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff0000\",   //use \\'data.color\\' as colorSourcePath (if present)\\n' +\r\n\t\t\t\t\t'\\t\\t\\tdata: [{   //use \\'data.data\\' as serieDataSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tperiod: 2006,   //use \\'period\\' as itemNameSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tsomeStrangeValue: 1532   //use \\'someStrangeValue\\' as xSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\totherValue: -25   //use \\'otherValue\\' as ySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\t}, {\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tperiod: 1991,\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\tsomeStrangeValue: 2536\\n' +\r\n\t\t\t\t\t'\\t\\t\\t\\totherValue: -22.54\\n' +\r\n\t\t\t\t\t'\\t\\t\\t}, ...]\\n' +\r\n\t\t\t\t\t'\\t\\t}\\n' +\r\n\t\t\t\t\t'\\t}, {\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"91c6851e-c5ef-4165-9b15-8cd987a92904\",\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {...}\\n'\t+\r\n\t\t\t\t\t'\\t},\\n' +\r\n\t\t\t\t\t'\\t...\\n' +\r\n\t\t\t\t\t']'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"basicSettings\">Basic necessary settings</h2>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Use HoverHandler to see popups when move cursor over line or point. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ScatterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"basic-settings\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_2\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"basic-settings\"\r\n\t\t\t\t\t\t\t\tdata={sample_50}\r\n\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_2\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"pointRadius\">Point radius</h2>\r\n\t\t\t\t<p>By default, the chart point has 5 pixels wide radius. Set the <InlineCodeHighlighter>pointRadius</InlineCodeHighlighter> property to the size you prefer. Remember, too small or too big points can decrease readability, as you can see in the example bellow.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Use HoverHandler to see popups when move cursor over line or point. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ScatterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"point-radius\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_2\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tpointRadius={10}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"point-radius\"\r\n\t\t\t\t\t\t\t\tdata={sample_50}\r\n\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_2\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\r\n\t\t\t\t\t\t\t\tpointRadius={10}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h2 id=\"serialData\">Serial data handling</h2>\r\n\r\n\t\t\t\t<p>In some cases, it will be useful if every point has its own color (for example to distinguish between data series). There are two options to achieve it. Either use <InlineCodeHighlighter>defaultSchemePointColors</InlineCodeHighlighter> to assign colors from D3 scheme, or define your own colors in input data. Then use <InlineCodeHighlighter>colorSourcePath</InlineCodeHighlighter> property instead.</p>\r\n\r\n\t\t\t\t<p>In the example below we use serial data source. To determine we are using serial data the <InlineCodeHighlighter>isSerie</InlineCodeHighlighter>, <InlineCodeHighlighter>serieDataSourcePath</InlineCodeHighlighter> and <InlineCodeHighlighter>itemNameSourcePath</InlineCodeHighlighter> props are required. See the <Link to='#dataStructure'>Input data structure</Link> section how to set these props.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Notice all the props needed if data are serial. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ScatterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"colors\"\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tisSerie\\n' +\r\n\t\t\t\t\t'\\t\\tserieDataSourcePath=\"data.data\"\\n' +\r\n\t\t\t\t\t'\\t\\titemNameSourcePath=\"period\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"otherValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\txOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Population total\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tunit: \"inhabitans\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tyOptions={{\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Population change\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\tunit: \"%\"\\n' +\r\n\t\t\t\t\t'\\t\\t}}\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tlegend\\n' +\r\n\t\t\t\t\t'\\t\\tdefaultSchemePointColors\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"colors\"\r\n\t\t\t\t\t\t\t\tdata={sample_serie_10}\r\n\r\n\t\t\t\t\t\t\t\tisSerie\r\n\t\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\t\titemNameSourcePath=\"period\" // in context of serie\r\n\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\r\n\t\t\t\t\t\t\t\txSourcePath=\"someStrangeValue\" // in context of serie\r\n\t\t\t\t\t\t\t\txOptions={{\r\n\t\t\t\t\t\t\t\t\tname: \"Population total\",\r\n\t\t\t\t\t\t\t\t\tunit: \"inhabitants\"\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tySourcePath=\"otherValue\" // in context of serie\r\n\t\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t\tname: \"Population change\",\r\n\t\t\t\t\t\t\t\t\tunit: \"%\"\r\n\t\t\t\t\t\t\t\t}}\r\n\r\n\t\t\t\t\t\t\t\tlegend\r\n\r\n\t\t\t\t\t\t\t\tdefaultSchemePointColors\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t\t<h2 id=\"symbols\">Custom symbols</h2>\r\n\t\t\t\t<ImplementationToDo>Currently 'circle' (default) and 'plus' symbols are implemented.</ImplementationToDo>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Use HoverHandler to see popups when move cursor over line or point. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<ScatterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"custom-symbol\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\txSourcePath=\"data.some_value_1\"\\n' +\r\n\t\t\t\t\t'\\t\\tySourcePath=\"data.some_value_2\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tpointSymbol=\"plus\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\t\tkey=\"custom-symbols\"\r\n\t\t\t\t\t\t\t\tdata={sample_50}\r\n\r\n\t\t\t\t\t\t\t\txSourcePath=\"data.some_value_1\"\r\n\t\t\t\t\t\t\t\tySourcePath=\"data.some_value_2\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\r\n\t\t\t\t\t\t\t\tpointSymbol=\"plus\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withNamespaces()(ScatterChartDoc);","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {AsterChart} from \"@gisatcz/ptr-charts\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport Page, {DocsToDo, DocsToDoInline, InlineCodeHighlighter, LightDarkBlock, SyntaxHighlighter} from \"../../../Page\";\r\nimport ResizableContainer from \"../../../ResizableContainer/ResizableContainer\";\r\nimport ComponentPropsTable from \"../../../ComponentPropsTable/ComponentPropsTable\";\r\n\r\nimport sample_4 from \"../../../mockData/asterChart/sample_4\";\r\nimport sample_7 from \"../../../mockData/asterChart/sample_7\";\r\nimport sample_30 from \"../../../mockData/asterChart/sample_30\";\r\n\r\nclass AsterChartDoc extends React.PureComponent {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Aster chart\">\r\n\t\t\t\t<div className=\"ptr-docs-visualizations-intro-example\" style={{maxWidth: '20rem'}}>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\tkey=\"typical-example\"\r\n\t\t\t\t\t\t\tdata={sample_7}\r\n\r\n\t\t\t\t\t\t\tcolorSourcePath=\"color\"\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tvalueSourcePath=\"data.someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\twidth={20}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p>An aster chart is a type of chart using arcs to show the distribution of values by the depth of the arc. All arcs have the same angle. Use this type of chart to <b>show distribution of one attribute for multiple cases</b> or to compare attribute values (which are comparable - relative or with the same units) for one area.</p>\r\n\r\n\r\n\t\t\t\t<h2 id=\"props\">Props</h2>\r\n\t\t\t\t<ComponentPropsTable\r\n\t\t\t\t\tcontent={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"data\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: (<>Input data. See more in <Link to=\"#dataValues\">Data structure section</Link>.</>)\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"forceMinimum\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdescription: (<>Set fixed minimum. See more in <Link to=\"#forceMinMax\">Forced minimum and maximum section</Link>.</>)\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"forceMaximum\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdescription: (<>Set fixed maximum. See more in <Link to=\"#forceMinMax\">Forced minimum and maximum section</Link>.</>)\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"relative\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: (<>Detect if input data are relative. <Link to=\"#relativeValues\">See Relative values section</Link> to find out more.</>)\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"sorting\",\r\n\t\t\t\t\t\t\ttype: \"array\",\r\n\t\t\t\t\t\t\tdescription: \"List of sorting pairs. [[path, order]]. Example: [['period', 'asc']] - it sorts data by 'period' column in ascending order.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"keySourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: \"Path to key value in data item object (e.g. 'key' or 'data.key').\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"nameSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: \"Path to name value in data item object (e.g. 'name' or 'content.name'). If there is no name column in data, use the path to the key.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"colorSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: \"Path to color value in data item object, if it's present.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"valueSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tdescription: \"Path to value in data item object.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"hoverValueSourcePath\",\r\n\t\t\t\t\t\t\ttype: \"string\",\r\n\t\t\t\t\t\t\tdescription: <>Path to text to be shown on hover. If undefined, then value (from 'valueSourcePath') is shown instead. See <Link to=\"/docs/components/visualizations/asterChart#customHover\">Custom Hover section</Link>.</> \r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"width\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdescription: \"Chart width in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"maxWidth\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"30\",\r\n\t\t\t\t\t\t\tdescription: \"Maximal chart width in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"minWidth\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"10\",\r\n\t\t\t\t\t\t\tdescription: \"Minimal chart width in rem.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"padding\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"1\",\r\n\t\t\t\t\t\t\tdescription: \"Chart area padding in rem.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"grid\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true\",\r\n\t\t\t\t\t\t\tdescription: \"Show/hide circular grid.\"\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"gridGapMin\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"1.5\",\r\n\t\t\t\t\t\t\tdescription: <>Minimal gap between grid lines in rem. See more in the <Link to=\"#grid\">Grid section</Link>.</>\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"gridStepsMax\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"10\",\r\n\t\t\t\t\t\t\tdescription: <>Maximal number of grid lines steps. See more in the <Link to=\"#grid\">Grid section</Link>.</>\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"gridValues\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true\",\r\n\t\t\t\t\t\t\tdescription: \"Labels of grid lines.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"radials\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"true\",\r\n\t\t\t\t\t\t\tdescription: <>Radial lines from center of the chart to the edge. There is one radial line for each segment. See more in the <Link to=\"#radials\">Radials & legend section</Link>.</>\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"radialsLabels\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: <>If true, each radial will be numbered clockwise starting from 1.</>\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: \"radialsLabelsSize\",\r\n\t\t\t\t\t\t\ttype: \"number\",\r\n\t\t\t\t\t\t\tdefault: \"1\",\r\n\t\t\t\t\t\t\tdescription: \"A space for radials labels in rem.\"\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"startingAngle\",\r\n\t\t\t\t\t\t\ttype: \"numeric\",\r\n\t\t\t\t\t\t\tdefault: \"\\u03C0\" + \"/2\",\r\n\t\t\t\t\t\t\tdescription: <>The angle in radians where the rendering of segments starts. the angle is based on <a href=\"https://en.wikipedia.org/wiki/Unit_circle\" target=\"_blank\">unit circle</a>.</>\r\n\t\t\t\t\t\t}, {}, {\r\n\t\t\t\t\t\t\tname: \"legend\",\r\n\t\t\t\t\t\t\ttype: \"boolean\",\r\n\t\t\t\t\t\t\tdefault: \"false\",\r\n\t\t\t\t\t\t\tdescription: <>Show legend below chart. See more in the <Link to=\"#radials\">Radials & legend section</Link>.</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<h2 id=\"dataStructure\">Input data structure</h2>\r\n\t\t\t\t<p>Input data for the aster chart has to be a collection, where each object (or its children) must contain at least three key-value pairs, one as a source for key, second as a source for name and third as a source for value.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{'const data = [\\n' +\r\n\t\t\t\t\t'\\t{\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"230bd221-5384-4c09-bfa3-069eacbcfff8\",   //use \\'key\\' as keySourcePath\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {\\n' +\r\n\t\t\t\t\t'\\t\\t\\tname: \"Missouri\",   //use \\'data.name\\' as nameSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\ttemperature: \"12.56\",   //use \\'data.temperature\\' as valueSourcePath\\n' +\r\n\t\t\t\t\t'\\t\\t\\tcolor: \"#ff0000\",   //use \\'data.color\\' as colorSourcePath (if present)\\n' +\r\n\t\t\t\t\t'\\t\\t} \\n' +\r\n\t\t\t\t\t'\\t}, {\\n' +\r\n\t\t\t\t\t'\\t\\tkey: \"91c6851e-c5ef-4165-9b15-8cd987a92904\",\\n' +\r\n\t\t\t\t\t'\\t\\tdata: {...}\\n'\t+\r\n\t\t\t\t\t'\\t},\\n' +\r\n\t\t\t\t\t'\\t...\\n' +\r\n\t\t\t\t\t']'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"basicSettings\">Basic settings</h2>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Use HoverHandler to see popups when move cursor over line or point. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<AsterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"basic-settings\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tcolorSourcePath=\"color\"\\n' +\r\n\t\t\t\t\t'\\t\\tvalueSourcePath=\"data.someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\t\tkey=\"relative-values\"\r\n\t\t\t\t\t\t\t\tdata={sample_7}\r\n\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tcolorSourcePath=\"color\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tvalueSourcePath=\"data.someStrangeValue\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"relativeValues\">Relative values</h2>\r\n\t\t\t\t<p>Input data values may be either absolute or relative. By default, the values are expected to be absolute. Use <InlineCodeHighlighter>relative</InlineCodeHighlighter> property if values are relative. In that case, the % symbol is added to labels and a range is automatically set form 0 to 100.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<AsterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"relative-values\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tcolorSourcePath=\"color\"\\n' +\r\n\t\t\t\t\t'\\t\\tvalueSourcePath=\"data.someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\trelative\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\t\tkey=\"relative-values\"\r\n\t\t\t\t\t\t\t\tdata={sample_30}\r\n\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tcolorSourcePath=\"color\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tvalueSourcePath=\"data.someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\t\trelative\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"dimensions\">Dimensions</h2>\r\n\t\t\t\t<p>By default, minimal width of the chart is set to 10 rem, maximal width to 30 rem and padding to 1 rem. You can change these values using <InlineCodeHighlighter>minWidth</InlineCodeHighlighter>, <InlineCodeHighlighter>maxWidth</InlineCodeHighlighter> and <InlineCodeHighlighter>padding</InlineCodeHighlighter> prop. Try to resize the charts in the examples above and bellow to see the difference.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<AsterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"relative-values\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tcolorSourcePath=\"color\"\\n' +\r\n\t\t\t\t\t'\\t\\tvalueSourcePath=\"data.someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tpadding={3}\\n' +\r\n\t\t\t\t\t'\\t\\tmaxWidth={50}\\n' +\r\n\t\t\t\t\t'\\t\\tminWidth={25}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer\r\n\t\t\t\t\t\t\tmaxWidth={50}\r\n\t\t\t\t\t\t\tminWidth={25}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\t\tkey=\"relative-values\"\r\n\t\t\t\t\t\t\t\tdata={sample_7}\r\n\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tcolorSourcePath=\"color\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tvalueSourcePath=\"data.someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\t\tpadding={3}\r\n\t\t\t\t\t\t\t\tmaxWidth={50}\r\n\t\t\t\t\t\t\t\tminWidth={25}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"forceMinMax\">Forced min & max</h2>\r\n\t\t\t\t<p>If we have a knowledge of the data, it is possible to set minimal and maximal value according to our needs using <InlineCodeHighlighter>forceMinimum</InlineCodeHighlighter> and <InlineCodeHighlighter>forceMaximum</InlineCodeHighlighter> prop. However, try to avoid using <InlineCodeHighlighter>forceMinimum</InlineCodeHighlighter> if there are positive values only in the data. It will have negative impact on readability, because we expect that the scale starts on 0, not 300, as you can see in the example below.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<AsterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"force-min-max\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tcolorSourcePath=\"color\"\\n' +\r\n\t\t\t\t\t'\\t\\tvalueSourcePath=\"data.someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tforceMin={300}\\n' +\r\n\t\t\t\t\t'\\t\\tforceMax={1500}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\t\tkey=\"forceMinMac\"\r\n\t\t\t\t\t\t\t\tdata={sample_7}\r\n\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tcolorSourcePath=\"color\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tvalueSourcePath=\"data.someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\t\tforceMinimum={300}\r\n\t\t\t\t\t\t\t\tforceMaximum={1500}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"grid\">Grid</h2>\r\n\t\t\t\t<p>The grid is shown by default. To hide it set the <InlineCodeHighlighter>grid</InlineCodeHighlighter> property to false. The grid consists of at most 10 equidistant circles (depending on chart size) which are at least 1.5 rem apart. In the example below we set our own maximal number of circles and minimal distance using <InlineCodeHighlighter>gridStepsMax</InlineCodeHighlighter> and <InlineCodeHighlighter>gridGapMin</InlineCodeHighlighter> props. Additionally, it is possible to hide the grid values setting <InlineCodeHighlighter>gridValues</InlineCodeHighlighter> property to false.</p>\r\n\t\t\t\t\t<p>Resize the chart to see how the settings and chart size affects the grid.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<AsterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"grid\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tcolorSourcePath=\"color\"\\n' +\r\n\t\t\t\t\t'\\t\\tvalueSourcePath=\"data.someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\trelative\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tgridGapMin={3}\\n' +\r\n\t\t\t\t\t'\\t\\tgridStepsMax={5}\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\t\tkey=\"grid\"\r\n\t\t\t\t\t\t\t\tdata={sample_30}\r\n\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tcolorSourcePath=\"color\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tvalueSourcePath=\"data.someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\t\trelative\r\n\r\n\t\t\t\t\t\t\t\tgridGapMin={3}\r\n\t\t\t\t\t\t\t\tgridStepsMax={5}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"radials\">Radials & legend</h2>\r\n\t\t\t\t<p>The radials are radial lines from center of the chart to its edge. There is one radial line for each segment and they are shown by default. To hide them set <InlineCodeHighlighter>radials</InlineCodeHighlighter> property to false.</p>\r\n\t\t\t\t<p>If there is a big number of segments it is useful to switch on <InlineCodeHighlighter>radialsLabels</InlineCodeHighlighter> like in the example below to make orientation in the chart easier. It will assign the numbers clockwise starting from 1 to radials.</p>\r\n\t\t\t\t<p>Another component which will make orientation in the chart easier is the legend. Use the <InlineCodeHighlighter>legend</InlineCodeHighlighter> property to show the legend below chart. If the <InlineCodeHighlighter>radialsLabels</InlineCodeHighlighter> are switched on, the legend will contain these labels as well.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<AsterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"radials\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tcolorSourcePath=\"color\"\\n' +\r\n\t\t\t\t\t'\\t\\tvalueSourcePath=\"data.someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tradialsLabels\\n' +\r\n\t\t\t\t\t'\\n' +\r\n\t\t\t\t\t'\\t\\tlegend\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\t\tkey=\"radials\"\r\n\t\t\t\t\t\t\t\tdata={sample_30}\r\n\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tcolorSourcePath=\"color\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tvalueSourcePath=\"data.someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\t\tradialsLabels\r\n\r\n\t\t\t\t\t\t\t\tlegend\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\r\n\t\t\t\t<h2 id=\"customHover\">Custom hover content</h2>\r\n\t\t\t\t<p>It's possible to compose custom hover content value. Custom hover value must be included in passed data. Path to value is set in <InlineCodeHighlighter>hoverValueSourcePath</InlineCodeHighlighter> prop.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">\r\n\t\t\t\t\t{'// Use HoverHandler to see popups when move cursor over line or point. \\n' +\r\n\t\t\t\t\t'<HoverHandler>\\n' +\r\n\t\t\t\t\t'\\t<AsterChart \\n' +\r\n\t\t\t\t\t'\\t\\tkey=\"basic-settings\"\\n' +\r\n\t\t\t\t\t'\\t\\t\\n' +\r\n\t\t\t\t\t'\\t\\tdata={data}\\n' +\r\n\t\t\t\t\t'\\t\\tkeySourcePath=\"key\"\\n' +\r\n\t\t\t\t\t'\\t\\tnameSourcePath=\"data.name\"\\n' +\r\n\t\t\t\t\t'\\t\\tcolorSourcePath=\"color\"\\n' +\r\n\t\t\t\t\t'\\t\\tvalueSourcePath=\"data.someStrangeValue\"\\n' +\r\n\t\t\t\t\t'\\t\\thoverValueSourcePath=\"data.hoverValue\"\\n' +\r\n\t\t\t\t\t'\\t/>\\n' +\r\n\t\t\t\t\t'</HoverHandler>'}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<LightDarkBlock forceRows>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<ResizableContainer>\r\n\t\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\t\tkey=\"relative-values\"\r\n\t\t\t\t\t\t\t\tdata={sample_7}\r\n\r\n\t\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\t\tcolorSourcePath=\"color\"\r\n\t\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\t\tvalueSourcePath=\"data.someStrangeValue\"\r\n\t\t\t\t\t\t\t\thoverValueSourcePath=\"data.hoverValue\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ResizableContainer>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</LightDarkBlock>\r\n\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AsterChartDoc;\r\n","import React from 'react';\r\n\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport {SankeyChart} from \"@gisatcz/ptr-charts\";\r\nimport Page, {DocsToDo, DocsToDoInline, InlineCodeHighlighter, LightDarkBlock, SyntaxHighlighter} from \"../../../Page\";\r\n\r\n// import sample_4 from \"../../../mockData/asterChart/sample_4\";\r\nimport sample_1 from \"../../../mockData/sankeyChart/sample_1.json\";\r\n// import sample_30 from \"../../../mockData/asterChart/sample_30\";\r\n\r\nclass SankeyChartDocs extends React.PureComponent {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Sankey chart\">\r\n\t\t\t\t<div className=\"ptr-docs-visualizations-intro-example\" style={{maxWidth: '50rem'}}>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<SankeyChart\r\n\t\t\t\t\t\t\tkey=\"typical-example\"\r\n\t\t\t\t\t\t\tdata={sample_1}\r\n\r\n\t\t\t\t\t\t\tnodeColorSourcePath=\"color\"\r\n\t\t\t\t\t\t\tlinkColorSourcePath=\"color\"\r\n\t\t\t\t\t\t\tlinkNameSourcePath=\"name\"\r\n\t\t\t\t\t\t\tlinkValueSourcePath=\"value\"\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnodeNameSourcePath=\"id\"\r\n\t\t\t\t\t\t\tnodeValueSourcePath=\"value\"\r\n\t\t\t\t\t\t\tnodeHoverNameSourcePath=\"name\"\r\n\t\t\t\t\t\t\tnodeHoverValueSourcePath=\"hoverValue\"\r\n\t\t\t\t\t\t\t// gradientLinks\r\n\t\t\t\t\t\t\twidth={50}\r\n\t\t\t\t\t\t\theight={40}\r\n\t\t\t\t\t\t\tyOptions={{\r\n\t\t\t\t\t\t\t\t// name: 'Node title',\r\n\t\t\t\t\t\t\t\tunit: 'm2'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SankeyChartDocs;\r\n","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\n\r\nimport Page from '../../../Page';\r\nimport {Input, InputWrapper, InputWrapperInfo} from '@gisatcz/ptr-atoms';\r\n\r\nclass FormsDoc extends React.PureComponent {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Forms\">\r\n\t\t\t\t<h2>Basic text</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<Input/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Basic text with deafult value</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tvalue=\"Strawberry\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Basic text with placeholder</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tplaceholder=\"Placeholder\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Basic text disabled</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tvalue=\"Strawberry\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Basic text</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section inverted\">\r\n\t\t\t\t\t<Input inverted/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Basic text with deafult value</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section inverted\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\tvalue=\"Strawberry\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Basic text with placeholder</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section inverted\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\tplaceholder=\"Placeholder\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Basic text disabled</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section inverted\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tinverted\r\n\t\t\t\t\t\tvalue=\"Strawberry\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Multiline text</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Multiline text with value</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\tvalue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Multiline text disabled</h2>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\tvalue=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>Basic</h2>\r\n\t\t\t\t\t<InputWrapper\r\n\t\t\t\t\t\tlabel=\"Input\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tvalue=\"Blueberry\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputWrapper>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>Basic required</h2>\r\n\t\t\t\t\t<InputWrapper\r\n\t\t\t\t\t\tlabel=\"Input\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tvalue=\"Cranberry\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</InputWrapper>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>With info</h2>\r\n\t\t\t\t\t<InputWrapper\r\n\t\t\t\t\t\tlabel=\"Input\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tvalue=\"Cranberry\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<InputWrapperInfo>\r\n\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n\t\t\t\t\t\t</InputWrapperInfo>\r\n\t\t\t\t\t</InputWrapper>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withNamespaces()(FormsDoc);","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\nimport _ from 'lodash';\r\n\r\nimport {MultiSelect} from \"@gisatcz/ptr-atoms\";\r\n\r\nimport Page from '../../../Page';\r\n\r\nconst baseOptions = ['Chocolate', 'Strawberry', 'Vanilla'];\r\n\r\nconst customOptions = [\r\n\t{data: {labelCz: 'Čokoláda', key: 'adsddfsfds'}},\r\n\t{data: {labelCz: 'Jahoda', key: '7457784567'}  },\r\n\t{data: {labelCz: 'Vanilka', key: 'dfgdfg84g'}  }\r\n];\r\n\r\nclass ItemSelectDoc extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tbaseOptions: baseOptions,\r\n\t\t\tbaseSelectedValues: ['Chocolate', 'Vanilla'],\r\n\r\n\t\t\tcustomOptions: customOptions,\r\n\t\t\tcustomSelectedValues: [customOptions[1]],\r\n\r\n\t\t\tcreatableBaseOptions: baseOptions,\r\n\t\t\tcreatableBaseSelectedValues: null,\r\n\r\n\t\t\tcreatableCustomOptions: customOptions,\r\n\t\t\tcreatableCustomSelectedValues: ['dfgdfg84g'],\r\n\r\n\t\t\tsingleValueMultiselectOptions: customOptions,\r\n\t\t\tsingleValueMultiselectValue: 'dfgdfg84g'\r\n\t\t};\r\n\t}\r\n\r\n\tonChange(type, selectedValues) {\r\n\t\tthis.setState({[type]: selectedValues});\r\n\t}\r\n\r\n\tonAdd(optionsKey, selectedKeys, option) {\r\n\t\tthis.setState({\r\n\t\t\t[optionsKey]: this.state[optionsKey] ? [...this.state[optionsKey], option] : [option],\r\n\t\t\t[selectedKeys]: this.state[selectedKeys] ? [...this.state[selectedKeys], option]  : [option]\r\n\t\t});\r\n\t}\r\n\r\n\tonOptionClick(keyPath, option) {\r\n\t\tif (keyPath) {\r\n\t\t\twindow.alert(`Clicked: ${_.get(option, keyPath)}`)\r\n\t\t} else {\r\n\t\t\twindow.alert(`Clicked: ${option}`)\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Item select\">\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>Basic multiselect</h2>\r\n\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\toptions = {this.state.baseOptions}\r\n\t\t\t\t\t\tselectedValues = {this.state.baseSelectedValues}\r\n\r\n\t\t\t\t\t\tonChange={(evt) => {this.onChange('baseSelectedValues', evt)}}\r\n\t\t\t\t\t\tonOptionLabelClick={(evt) => {this.onOptionClick(null, evt)}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>Disabled</h2>\r\n\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\toptions = {this.state.baseOptions}\r\n\t\t\t\t\t\tselectedValues = {this.state.baseSelectedValues}\r\n\r\n\t\t\t\t\t\tonChange={(evt) => {this.onChange('baseSelectedValues', evt)}}\r\n\t\t\t\t\t\tonOptionLabelClick={(evt) => {this.onOptionClick(null, evt)}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>Custom options multiselect</h2>\r\n\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\toptions = {this.state.customOptions}\r\n\t\t\t\t\t\toptionLabel = 'data.labelCz'\r\n\t\t\t\t\t\toptionValue = 'data.key'\r\n\t\t\t\t\t\tselectedValues = {this.state.customSelectedValues}\r\n\r\n\t\t\t\t\t\tonChange={(evt) => {this.onChange('customSelectedValues', evt)}}\r\n\t\t\t\t\t\tonOptionLabelClick={(evt) => {this.onOptionClick('data.key', evt)}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>Creatable</h2>\r\n\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\tcreatable\r\n\t\t\t\t\t\tonAdd={this.onAdd.bind(this, 'creatableBaseOptions', 'creatableBaseSelectedValues')}\r\n\t\t\t\t\t\toptions = {this.state.creatableBaseOptions}\r\n\t\t\t\t\t\tselectedValues = {this.state.creatableBaseSelectedValues}\r\n\r\n\t\t\t\t\t\tonChange={(evt) => {this.onChange('creatableBaseSelectedValues', evt)}}\r\n\t\t\t\t\t\tonOptionLabelClick={(evt) => {this.onOptionClick(null, evt)}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>Custom options creatable with key</h2>\r\n\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\tcreatable\r\n\t\t\t\t\t\tonAdd={this.onAdd.bind(this, 'creatableCustomOptions', 'creatableCustomSelectedValues')}\r\n\t\t\t\t\t\toptions = {this.state.creatableCustomOptions}\r\n\t\t\t\t\t\toptionLabel = 'data.labelCz'\r\n\t\t\t\t\t\toptionValue = 'data.key'\r\n\t\t\t\t\t\tselectedValues = {this.state.creatableCustomSelectedValues}\r\n\t\t\t\t\t\twithKeyPrefix\r\n\r\n\t\t\t\t\t\tonChange={(evt) => {this.onChange('creatableCustomSelectedValues', evt)}}\r\n\t\t\t\t\t\tonOptionLabelClick={(evt) => {this.onOptionClick('data.key', evt)}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ptr-docs-panel-section\">\r\n\t\t\t\t\t<h2>Single value multiselect creatable</h2>\r\n\t\t\t\t\t<MultiSelect\r\n\t\t\t\t\t\tcreatable\r\n\t\t\t\t\t\tonAdd={this.onAdd.bind(this, 'singleValueMultiselectOptions', 'singleValueMultiselectValue')}\r\n\t\t\t\t\t\toptions = {this.state.singleValueMultiselectOptions}\r\n\t\t\t\t\t\toptionLabel = 'data.labelCz'\r\n\t\t\t\t\t\toptionValue = 'data.key'\r\n\t\t\t\t\t\tselectedValues = {this.state.singleValueMultiselectValue}\r\n\t\t\t\t\t\tsingleValue\r\n\t\t\t\t\t\twithKeyPrefix\r\n\r\n\t\t\t\t\t\tonChange={(evt) => {this.onChange('singleValueMultiselectValue', evt)}}\r\n\t\t\t\t\t\tonOptionLabelClick={(evt) => {this.onOptionClick('data.key', evt)}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withNamespaces()(ItemSelectDoc);","import React from 'react';\r\nimport Page, {DocsToDo, DocsToDoInline, InlineCodeHighlighter, LightDarkBlock, SyntaxHighlighter} from \"../../../../Page\";\r\nimport {WorldWindMap, MapControls, PresentationMap, ReactLeafletMap} from \"@gisatcz/ptr-maps\";\r\nimport {connects} from \"@gisatcz/ptr-state\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ComponentPropsTable, {Prop, Section} from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\n\r\nconst Map = connects.Map(PresentationMap);\r\n\r\nconst view = {\r\n\tcenter: {lat: 50, lon: 15},\r\n\tboxRange: 2000000\r\n};\r\n\r\nconst presentational_backgroundLayer = {\r\n\tkey: 'background-osm',\r\n\ttype: 'wmts',\r\n\toptions: {\r\n\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t}\r\n};\r\n\r\n// Connected background\r\nconst connectedBackgroundLayer = {\r\n\tlayerTemplateKey: 'd54f7782-976b-4fb2-9066-5f1ca4f3b703',\r\n\tmetadataModifiers: {\r\n\t\tapplicationKey: 'docs'\r\n\t}\r\n};\r\n\r\n// WMS layer\r\nconst presentational_cuzk = {\r\n\tkey: 'cuzk_ortofoto',\r\n\tname: 'CUZK Ortofoto',\r\n\ttype: 'wms',\r\n\toptions: {\r\n\t\turl: 'http://geoportal.cuzk.cz/WMS_ORTOFOTO_PUB/WMService.aspx?',\r\n\t\tparams: {\r\n\t\t\tlayers: 'GR_ORTFOTORGB'\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// WMS layer from BE - from 206\r\nconst connected_wms = {\r\n\tkey: 'layer-geoinv',\r\n\tlayerTemplateKey: '097d3fed-e6da-4f08-833e-839c88513b8b',\r\n\tmetadataModifiers: {\r\n\t\tapplicationKey: 'docs'\r\n\t}\r\n};\r\n\r\nconst presentationalLayers = [presentational_cuzk];\r\nconst connectedLayers = [connected_wms];\r\n\r\n\r\nclass MapDoc extends React.PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tprops.addMap(\r\n\t\t\t{\r\n\t\t\t\tkey: 'docs-connected-map',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tview: {\r\n\t\t\t\t\t\tcenter: {lat: 50, lon: 14},\r\n\t\t\t\t\t\tboxRange: 2000000\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbackgroundLayer: {\r\n\t\t\t\t\t\tlayerTemplateKey: 'd54f7782-976b-4fb2-9066-5f1ca4f3b703',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tlayers: [{\r\n\t\t\t\t\t\tkey: 'layer-cz',\r\n\t\t\t\t\t\tlayerTemplateKey: 'b5afa739-7828-4ed0-8844-306a5470e7e0'\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Map\">\r\n\t\t\t\t<div style={{marginBottom: 10, height: 300}}>\r\n\t\t\t\t\t<PresentationMap\r\n\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\tbackgroundLayer={presentational_backgroundLayer}\r\n\t\t\t\t\t\tlayers={presentationalLayers}\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapControls/>\r\n\t\t\t\t\t</PresentationMap>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p>The Map is a fundamental component for spatial data visualization. It wraps <Link to=\"./presentational\">Presentational map component</Link> together with other optional components useful for visualization and control (e.g. <Link to=\"./controls/MapControls\">MapControls</Link>). </p>\r\n\r\n\t\t\t\t<h2>Props</h2>\r\n\t\t\t\t<ComponentPropsTable>\r\n\t\t\t\t\t<Prop name=\"mapComponent\" required>Presentational component to render the final map</Prop>\r\n\t\t\t\t\t<Section name=\"Controlled\">\r\n\t\t\t\t\t\t<Prop name=\"stateMapKey\" required type=\"string\">Valid key of a map in map store</Prop>\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t\t<Section name=\"Uncontrolled\">\r\n\t\t\t\t\t\t<Prop name=\"mapKey\" type=\"string\"/>\r\n\t\t\t\t\t\t<Prop name=\"view\" required type=\"map view\"><Link to=\"/architecture/systemDataTypes/mapView\">Presentation view</Link></Prop>\r\n\t\t\t\t\t\t<Prop name=\"viewLimits\" type=\"object\">Restrict which part of the world is visible and how. See <Link to=\"#view-limits\">View limits</Link> section.</Prop>\r\n\t\t\t\t\t\t<Prop name=\"layers\" type=\"layers\"><Link to=\"/architecture/systemDataTypes/layers\">Layers</Link></Prop>\r\n\t\t\t\t\t\t<Prop name=\"backgroundLayer\" type=\"background layer\">\r\n\t\t\t\t\t\t\t<Link to=\"/architecture/systemDataTypes/layers#backgroundLayer\">Background layer</Link>\r\n\t\t\t\t\t\t</Prop>\r\n\t\t\t\t\t\t<Prop name=\"onViewChange\" type=\"function\">Function called when a view change is initiated inside the Presentation component</Prop>\r\n\t\t\t\t\t\t<Prop name=\"onClick\" type=\"function\">Function called on click</Prop>\r\n\t\t\t\t\t\t<Prop name=\"onLayerClick\" type=\"function\">Function called on layer click</Prop>\r\n\t\t\t\t\t\t<Prop name=\"wrapperClasses\" type=\"string\">Class names for wrapper component</Prop>\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t</ComponentPropsTable>\r\n\r\n\t\t\t\t<h2>Component types</h2>\r\n\t\t\t\t<h3>Uncontrolled unconnected</h3>\r\n\t\t\t\t<p>Presentational components only. The map is not controlled from store. Layers and backgroundLayer have to be defined directly.</p>\r\n\r\n\t\t\t\t<div style={{marginTop: 10, height: 400}}>\r\n\t\t\t\t\t<PresentationMap\r\n\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\tbackgroundLayer={presentational_backgroundLayer}\r\n\t\t\t\t\t\tlayers={presentationalLayers}\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapControls/>\r\n\t\t\t\t\t</PresentationMap>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`import {WorldWindMap, MapControls, PresentationMap} from \"@gisatcz/ptr-maps\";\r\n\r\n<PresentationMap\r\n\tmapComponent={WorldWindMap}\r\n\tbackgroundLayer={{\r\n\t\tkey: 'background-osm',\r\n\t\ttype: 'wmts',\r\n\t\toptions: {\r\n\t\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t\t}\r\n\t}}\r\n\tlayers={[{\r\n\t\tkey: 'cuzk_ortofoto',\r\n\t\tname: 'CUZK Ortofoto',\r\n\t\ttype: 'wms',\r\n\t\toptions: {\r\n\t\t\turl: 'http://geoportal.cuzk.cz/WMS_ORTOFOTO_PUB/WMService.aspx?',\r\n\t\t\tparams: {\r\n\t\t\t\tlayers: 'GR_ORTFOTORGB'\r\n\t\t\t}\r\n\t\t}\r\n\t}]}\r\n\tview={{\r\n\t\tcenter: {lat: 50, lon: 15},\r\n\t\tboxRange: 2000000\r\n\t}}\r\n>\r\n\t<MapControls/>\r\n</PresentationMap>\r\n`}\r\n\t\t\t\t\t</SyntaxHighlighter>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h3>Uncontrolled</h3>\r\n\t\t\t\t<p>The map is not controlled from store, but layer data is collected based on stored metadata.</p>\r\n\t\t\t\t<div style={{marginTop: 10, height: 400}}>\r\n\t\t\t\t\t<Map\r\n\t\t\t\t\t\tmapKey=\"uncontrolled-map\"\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\tbackgroundLayer={connectedBackgroundLayer}\r\n\t\t\t\t\t\tlayers={connectedLayers}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapControls/>\r\n\t\t\t\t\t</Map>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>Layers are served from 192.168.2.206. Check your configuration if there are no layers in the map.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`import {WorldWindMap, MapControls, PresentationMap} from \"@gisatcz/ptr-maps\";\r\nconst Map = connects.Map(PresentationMap);\r\n<Map\r\n\tmapComponent={WorldWindMap}\r\n\tbackgroundLayer={{\r\n\t\tkey: 'layer-geoinv',\r\n\t\tlayerTemplateKey: '097d3fed-e6da-4f08-833e-839c88513b8b',\r\n\t\tmetadataModifiers: {\r\n\t\t\tapplicationKey: 'docs'\r\n\t\t}\r\n\t}}\r\n\tlayers={[{\r\n\t\tkey: 'layer-geoinv',\r\n\t\tlayerTemplateKey: '097d3fed-e6da-4f08-833e-839c88513b8b',\r\n\t\tmetadataModifiers: {\r\n\t\t\tapplicationKey: 'docs'\r\n\t\t}\r\n\t}]}\r\n\tview={{\r\n\t\tcenter: {lat: 50, lon: 15},\r\n\t\tboxRange: 2000000\r\n\t}}\r\n>\r\n\t<MapControls/>\r\n</Map>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h3 id=\"connected\">Connected to store</h3>\r\n\t\t\t\t<p>The map is completely controlled from store. The map with given key should already be present in the store.</p>\r\n\t\t\t\t<div style={{marginTop: 10, height: 400}}>\r\n\t\t\t\t\t<Map\r\n\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\tstateMapKey=\"docs-connected-map\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapControls/>\r\n\t\t\t\t\t</Map>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>Layers are served from 192.168.2.206. Check your configuration if there are no layers in the map.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`import {WorldWindMap, MapControls, PresentationMap} from \"@gisatcz/ptr-maps\";\r\nconst Map = connects.Map(PresentationMap);\r\n// Map with key 'docs-connected-map' should already be in the store\r\n<Map\r\n\tmapComponent={WorldWindMap}\r\n\tstateMapKey=\"docs-connected-map\"\r\n>\r\n\t<MapControls/>\r\n</Map>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\r\n\r\n\t\t\t\t<h2 id=\"view-limits\">View limits</h2>\r\n\t\t\t\t<p>Which part of the world is visible on the map and how is represented by <Link to=\"/architecture/systemDataTypes/mapView\">view</Link> object. Currently, it is possible to restrict the zoom via <InlineCodeHighlighter>viewLimits</InlineCodeHighlighter> prop.</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`\r\n<Map\r\n\t//...\r\n\tview={{\r\n\t\tcenter: {lat: 50, lon: 15},\r\n\t\tboxRange: 16000\r\n\t}}\r\n\tviewLimits={{\r\n\t    boxRangeRange: [4000, 64000]\r\n\t}}\r\n>\r\n\t<MapControls/>\r\n</Map>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n\t\t\t\t\t<div style={{margin: 5, height: 300, width: 500}}>\r\n\t\t\t\t\t\t<PresentationMap\r\n\t\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\t\tbackgroundLayer={presentational_backgroundLayer}\r\n\t\t\t\t\t\t\tview={{\r\n\t\t\t\t\t\t\t\tcenter: {lat: 50, lon: 15},\r\n\t\t\t\t\t\t\t\tboxRange: 16000\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tviewLimits={{\r\n\t\t\t\t\t\t\t\tboxRangeRange: [4000, 64000]\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MapControls/>\r\n\t\t\t\t\t\t</PresentationMap>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{margin: 5, height: 300, width: 500}}>\r\n\t\t\t\t\t\t<PresentationMap\r\n\t\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\t\tbackgroundLayer={presentational_backgroundLayer}\r\n\t\t\t\t\t\t\tview={{\r\n\t\t\t\t\t\t\t\tcenter: {lat: 50, lon: 15},\r\n\t\t\t\t\t\t\t\tboxRange: 16000\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tviewLimits={{\r\n\t\t\t\t\t\t\t\tboxRangeRange: [4000, 64000]\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tlevelsBased\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MapControls zoomOnly levelsBased/>\r\n\t\t\t\t\t\t</PresentationMap>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div style={{margin: 5, height: 300, width: 500}}>\r\n\t\t\t\t\t\t<PresentationMap\r\n\t\t\t\t\t\t\tmapComponent={ReactLeafletMap}\r\n\t\t\t\t\t\t\tbackgroundLayer={presentational_backgroundLayer}\r\n\t\t\t\t\t\t\tview={{\r\n\t\t\t\t\t\t\t\tcenter: {lat: 50, lon: 15},\r\n\t\t\t\t\t\t\t\tboxRange: 16000\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tviewLimits={{\r\n\t\t\t\t\t\t\t\tboxRangeRange: [4000, 64000]\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MapControls zoomOnly levelsBased/>\r\n\t\t\t\t\t\t</PresentationMap>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MapDoc;","import {connect} from '@gisatcz/ptr-state';\r\nimport {Action, Select} from '@gisatcz/ptr-state';\r\n\r\nimport presentation from \"./presentation\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        addMap: (map) => {\r\n            dispatch(Action.maps.addMap(map));\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(presentation);","import React from 'react';\r\nimport Page, {DocsToDo, DocsToDoInline, InlineCodeHighlighter, LightDarkBlock, SyntaxHighlighter} from \"../../../../Page\";\r\n\r\nimport {ReactLeafletMap, WorldWindMap, MapControls, MapSet, MapSetPresentationMap, PresentationMap} from \"@gisatcz/ptr-maps\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport {connects} from '@gisatcz/ptr-state';\r\nimport ComponentPropsTable, {Prop, Section} from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\n\r\nconst ConnectedMap = connects.Map(PresentationMap);\r\nconst ConnectedMapSet = connects.MapSet(MapSet);\r\n\r\n/* ===== DATA SOURCES ===== */\r\n\r\n/* ===== Connected to store ===== */\r\n\r\nconst connectedBackgroundLayer = {\r\n\tlayerTemplateKey: 'd54f7782-976b-4fb2-9066-5f1ca4f3b703',\r\n\tmetadataModifiers: {\r\n\t\tapplicationKey: 'docs'\r\n\t}\r\n};\r\n\r\nconst connectedLayers = [{\r\n\tkey: 'layer-cz',\r\n\tlayerTemplateKey: 'b5afa739-7828-4ed0-8844-306a5470e7e0'\r\n},{\r\n\tkey: 'layer-geoinv',\r\n\tlayerTemplateKey: '097d3fed-e6da-4f08-833e-839c88513b8b',\r\n\tmetadataModifiers: {\r\n\t\tapplicationKey: 'docs'\r\n\t}\r\n}];\r\n\r\nconst connectedLayers2 = [{\r\n\tkey: 'layer-geoinv',\r\n\tlayerTemplateKey: '097d3fed-e6da-4f08-833e-839c88513b8b',\r\n\tmetadataModifiers: {\r\n\t\tapplicationKey: 'docs'\r\n\t}\r\n}];\r\n\r\n/* ===== Unconnected to store ===== */\r\n\r\nconst unconnectedBackgroundOsm = {\r\n\tkey: 'background-osm',\r\n\ttype: 'wmts',\r\n\toptions: {\r\n\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t}\r\n};\r\n\r\nconst unconnectedLayersCuzk = [{\r\n\tkey: 'cuzk_ortofoto',\r\n\tname: 'CUZK Ortofoto',\r\n\ttype: 'wms',\r\n\topacity: 0.5,\r\n\toptions: {\r\n\t\turl: 'http://geoportal.cuzk.cz/WMS_ORTOFOTO_PUB/WMService.aspx?',\r\n\t\tparams: {\r\n\t\t\tlayers: 'GR_ORTFOTORGB'\r\n\t\t}\r\n\t}\r\n}];\r\n\r\nclass MapSetDoc extends React.PureComponent {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst props = this.props;\r\n\t\tprops.addSet({\r\n\t\t\tkey: 'docs-MapSet',\r\n\t\t\tdata: {\r\n\t\t\t\tbackgroundLayer: connectedBackgroundLayer,\r\n\t\t\t\tlayers: connectedLayers,\r\n\t\t\t\tview: {\r\n\t\t\t\t\tcenter: {\r\n\t\t\t\t\t\tlat: 50,\r\n\t\t\t\t\t\tlon: 15\r\n\t\t\t\t\t},\r\n\t\t\t\t\tboxRange: 5000000\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tprops.addSet({\r\n\t\t\tkey: 'docs-MapSet-worldWind',\r\n\t\t\tdata: {\r\n\t\t\t\tbackgroundLayer: connectedBackgroundLayer,\r\n\t\t\t\tlayers: connectedLayers,\r\n\t\t\t\tview: {\r\n\t\t\t\t\tcenter: {\r\n\t\t\t\t\t\tlat: 50,\r\n\t\t\t\t\t\tlon: 15\r\n\t\t\t\t\t},\r\n\t\t\t\t\tboxRange: 2000000\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tprops.setSetSync('docs-MapSet', {center: true, boxRange: true, heading: true});\r\n\t\tprops.setSetSync('docs-MapSet-worldWind', {center: true, boxRange: true, heading: true});\r\n\t\tprops.addMap({key: 'docs-MapSet-Map1'});\r\n\t\tprops.addMap({key: 'docs-MapSet-Map2'});\r\n\t\tprops.addMap({key: 'docs-MapSet-Map3'});\r\n\t\tprops.addMapToSet('docs-MapSet', 'docs-MapSet-Map1');\r\n\t\tprops.addMapToSet('docs-MapSet', 'docs-MapSet-Map2');\r\n\t\tprops.addMapToSet('docs-MapSet', 'docs-MapSet-Map3');\r\n\r\n\t\tprops.addMap({key: 'docs-MapSetWorldWind-Map1'});\r\n\t\tprops.addMap({key: 'docs-MapSetWorldWind-Map2'});\r\n\t\tprops.addMap({key: 'docs-MapSetWorldWind-Map3'});\r\n\t\tprops.addMapToSet('docs-MapSet-worldWind', 'docs-MapSetWorldWind-Map1');\r\n\t\tprops.addMapToSet('docs-MapSet-worldWind', 'docs-MapSetWorldWind-Map2');\r\n\t\tprops.addMapToSet('docs-MapSet-worldWind', 'docs-MapSetWorldWind-Map3');\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.removeSet('docs-MapSet');\r\n\t\tthis.props.removeSet('docs-MapSet-worldWind');\r\n\t\tthis.props.removeMap('docs-MapSet-Map1');\r\n\t\tthis.props.removeMap('docs-MapSet-Map2');\r\n\t\tthis.props.removeMap('docs-MapSet-Map3');\r\n\t\tthis.props.removeMap('docs-MapSetWorldWind-Map1');\r\n\t\tthis.props.removeMap('docs-MapSetWorldWind-Map2');\r\n\t\tthis.props.removeMap('docs-MapSetWorldWind-Map3');\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Map set\">\r\n\t\t\t\t<h2>Props</h2>\r\n\t\t\t\t<ComponentPropsTable>\r\n\t\t\t\t\t<Prop name=\"mapComponent\" type=\"WorldWindMap|ReactLeafletMap\" required>Presentational component to render the final map</Prop>\r\n\t\t\t\t\t<Section name=\"Controlled\">\r\n\t\t\t\t\t\t<Prop name=\"connectedMapComponent\" type=\"ConnectedMap\" required><Link to=\"./map#connected\">Map component connected to store</Link>.</Prop>\r\n\t\t\t\t\t\t<Prop name=\"stateMapSetKey\" required type=\"string\">Valid key of a map set in map store</Prop>\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t\t<Section name=\"Uncontrolled\">\r\n\t\t\t\t\t\t<Prop name=\"activeMapKey\" type=\"string\" required>Valid key of active map</Prop>\r\n\t\t\t\t\t\t<Prop name=\"view\" required type=\"map view\"><Link to=\"/architecture/systemDataTypes/mapView\">Presentation view</Link></Prop>\r\n\t\t\t\t\t\t<Prop name=\"layers\" type=\"layers\"><Link to=\"/architecture/systemDataTypes/layers\">Layers</Link></Prop>\r\n\t\t\t\t\t\t<Prop name=\"backgroundLayer\" type=\"background layer\">\r\n\t\t\t\t\t\t\t<Link to=\"/architecture/systemDataTypes/layers#backgroundLayer\">Background layer</Link>\r\n\t\t\t\t\t\t</Prop>\r\n\t\t\t\t\t\t<Prop name=\"sync\" type=\"object\">Which view parameters will be synchronized in all maps</Prop>\r\n\t\t\t\t\t</Section>\r\n\t\t\t\t</ComponentPropsTable>\r\n\r\n\t\t\t\t<h2>ReactLeaflet</h2>\r\n\t\t\t\t<h3>Connected to store</h3>\r\n\t\t\t\t<p>The map is completely controlled from store. The map with given key should already be in the store.</p>\r\n\t\t\t\t<p>Layers are served from 192.168.2.206. Check your configuration if there are no layers in the map below.</p>\r\n\t\t\t\t<div style={{height: 500}}>\r\n\t\t\t\t\t<ConnectedMapSet\r\n\t\t\t\t\t\tstateMapSetKey=\"docs-MapSet\"\r\n\t\t\t\t\t\tmapComponent={ReactLeafletMap}\r\n\t\t\t\t\t\tconnectedMapComponent={ConnectedMap}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapControls levelsBased zoomOnly/>\r\n\t\t\t\t\t</ConnectedMapSet>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`import {connects} from '@gisatcz/ptr-state';\r\nimport {ReactLeafletMap, MapControls, MapSet, PresentationMap} from \"@gisatcz/ptr-maps\";\r\n\r\nconst ConnectedMap = connects.Map(PresentationMap);\r\nconst ConnectedMapSet = connects.MapSet(MapSet);\r\n\r\n// Map set with key 'docs-MapSet' should already be in the store\r\n<ConnectedMapSet\r\n\tstateMapSetKey=\"docs-MapSet\"\r\n\tmapComponent={ReactLeafletMap}\r\n\tconnectedMapComponent={ConnectedMap}\r\n>\r\n\t<MapControls levelsBased zoomOnly/>\r\n</ConnectedMapSet>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h3>Uncontrolled</h3>\r\n\t\t\t\t<p>The map is not controlled from store, but layer data is collected based on stored metadata.</p>\r\n\t\t\t\t<p>Layers are served from 192.168.2.206. Check your configuration if there are no layers in the map below.</p>\r\n\t\t\t\t<div style={{height: 500}}>\r\n\t\t\t\t\t<ConnectedMapSet\r\n\t\t\t\t\t\tsetKey=\"uncontrolled-leaflet\"\r\n\t\t\t\t\t\tactiveMapKey='map-2'\r\n\t\t\t\t\t\tmapComponent={ReactLeafletMap}\r\n\t\t\t\t\t\tview={{\r\n\t\t\t\t\t\t\tboxRange: 3000000\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsync={{\r\n\t\t\t\t\t\t\tboxRange: true,\r\n\t\t\t\t\t\t\tcenter: true\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tbackgroundLayer={unconnectedBackgroundOsm}\r\n\t\t\t\t\t\tlayers={connectedLayers2}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-1'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-2'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-3'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapControls levelsBased zoomOnly/>\r\n\t\t\t\t\t</ConnectedMapSet>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`import {connects} from '@gisatcz/ptr-state';\r\nimport {ReactLeafletMap, MapControls, MapSet, MapSetPresentationMap} from \"@gisatcz/ptr-maps\";\r\n\r\nconst ConnectedMapSet = connects.MapSet(MapSet);\r\n\r\n<ConnectedMapSet\r\n\tsetKey=\"uncontrolled-leaflet\"\r\n\tactiveMapKey='map-2'\r\n\tmapComponent={ReactLeafletMap}\r\n\tview={{\r\n\t\tboxRange: 3000000\r\n\t}}\r\n\tsync={{\r\n\t\tboxRange: true,\r\n\t\tcenter: true\r\n\t}}\r\n\tbackgroundLayer={{\r\n\t\tkey: 'background-osm',\r\n\t\ttype: 'wmts',\r\n\t\toptions: {\r\n\t\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t\t}\r\n\t}}\r\n\tlayers={[{\r\n\t\tkey: 'layer-geoinv',\r\n\t\tlayerTemplateKey: '097d3fed-e6da-4f08-833e-839c88513b8b',\r\n\t\tmetadataModifiers: {\r\n\t\t\tapplicationKey: 'docs'\r\n\t\t}\r\n\t}]}\r\n>\r\n\t<MapSetPresentationMap mapKey='map-1'/>\r\n\t<MapSetPresentationMap mapKey='map-2'/>\r\n\t<MapSetPresentationMap mapKey='map-3'/>\r\n\t<MapControls levelsBased zoomOnly/>\r\n</ConnectedMapSet>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h3>Uncontrolled unconnected</h3>\r\n\t\t\t\t<p>Presentational components only. The map is not controlled from store. Layers and backgroundLayer have to be defined directly.</p>\r\n\t\t\t\t<div style={{height: 500}}>\r\n\t\t\t\t\t<MapSet\r\n\t\t\t\t\t\tactiveMapKey='map-2'\r\n\t\t\t\t\t\tmapComponent={ReactLeafletMap}\r\n\t\t\t\t\t\tview={{\r\n\t\t\t\t\t\t\tboxRange: 5000000\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsync={{\r\n\t\t\t\t\t\t\tboxRange: true,\r\n\t\t\t\t\t\t\tcenter: true\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tbackgroundLayer={unconnectedBackgroundOsm}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-1'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-2'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-3'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapControls levelsBased zoomOnly/>\r\n\t\t\t\t\t</MapSet>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`import {connects} from '@gisatcz/ptr-state';\r\nimport {ReactLeafletMap, MapControls, MapSet} from \"@gisatcz/ptr-maps\";\r\n\r\n<ConnectedMapSet\r\n\tactiveMapKey='map-2'\r\n\tmapComponent={ReactLeafletMap}\r\n\tview={{\r\n\t\tboxRange: 5000000\r\n\t}}\r\n\tsync={{\r\n\t\tboxRange: true,\r\n\t\tcenter: true\r\n\t}}\r\n\tbackgroundLayer={{\r\n\t\tkey: 'background-osm',\r\n\t\ttype: 'wmts',\r\n\t\toptions: {\r\n\t\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t\t}\r\n\t}}\r\n>\r\n\t<MapSetPresentationMap mapKey='map-1'/>\r\n\t<MapSetPresentationMap mapKey='map-2'/>\r\n\t<MapSetPresentationMap mapKey='map-3'/>\r\n\t<MapControls levelsBased zoomOnly/>\r\n</ConnectedMapSet>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h2>World Wind</h2>\r\n\t\t\t\t<h3>Connected to store</h3>\r\n\t\t\t\t<p>Layers are served from 192.168.2.206. Check your configuration if there are no layers in the map below.</p>\r\n\t\t\t\t<div style={{height: 500}}>\r\n\t\t\t\t\t<ConnectedMapSet\r\n\t\t\t\t\t\tstateMapSetKey=\"docs-MapSet-worldWind\"\r\n\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\tconnectedMapComponent={ConnectedMap}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapControls/>\r\n\t\t\t\t\t</ConnectedMapSet>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h3>Uncontrolled</h3>\r\n\t\t\t\t<p>Layers are served from 192.168.2.206. Check your configuration if there are no layers in the map below.</p>\r\n\t\t\t\t<div style={{height: 500}}>\r\n\t\t\t\t\t<ConnectedMapSet\r\n\t\t\t\t\t\tactiveMapKey='map-2'\r\n\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\tview={{\r\n\t\t\t\t\t\t\tboxRange: 1000000,\r\n\t\t\t\t\t\t\theading: 10,\r\n\t\t\t\t\t\t\ttilt: 10\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsync={{\r\n\t\t\t\t\t\t\tboxRange: true,\r\n\t\t\t\t\t\t\tcenter: true\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tbackgroundLayer={unconnectedBackgroundOsm}\r\n\t\t\t\t\t\tlayers={connectedLayers2}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-1'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-2'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-3'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapControls/>\r\n\t\t\t\t\t</ConnectedMapSet>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<h3>Uncontrolled unconnected</h3>\r\n\t\t\t\t<div style={{height: 500}}>\r\n\t\t\t\t\t<MapSet\r\n\t\t\t\t\t\tactiveMapKey='map-2'\r\n\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\tview={{\r\n\t\t\t\t\t\t\tboxRange: 100000,\r\n\t\t\t\t\t\t\theading: 10,\r\n\t\t\t\t\t\t\ttilt: 10\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsync={{\r\n\t\t\t\t\t\t\tboxRange: true,\r\n\t\t\t\t\t\t\tcenter: true,\r\n\t\t\t\t\t\t\theading: true\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tbackgroundLayer={unconnectedBackgroundOsm}\r\n\t\t\t\t\t\tlayers={unconnectedLayersCuzk}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-1'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-2'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapSetPresentationMap\r\n\t\t\t\t\t\t\tmapKey='map-3'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MapControls/>\r\n\t\t\t\t\t</MapSet>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MapSetDoc;","import {connect} from '@gisatcz/ptr-state';\r\nimport {Action, Select} from '@gisatcz/ptr-state';\r\n\r\nimport presentation from \"./presentation\";\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\tactiveSetKey: Select.maps.getActiveSetKey(state)\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n\treturn {\r\n\t\taddSet: (set) => {\r\n\t\t\tdispatch(Action.maps.addSet(set));\r\n\t\t},\r\n\t\taddMap: (map) => {\r\n\t\t\tdispatch(Action.maps.addMap(map));\r\n\t\t},\r\n\t\taddMapToSet: (setKey, mapKey) => {\r\n\t\t\tdispatch(Action.maps.addMapToSet(setKey, mapKey));\r\n\t\t},\r\n\t\tsetSetSync: (setKey, sync) => {\r\n\t\t\tdispatch(Action.maps.setSetSync(setKey, sync));\r\n\t\t},\r\n\t\tsetSetBackgroundLayer: (setKey, backgroundLayer) => {\r\n\t\t\tdispatch(Action.maps.setSetBackgroundLayer(setKey, backgroundLayer))\r\n\t\t},\r\n\t\tremoveSetBackgroundLayer: (setKey) => {\r\n\t\t\tdispatch(Action.maps.setSetBackgroundLayer(setKey, null))\r\n\t\t},\r\n\t\tremoveSet: (setKey) => {\r\n\t\t\tdispatch(Action.maps.removeSet(setKey));\r\n\t\t},\r\n\t\tremoveMap: (mapKey) => {\r\n\t\t\tdispatch(Action.maps.removeMap(mapKey));\r\n\t\t},\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(presentation);","import React from 'react';\r\nimport ComponentPropsTable from \"../../../ComponentPropsTable/ComponentPropsTable\";\r\nimport Page, {DocsToDo} from \"../../../Page\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport {AsterChart, ColumnChart, LineChart, ScatterChart} from '@gisatcz/ptr-charts';\r\n\r\nimport sample_10 from \"../../../mockData/scatterChart/serie_10\";\r\nimport dodoma from \"../../../mockData/map/dodoma_districts_as_us_states\";\r\n\r\nclass HoverHandlerDoc extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"HoverHandler\">\r\n\t\t\t\t<DocsToDo>Add description</DocsToDo>\r\n\t\t\t\t<h2 id=\"props\">Props</h2>\r\n\t\t\t\t<ComponentPropsTable\r\n\t\t\t\t\tcontent={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: \"selectedItems\",\r\n\t\t\t\t\t\t\ttype: \"array\",\r\n\t\t\t\t\t\t\tdescription: \"List of selected items keys.\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<h2 id=\"usage\">Usage</h2>\r\n\t\t\t\t<div style={{maxWidth: '40rem'}}>\r\n\t\t\t\t\t<HoverHandler\r\n\t\t\t\t\t\tselectedItems={[\"e716114f-b36e-4c39-9069-e00fda51e85c\", \"28bf9648-2031-4b2b-af60-cfa650a4d938\"]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\t\tkey=\"hover-handler-doc-line-chart\"\r\n\t\t\t\t\t\t\tdata={sample_10}\r\n\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tserieDataSourcePath=\"data.data\"\r\n\t\t\t\t\t\t\txSourcePath=\"period\"\r\n\t\t\t\t\t\t\tySourcePath=\"someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\tsorting={[[\"period\", \"asc\"]]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ColumnChart\r\n\t\t\t\t\t\t\tkey=\"hover-handler-doc-column-chart\"\r\n\t\t\t\t\t\t\tdata={sample_10}\r\n\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\txSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tySourcePath=\"data.data[0].someStrangeValue\"\r\n\r\n\t\t\t\t\t\t\txValuesSize={5}\r\n\r\n\t\t\t\t\t\t\tdiverging\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ScatterChart\r\n\t\t\t\t\t\t\tkey=\"hover-handler-doc-scatter-chart\"\r\n\t\t\t\t\t\t\tdata={sample_10}\r\n\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\txSourcePath=\"data.data[0].someStrangeValue\"\r\n\t\t\t\t\t\t\tySourcePath=\"data.data[0].otherValue\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<AsterChart\r\n\t\t\t\t\t\t\tkey=\"hover-handler-doc-aster-chart\"\r\n\t\t\t\t\t\t\tdata={sample_10}\r\n\t\t\t\t\t\t\tkeySourcePath=\"key\"\r\n\t\t\t\t\t\t\tnameSourcePath=\"data.name\"\r\n\t\t\t\t\t\t\tvalueSourcePath=\"data.data[0].someStrangeValue\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HoverHandlerDoc;","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\n\r\nimport Page, {\r\n\tSyntaxHighlighter\r\n} from '../../../Page';\r\n\r\nclass LayersDoc extends React.PureComponent {\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Layers\">\r\n\t\t\t\t<p>Layers are for layering. Full format (End? Absolute? Complete? Explicit? Pink?) for presentational map components, state-dependent (Relative? Implicit? Magic? Fuchsia?) for connected.</p>{/* todo */}\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\tkey: \"example_layer\",\r\n\ttype: \"wms\",\r\n\topacity: 0.7,\r\n\t\r\n\toptions: {\r\n\t\turl: \"http://panther.gisat.cz/geoserver/geonode/wms?\"\r\n\t\tparams: {\r\n\t\t\tlayers: \"\",\r\n\t\t\tstyles: \"\"\r\n\t\t}\r\n\t}\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\r\n\t\t\t\t<h2>Full format</h2>\r\n\t\t\t\t<p>End format supplied to presentational (map framework) map components. (Can also be supplied to connected.) Contains everything needed to display final layer on the map.</p>\r\n\t\t\t\t\r\n\t\t\t\t<h3>WMS</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\tkey: \"example_wms_layer\",\r\n\ttype: \"wms\",\r\n\topacity: 0.7,\r\n\t\r\n\toptions: {\r\n\t\turl: \"http://192.168.2.206/geoserver/geonode/wms?\"\r\n\t\tparams: {\r\n\t\t\tlayers: \"\"\r\n\t\t}\r\n\t}\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\r\n\t\t\t\t<h3>WMTS</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\tkey: \"example_wmts_layer\",\r\n\ttype: \"wmts\",\r\n\topacity: 0.7,\r\n\t\r\n\toptions: {\r\n\t\turls: [\"http://192.168.2.206/geoserver/geonode/wms&\\${x}&\\${y}&\\${z}\"]\r\n\t}\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\r\n\t\t\t\t<h3 id=\"vector\">Vector</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\tkey: \"snezka_example_layer\",\r\n\ttype: \"vector\",\r\n\topacity: 0.7,\r\n\t\r\n\toptions: {\r\n\t\tfeatures: [], //list of GeoJSON features\r\n\t\tstyle: {}, //see Style section\r\n\t\tselected: {\r\n\t\t\tselectionKey: {\r\n\t\t\t\tkeys: [], //list of fids\r\n\t\t\t\tstyle: {}, //style definition\r\n\t\t\t\thoveredStyle: {} //style definition\r\n\t\t\t}, \r\n\t\t\tselectionKey2: {}},\r\n\t\tfiltered: {}, //TODO\r\n\t\thovered: {\r\n\t\t\tkeys: [], //list of fids\r\n\t\t\tstyle: {} //style definition\r\n\t\t},\r\n\t\tfidColumnName: \"string\",\r\n\t\tboxRangeRange: [] //boxRange limits where layer is rendered (e.g. [5000, 1000000]),\r\n\t\tpointAsMarker: true //point features will be displayed as markers (with fixed size i pixels)\r\n\t}\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\r\n\t\t\t\t<h3>Raster</h3>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<h3>Colour</h3>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<h3>Framework specific</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\tkey: \"snezka_example_layer\",\r\n\ttype: \"worldwind\",\r\n\topacity: 0.7,\r\n\t\r\n\toptions: {\r\n\t\tlayer: \"wikimedia|bluemarble|bing\"\r\n\t}\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\r\n\t\t\t\t<h3>WFS</h3>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<h2>State-dependent format</h2>\r\n\t\t\t\t<p>Supplied to connected component, or stored in map store. References layer template and modifiers (fixed or active). Gets transformed into end format.</p>\r\n\t\t\t\t\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\tkey: \"example_layer\",\r\n\topacity: 0.7,\r\n\tlayerTemplateKey|areaTreeLevelKey: \"366f98d0-10e1-4e6c-8be5-7754c45ef599\",\r\n\tstyleKey: \"b9f1f8cd-fdff-43ca-9440-80d3dc6667d7\"\r\n\tmetadataModifiers: {\r\n\t\tcaseKey: \"c9f1f8cd-fdff-43ca-9440-80d3dc6667d6\"\r\n\t},\r\n\tfilterByActive: {\r\n\t\tperiod: true\r\n\t}\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withNamespaces()(LayersDoc);","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\n\r\nimport Page, {\r\n\tSyntaxHighlighter\r\n} from '../../../Page';\r\n\r\nclass MapViewDoc extends React.PureComponent {\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Map view\">\r\n\t\t\t\t<p>Universal framework-agnostic representation of map view (what part of the world is visible on the map and how).</p>{/* todo */}\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\tcenter: {\r\n\t\tlat: 50.1,\r\n\t\tlon: 14.5\r\n\t},\r\n\tboxRange: 100000,\r\n\troll: 0,\r\n\ttilt: 0,\r\n\theading: 0,\r\n\televationExaggeration: 0\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withNamespaces()(MapViewDoc);","import React from 'react';\r\nimport {withNamespaces} from '@gisatcz/ptr-locales';\r\nimport {utils} from '@gisatcz/ptr-utils';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport Page, {DocsToDo, SyntaxHighlighter, ImplementationToDo} from '../../../../Page';\r\n\r\nimport {WorldWindMap, ReactLeafletMap, MapControls, PresentationMap} from \"@gisatcz/ptr-maps\";\r\nimport cz_gadm from \"../../../../mockData/map/czGadm1WithStyles/geometries\";\r\nimport points_50 from \"../../../../mockData/map/points_50\";\r\nimport nuts_2 from \"../../../../mockData/map/nuts_2\";\r\n\r\nimport './style.scss';\r\n\r\nimport largePointData from \"../../../../mockData/map/largePointData/geometries\";\r\nimport largeDataStyle from \"../../../../mockData/map/largePointData/style\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\n\r\nconst europeView = {\r\n\tcenter: {lat: 49.8, lon: 12},\r\n\tboxRange: 5000000\r\n};\r\n\r\nconst czView = {\r\n\tcenter: {lat: 49.8, lon: 15},\r\n\tboxRange: 2000000\r\n};\r\n\r\nconst pragueView = {\r\n\tcenter: {lat: 49.8, lon: 14.8},\r\n\tboxRange: 300000\r\n};\r\n\r\nconst backgroundLayer = {\r\n\tkey: 'background-osm',\r\n\ttype: 'wmts',\r\n\toptions: {\r\n\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t}\r\n};\r\n\r\n// Polygons - no styles\r\nconst polygonLayers_noStyles = [{\r\n\tkey: \"polygons\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features\r\n\t}\r\n}];\r\n\r\n// Polygons - fill\r\nconst fillStyle = {rules: [{\r\n\t\tstyles: [{\r\n\t\t\tfill: \"#10421c\",\r\n\t\t\tfillOpacity: 0.5\r\n\t\t}]\r\n\t}]};\r\n\r\nconst polygonLayers_fill = [{\r\n\tkey: \"polygons_fill\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tstyle: fillStyle\r\n\t}\r\n}];\r\n\r\n// Polygons - outline\r\nconst outlineStyle = {rules: [{\r\n\t\tstyles: [{\r\n\t\t\toutlineColor: \"#10421c\",\r\n\t\t\toutlineWidth: 5,\r\n\t\t\toutlineOpacity: 0.5\r\n\t\t}]\r\n\t}]};\r\n\r\nconst polygonLayers_outline = [{\r\n\tkey: \"polygons_outline\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tstyle: outlineStyle\r\n\t}\r\n}];\r\n\r\n// Hovered and selected - default\r\nconst hoveredSelectedDefault = {\r\n\tkey: \"polygons_hoveredSelectedDefault\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tfidColumnName: \"GID_1\",\r\n\t\tselected: {\r\n\t\t\ttestSelection: {\r\n\t\t\t\tkeys: [\"CZE.1_1\"]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst polygonLayers_hoveredSelectedDefault = [hoveredSelectedDefault];\r\n\r\n// Hovered and selected - default\r\nconst hoveredSelectedDefined = {\r\n\tkey: \"polygons_hoveredSelectedDefined\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tfidColumnName: \"GID_1\",\r\n\t\thovered: {\r\n\t\t\tstyle: {\r\n\t\t\t\toutlineColor: \"#33c21e\",\r\n\t\t\t\toutlineWidth: 5\r\n\t\t\t}\r\n\t\t},\r\n\t\tselected: {\r\n\t\t\ttestSelection: {\r\n\t\t\t\tkeys: [\"CZE.1_1\"],\r\n\t\t\t\tstyle: {\r\n\t\t\t\t\tfill: \"#ff0000\"\r\n\t\t\t\t},\r\n\t\t\t\thoveredStyle: {\r\n\t\t\t\t\toutlineColor: \"#c21ebf\",\r\n\t\t\t\t\toutlineWidth: 5,\r\n\t\t\t\t\tfill: \"#ff0066\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst polygonLayers_hoveredSelectedDefined = [hoveredSelectedDefined];\r\n\r\n\r\n// Polygons - attribute values\r\nconst attributeValuesStyle = {rules: [{\r\n\tstyles: [{\r\n\t\tfill: \"#cccccc\",\r\n\t\toutlineColor: \"#000000\",\r\n\t\toutlineWidth: 2\r\n\t}, {\r\n\t\tattributeKey: 'attr-2',\r\n\t\tattributeValues: {\r\n\t\t\t'red': {\r\n\t\t\t\tfill: \"#ff0000\",\r\n\t\t\t\toutlineColor: \"#ffcccc\"\r\n\t\t\t},\r\n\t\t\t'green': {\r\n\t\t\t\tfill: \"#00ff00\"\r\n\t\t\t},\r\n\t\t\t'blue': {\r\n\t\t\t\tfill: \"#0000ff\"\r\n\t\t\t}\r\n\t\t}\r\n\t}]\r\n}]};\r\n\r\nconst polygonLayers_attributeValues = [{\r\n\tkey: \"polygons\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tstyle: attributeValuesStyle\r\n\t}\r\n}];\r\n\r\n// Polygons - intervals\r\nconst intervalsStyle = {rules: [{\r\n\tstyles: [{\r\n\t\tfill: \"#cccccc\",\r\n\t\toutlineColor: \"#000000\",\r\n\t\toutlineWidth: 2\r\n\t}, {\r\n\t\tattributeKey: \"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n\t\tattributeClasses: [\r\n\t\t\t{\r\n\t\t\t\tinterval: [0,5],\r\n\t\t\t\tintervalBounds: [true, false],\r\n\t\t\t\tfill: \"#edf8fb\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tinterval: [5,10],\r\n\t\t\t\tintervalBounds: [true, false],\r\n\t\t\t\tfill: \"#b3cde3\"\r\n\t\t\t},{\r\n\t\t\t\tinterval: [10,20],\r\n\t\t\t\tintervalBounds: [true, false],\r\n\t\t\t\tfill: \"#8c96c6\"\r\n\t\t\t}\r\n\t\t]\r\n\t}]\r\n}]};\r\n\r\nconst polygonLayers_intervals = [{\r\n\tkey: \"polygons\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tstyle: intervalsStyle\r\n\t}\r\n}];\r\n\r\n// Polygons - scales\r\nconst scalesStyle = {rules: [{\r\n\tstyles: [{\r\n\t\tfill: \"#cccccc\",\r\n\t\toutlineColor: \"#000000\",\r\n\t\toutlineWidth: 2\r\n\t}, {\r\n\t\tattributeKey: \"22a43eb3-6552-476f-97a5-b47490519642\",\r\n\t\tattributeScale: {\r\n\t\t\tfill: {\r\n\t\t\t\t\"inputInterval\": [-10,10],\r\n\t\t\t\t\"outputInterval\": [\"#ff0909\", \"#e6e281\", \"#05cc00\"]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tattributeKey: \"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n\t\tattributeScale: {\r\n\t\t\toutlineWidth: {\r\n\t\t\t\t\"inputInterval\": [0,20],\r\n\t\t\t\t\"outputInterval\": [0,10]\r\n\t\t\t}\r\n\t\t}\r\n\t}]\r\n}]};\r\n\r\nconst polygonLayers_scales = [{\r\n\tkey: \"polygons\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tstyle: scalesStyle\r\n\t}\r\n}];\r\n\r\n// Points - scales (size & volume)\r\nconst scalesStyleSize = {rules: [{\r\n\tstyles: [{\r\n\t\toutlineColor: \"#000000\",\r\n\t\toutlineWidth: 1,\r\n\t\tfill: \"#ffffff\"\r\n\t}, {\r\n\t\tattributeKey: \"attr1\",\r\n\t\tattributeScale: {\r\n\t\t\tsize: {\r\n\t\t\t\t\"inputInterval\": [0,100],\r\n\t\t\t\t\"outputInterval\": [1, 20]\r\n\t\t\t}\r\n\t\t}\r\n\t}]\r\n}]};\r\n\r\nconst scalesStyleVolume = {rules: [{\r\n\tstyles: [{\r\n\t\toutlineColor: \"#000000\",\r\n\t\toutlineWidth: 1,\r\n\t\tfill: \"#ffffff\"\r\n\t},{\r\n\t\tattributeKey: \"attr1\",\r\n\t\tattributeScale: {\r\n\t\t\tvolume: {\r\n\t\t\t\t\"inputInterval\": [0,100],\r\n\t\t\t\t\"outputInterval\": [Math.PI, Math.PI * 400]\r\n\t\t\t}\r\n\t\t}\r\n\t}]\r\n}]};\r\n\r\nconst pointLayers_scales_size = [{\r\n\tkey: \"points\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: points_50,\r\n\t\tstyle: scalesStyleSize,\r\n\t\tpointAsMarker: true\r\n\t}\r\n}];\r\n\r\nconst pointLayers_scales_volume = [{\r\n\tkey: \"points\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: points_50,\r\n\t\tstyle: scalesStyleVolume,\r\n\t\tpointAsMarker: true\r\n\t}\r\n}];\r\n\r\n\r\n// Polygons & diagrams\r\nconst diagramStyle = {rules: [{\r\n\tstyles: [{\r\n\t\tfill: \"#cccccc\",\r\n\t\toutlineColor: \"#000000\",\r\n\t\toutlineWidth: 1,\r\n\t\tdiagramShape: \"circle\",\r\n\t\tdiagramFillOpacity: 1,\r\n\t\tdiagramFill: \"#ff88ff\",\r\n\t\tdiagramOutlineWidth: 1,\r\n\t\tdiagramOutlineColor: \"#b61db6\"\r\n\t}, {\r\n\t\tattributeKey: \"22a43eb3-6552-476f-97a5-b47490519642\",\r\n\t\tattributeScale: {\r\n\t\t\tdiagramSize: {\r\n\t\t\t\t\"inputInterval\": [-10,10],\r\n\t\t\t\t\"outputInterval\": [2000, 30000]\r\n\t\t\t}\r\n\t\t}\r\n\t}]\r\n}]};\r\n\r\nconst polygonLayers_diagrams = [{\r\n\tkey: \"polygons\",\r\n\ttype: \"diagram\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tstyle: diagramStyle,\r\n\t\tfidColumnName: \"GID_1\"\r\n\t}\r\n}];\r\n\r\n// Choropleth and diagrams\r\nconst diagramChoroplethStyle = {rules: [{\r\n\t\tstyles: [{\r\n\t\t\toutlineWidth: 1,\r\n\t\t\toutlineColor: \"#666\",\r\n\t\t\tdiagramShape: \"circle\",\r\n\t\t\tdiagramFillOpacity: 1,\r\n\t\t\tdiagramFill: \"#ff88ff\",\r\n\t\t\tdiagramOutlineWidth: 1,\r\n\t\t\tdiagramOutlineColor: \"#681968\",\r\n\t\t}, {\r\n\t\t\tattributeKey: \"positive_attr\",\r\n\t\t\tattributeScale: {\r\n\t\t\t\tdiagramSize: {\r\n\t\t\t\t\t\"inputInterval\": [0,10],\r\n\t\t\t\t\t\"outputInterval\": [2000, 20000]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tattributeKey: \"diverging_attr\",\r\n\t\t\tattributeClasses: [\r\n\t\t\t\t{\r\n\t\t\t\t\tinterval: [-5,-3],\r\n\t\t\t\t\tintervalBounds: [true, false],\r\n\t\t\t\t\tfill: \"#d7191c\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tinterval: [-3,-1],\r\n\t\t\t\t\tintervalBounds: [true, false],\r\n\t\t\t\t\tfill: \"#fdae61\"\r\n\t\t\t\t},{\r\n\t\t\t\t\tinterval: [-1,1],\r\n\t\t\t\t\tintervalBounds: [true, false],\r\n\t\t\t\t\tfill: \"#ffffbf\"\r\n\t\t\t\t},{\r\n\t\t\t\t\tinterval: [1,3],\r\n\t\t\t\t\tintervalBounds: [true, false],\r\n\t\t\t\t\tfill: \"#a6d96a\"\r\n\t\t\t\t},{\r\n\t\t\t\t\tinterval: [3,5],\r\n\t\t\t\t\tintervalBounds: [true, false],\r\n\t\t\t\t\tfill: \"#1a9641\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}]\r\n\t}]};\r\n\r\nconst polygonLayers_countries = [{\r\n\tkey: \"countries\",\r\n\ttype: \"diagram\",\r\n\toptions: {\r\n\t\tfeatures: nuts_2.features,\r\n\t\tstyle: diagramChoroplethStyle,\r\n\t\tfidColumnName: \"id\"\r\n\t}\r\n}];\r\n\r\n\r\n// World wind large data layer\r\nconst largeDataLayers = [{\r\n\tkey: \"large-data-layers\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: largePointData.features,\r\n\t\tstyle: largeDataStyle.data.definition,\r\n\t\tfidColumnName: \"gid\"\r\n\t}\r\n}];\r\n\r\nconst levelsRange = [10, 18];\r\n\r\nconst MapContainer = (props) => (\r\n\t<div className=\"ptr-docs-styles-maps-container\">\r\n\t\t{props.hideWorldWind ? null : (\r\n\t\t\t<div>\r\n\t\t\t\t<PresentationMap\r\n\t\t\t\t\tmapKey={utils.uuid()}\r\n\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\tbackgroundLayer={backgroundLayer}\r\n\t\t\t\t\tlayers={props.layers}\r\n\t\t\t\t\tview={props.view}\r\n\t\t\t\t\tonLayerClick={props.onSelect}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MapControls/>\r\n\t\t\t\t</PresentationMap>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t\t{props.hideLeaflet ? null : (\r\n\t\t\t<div>\r\n\t\t\t\t<PresentationMap\r\n\t\t\t\t\tmapComponent={ReactLeafletMap}\r\n\t\t\t\t\tbackgroundLayer={backgroundLayer}\r\n\t\t\t\t\tlayers={props.layers}\r\n\t\t\t\t\tview={props.view}\r\n\t\t\t\t\tonLayerClick={props.onSelect}\r\n\t\t\t\t\tmapKey={utils.uuid()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MapControls zoomOnly levelsBased/>\r\n\t\t\t\t</PresentationMap>\r\n\t\t\t</div>\r\n\t\t)}\r\n\t</div>\r\n);\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\thoveredSelectedDefault: polygonLayers_hoveredSelectedDefault,\r\n\t\t\thoveredSelectedDefined: polygonLayers_hoveredSelectedDefined\r\n\t\t}\r\n\r\n\t\tthis.onLayerClick = this.onLayerClick.bind(this);\r\n\t}\r\n\r\n\tonLayerClick(map, layer, features) {\r\n\t\tif (layer === 'polygons_hoveredSelectedDefault') {\r\n\t\t\tlet updatedLayers = [{\r\n\t\t\t\t...hoveredSelectedDefault,\r\n\t\t\t\toptions: {\r\n\t\t\t\t\t...hoveredSelectedDefault.options,\r\n\t\t\t\t\tselected: {\r\n\t\t\t\t\t\t...hoveredSelectedDefault.options.selected,\r\n\t\t\t\t\t\ttestSelection: {\r\n\t\t\t\t\t\t\t...hoveredSelectedDefault.options.selected.testSelection,\r\n\t\t\t\t\t\t\tkeys: features\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}];\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\thoveredSelectedDefault: updatedLayers\r\n\t\t\t})\r\n\t\t} else if (layer === 'polygons_hoveredSelectedDefined') {\r\n\t\t\tlet updatedLayers = [{\r\n\t\t\t\t...hoveredSelectedDefined,\r\n\t\t\t\toptions: {\r\n\t\t\t\t\t...hoveredSelectedDefined.options,\r\n\t\t\t\t\tselected: {\r\n\t\t\t\t\t\t...hoveredSelectedDefined.options.selected,\r\n\t\t\t\t\t\ttestSelection: {\r\n\t\t\t\t\t\t\t...hoveredSelectedDefined.options.selected.testSelection,\r\n\t\t\t\t\t\t\tkeys: features\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}];\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\thoveredSelectedDefined: updatedLayers\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"Styles\">\r\n\t\t\t\t<DocsToDo>Add description</DocsToDo>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\tkey: '3a188ace-94d2-46e5-86c8-684172bd2af4',\r\n\tdata: {\r\n\t\tnameInternal: '',\r\n\t\tnameDisplay: '',\r\n\t\tdescription: '',\r\n\t\tsource: 'geoserver|definition',\r\n\t\tnameGeoserver: '',\r\n\t\tdefinition: {\r\n\t\t\trules: [\r\n\t\t\t\t{\r\n\t\t\t\t\tfilter: {\r\n\t\t\t\t\t\t['and'|'or']: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfeatureType: 'Point|MultiPolygon|pixel|...',\r\n\t\t\t\t\t\t\t\tattributeKey: '4a188ace-94d2-46e5-86c8-684172bd2af5',\r\n\t\t\t\t\t\t\t\tattributeInterval: [-10.12,11.45] | [null, 11.45],\r\n\t\t\t\t\t\t\t\tattributeValue: 'Prague' | 7 | ...\r\n\t\t\t\t\t\t\t\t...\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t], \r\n\t\t\t\t\t\tfeatureType: 'Point|MultiPolygon|pixel|...',\r\n\t\t\t\t\t\tattributeKey: '4a188ace-94d2-46e5-86c8-684172bd2af5',\r\n\t\t\t\t\t\tattributeInterval: [-10.12,11.45] | [null, 11.45],\r\n\t\t\t\t\t\tattributeValue: 'Prague' | 7 | ...\r\n\t\t\t\t\t\t...\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstyles: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tattributeKey: '54fba0c3-889b-4a26-bda9-5cf9235517d0',\r\n\t\t\t\t\t\t\tattributeClasses: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tinterval: [7, 8]\r\n\t\t\t\t\t\t\t\t\tintervalBounds: [true, false] // 7 is included, 8 not\r\n\t\t\t\t\t\t\t\t\tfill: '#ff00ee'\r\n\t\t\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t}\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h2>Filter</h2>\r\n\t\t\t\t<ImplementationToDo>Not implemented yet</ImplementationToDo>\r\n\r\n\r\n\r\n\t\t\t\t<h2>Styles</h2>\r\n\t\t\t\t<h3 id=\"without-style\">Without styles</h3>\r\n\t\t\t\t<p>If styles are not defined default styles will be used.</p>\r\n\t\t\t\t<MapContainer layers={polygonLayers_noStyles} view={czView}/>\r\n\r\n\r\n\t\t\t\t<h3 id=\"fill\">Fill styling</h3>\r\n\t\t\t\t<p>For interior of shapes, it is possible to set color and opacity. If color is not defined, the interior will be fully transparent. If opacity is not defined, the interior will be opaque.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\\tstyles: [{\r\n\\t\\tfill: \"#10421c\",\r\n\\t\\tfillOpacity: 0.5\r\n\\t}]\r\n}`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<MapContainer layers={polygonLayers_fill} view={czView}/>\r\n\r\n\r\n\t\t\t\t<h3 id=\"outline\">Outline styling</h3>\r\n\t\t\t\t<p>Three properties of outline can be defined - color, width and opacity. To draw the outline, both color and width must be defined. If opacity is not defined, the outline will be opaque.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\\tstyles: [{\r\n\\t\\toutlineColor: \"#10421c\",\r\n\\t\\toutlineWidth: 5,\r\n\\t\\toutlineOpacity: 0.5\r\n\\t}]\r\n}`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<MapContainer layers={polygonLayers_outline} view={czView}/>\r\n\r\n\r\n\t\t\t\t<h3 id=\"hovered-selected\">Hovered and selected</h3>\r\n\t\t\t\t<p>If styles for hovered, selected or hovered selected are not defined, default styles will be used. Move cursor over area to see the popup and hovered style. Click on the area to select it.</p>\r\n\t\t\t\t<HoverHandler\r\n\t\t\t\t\tpopupContentComponent={\r\n\t\t\t\t\t\t(props) => <b>{props.data[\"NAME_1\"]}</b>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MapContainer layers={this.state.hoveredSelectedDefault} view={czView} onSelect={this.onLayerClick}/>\r\n\t\t\t\t</HoverHandler>\r\n\r\n\r\n\t\t\t\t<p>Hovered, selected or hovered selected styles could be defined in <Link to=\"/architecture/systemDataTypes/layers#vector\">layer definition</Link>.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\\tkey: \"polygons_hoveredSelectedDefined\",\r\n\\ttype: \"vector\",\r\n\\toptions: {\r\n\\t\\tfeatures: cz_gadm.features,\r\n\\t\\tfidColumnName: \"GID_1\",\r\n\\t\\thovered: {\r\n\\t\\t\\tstyle: {\r\n\\t\\t\\t\\toutlineColor: \"#33c21e\",\r\n\\t\\t\\t\\toutlineWidth: 5\r\n\\t\\t\\t}\r\n\\t\\t},\r\n\\t\\tselected: {\r\n\\t\\t\\ttestSelection: {\r\n\\t\\t\\t\\tkeys: [\"CZE.1_1\"],\r\n\\t\\t\\t\\tstyle: {\r\n\\t\\t\\t\\t\\tfill: \"#ff0000\"\r\n\\t\\t\\t\\t},\r\n\\t\\t\\t\\thoveredStyle: {\r\n\\t\\t\\t\\t\\toutlineColor: \"#c21ebf\",\r\n\\t\\t\\t\\t\\toutlineWidth: 5,\r\n\\t\\t\\t\\t\\tfill: \"#ff0066\"\r\n\\t\\t\\t\\t}\r\n\\t\\t\\t}\r\n\\t\\t}\r\n\\t}\r\n}`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<HoverHandler\r\n\t\t\t\t\tpopupContentComponent={\r\n\t\t\t\t\t\t(props) => <b>{props.data[\"NAME_1\"]}</b>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MapContainer layers={this.state.hoveredSelectedDefined} view={czView} onSelect={this.onLayerClick}/>\r\n\t\t\t\t</HoverHandler>\r\n\r\n\r\n\r\n\t\t\t\t<h3 id=\"values\">Attribute values</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\\tstyles: [{\r\n\\t\\tfill: \"#cccccc\"\r\n\\t}, {\r\n\\t\\tattributeKey: 'attr-2',\r\n\\t\\tattributeValues: {\r\n\\t\\t\\t'red': {\r\n\\t\\t\\t\\tfill: \"#ff0000\",\r\n\\t\\t\\t\\toutlineColor: \"#ffcccc\"\r\n\\t\\t\\t},\r\n\\t\\t\\t'green': {\r\n\\t\\t\\t\\tfill: \"#00ff00\"\r\n\\t\\t\\t},\r\n\\t\\t\\t'blue': {\r\n\\t\\t\\t\\tfill: \"#0000ff\"\r\n\\t\\t\\t}\r\n\\t\\t}\r\n\\t}]\r\n}`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<MapContainer layers={polygonLayers_attributeValues} view={czView}/>\r\n\r\n\r\n\r\n\t\t\t\t<h3 id=\"intervals\">Intervals</h3>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\\tstyles: [{\r\n\\t\\tfill: \"#cccccc\"\r\n\\t}, {\r\n\\t\\tattributeKey: \"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n\\t\\tattributeClasses: [\r\n\\t\\t\\t{\r\n\\t\\t\\t\\tinterval: [0,5],\r\n\\t\\t\\t\\tintervalBounds: [true, false],\r\n\\t\\t\\t\\tfill: \"#edf8fb\"\r\n\\t\\t\\t},\r\n\\t\\t\\t{\r\n\\t\\t\\t\\tinterval: [5,10],\r\n\\t\\t\\t\\tintervalBounds: [true, false],\r\n\\t\\t\\t\\tfill: \"#b3cde3\"\r\n\\t\\t\\t},{\r\n\\t\\t\\t\\tinterval: [10,20],\r\n\\t\\t\\t\\tintervalBounds: [true, false],\r\n\\t\\t\\t\\tfill: \"#8c96c6\"\r\n\\t\\t\\t}\r\n\\t\\t]\r\n\\t}]\r\n}`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<MapContainer layers={polygonLayers_intervals} view={czView}/>\r\n\r\n\r\n\r\n\r\n\t\t\t\t<h3 id=\"scales\">Scales</h3>\r\n\t\t\t\t<p>It is possible to set fill, outlines or opacity based on the scale.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\\tstyles: [{\r\n\\t\\tfill: \"#cccccc\"\r\n\\t}, {\r\n\\t\\tattributeKey: \"22a43eb3-6552-476f-97a5-b47490519642\",\r\n\\t\\tattributeScale: {\r\n\\t\\t\\tfill: {\r\n\\t\\t\\t\\t\"inputInterval\": [-10,10],\r\n\\t\\t\\t\\t\"outputInterval\": [\"#ff0909\", \"#e6e281\", \"#05cc00\"]\r\n\\t\\t\\t}\r\n\\t\\t}\r\n\\t}, {\r\n\\t\\tattributeKey: \"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n\\t\\tattributeScale: {\r\n\\t\\t\\toutlineWidth: {\r\n\\t\\t\\t\\t\"inputInterval\": [0,20],\r\n\\t\\t\\t\\t\"outputInterval\": [0,10]\r\n\\t\\t\\t}\r\n\\t\\t}\r\n\\t}]\r\n}`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<MapContainer layers={polygonLayers_scales} view={czView}/>\r\n\r\n\t\t\t\t<p>For point layers (only if using ReactLeafletMap), you can specify symbol size with scale.</p>\r\n\t\t\t\t<ImplementationToDo>This functionality is not fully implemented in WorldWind (just for LargeDataLayers, <Link to=\"#large-data-layer\">see usage</Link>)</ImplementationToDo>\r\n\t\t\t\t<MapContainer layers={pointLayers_scales_size} view={pragueView} hideWorldWind/>\r\n\r\n\t\t\t\t<p>This time symbol volume is specified with scale.</p>\r\n\t\t\t\t<MapContainer layers={pointLayers_scales_volume} view={pragueView} hideWorldWind/>\r\n\r\n\r\n\r\n\t\t\t\t<h3 id=\"transformations\">Transformations</h3>\r\n\t\t\t\t<ImplementationToDo>Currently implemented for arrows in WorldWind LargeDataLayer only. <Link to=\"#large-data-layer\">See usage.</Link></ImplementationToDo>\r\n\r\n\r\n\r\n\t\t\t\t<h3 id=\"symbols\">Symbols</h3>\r\n\t\t\t\t<ImplementationToDo>Currently implemented for Markers only. <Link to=\"#large-data-layer\">See WorldWind LargeDataLayer usage</Link> or <Link to=\"/components/maps/presentational/reactLeaflet/vectorLayer#points\">ReactLeaflet Vector layer usage</Link>.</ImplementationToDo>\r\n\r\n\r\n\t\t\t\t<h3 id=\"diagrams\">Diagrams</h3>\r\n\t\t\t\t<ImplementationToDo>This functionality is not implemented in WorldWind</ImplementationToDo>\r\n\r\n\t\t\t\t<h4>Basic diagrams</h4>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\\tstyles: [{\r\n\\t\\tfill: \"#cccccc\",\r\n\\t\\tdiagramShape: \"circle\",\r\n\\t\\tdiagramFillOpacity: 0.85\r\n\\t}, {\r\n\\t\\tattributeKey: \"22a43eb3-6552-476f-97a5-b47490519642\",\r\n\\t\\tattributeScale: {\r\n\\t\\t\\tdiagramSize: {\r\n\\t\\t\\t\\t\"inputInterval\": [-10,10],\r\n\\t\\t\\t\\t\"outputInterval\": [2000, 30000]\r\n\\t\\t\\t}\r\n\\t\\t}\r\n\\t}]\r\n}`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<MapContainer layers={polygonLayers_diagrams} view={czView} hideWorldWind/>\r\n\r\n\r\n\t\t\t\t<h4>Basic diagrams with choropleth</h4>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\\t\\tstyles: [{\r\n\\t\\t\\toutlineWidth: 1,\r\n\\t\\t\\toutlineColor: \"#666\",\r\n\\t\\t\\tdiagramShape: \"circle\",\r\n\\t\\t\\tdiagramFillOpacity: 1\r\n\\t\\t}, {\r\n\\t\\t\\tattributeKey: \"positive_attr\",\r\n\\t\\t\\tattributeScale: {\r\n\\t\\t\\t\\tdiagramSize: {\r\n\\t\\t\\t\\t\\t\"inputInterval\": [0,10],\r\n\\t\\t\\t\\t\\t\"outputInterval\": [2000, 20000]\r\n\\t\\t\\t\\t}\r\n\\t\\t\\t}\r\n\\t\\t}, {\r\n\\t\\t\\tattributeKey: \"diverging_attr\",\r\n\\t\\t\\tattributeClasses: [\r\n\\t\\t\\t\\t{\r\n\\t\\t\\t\\t\\tinterval: [-5,-3],\r\n\\t\\t\\t\\t\\tintervalBounds: [true, false],\r\n\\t\\t\\t\\t\\tfill: \"#d7191c\"\r\n\\t\\t\\t\\t},\r\n\\t\\t\\t\\t{\r\n\\t\\t\\t\\t\\tinterval: [-3,-1],\r\n\\t\\t\\t\\t\\tintervalBounds: [true, false],\r\n\\t\\t\\t\\t\\tfill: \"#fdae61\"\r\n\\t\\t\\t\\t},{\r\n\\t\\t\\t\\t\\tinterval: [-1,1],\r\n\\t\\t\\t\\t\\tintervalBounds: [true, false],\r\n\\t\\t\\t\\t\\tfill: \"#ffffbf\"\r\n\\t\\t\\t\\t},{\r\n\\t\\t\\t\\t\\tinterval: [1,3],\r\n\\t\\t\\t\\t\\tintervalBounds: [true, false],\r\n\\t\\t\\t\\t\\tfill: \"#a6d96a\"\r\n\\t\\t\\t\\t},{\r\n\\t\\t\\t\\t\\tinterval: [3,5],\r\n\\t\\t\\t\\t\\tintervalBounds: [true, false],\r\n\\t\\t\\t\\t\\tfill: \"#1a9641\"\r\n\\t\\t\\t\\t}\r\n\\t\\t\\t]\r\n\\t\\t}]\r\n}`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<MapContainer layers={polygonLayers_countries} view={europeView} hideWorldWind/>\r\n\r\n\r\n\r\n\t\t\t\t<h3 id=\"large-data-layer\">World Wind LargeDataLayer example</h3>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"javascript\">\r\n\t\t\t\t\t{\r\n`{\r\n\t\"styles\": [\r\n\t\t{\r\n\t\t\t\"shape\": \"circle-with-arrow\",\r\n\t\t\t\"outlineWidth\": 1,\r\n\t\t\t\"arrowColor\": \"#39ff14\",\r\n\t\t\t\"arrowWidth\": 3\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"attributeKey\": \"attr1\",\r\n\t\t\t\"attributeClasses\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"interval\": [0,25],\r\n\t\t\t\t\t\"fill\": \"#edf8fb\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"interval\": [25,50],\r\n\t\t\t\t\t\"fill\": \"#b3cde3\"\r\n\t\t\t\t},{\r\n\t\t\t\t\t\"interval\": [50,75],\r\n\t\t\t\t\t\"fill\": \"#8c96c6\"\r\n\t\t\t\t},{\r\n\t\t\t\t\t\"interval\": [75,101],\r\n\t\t\t\t\t\"fill\": \"#88419d\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t},{\r\n\t\t\t\"attributeKey\": \"attr3\",\r\n\t\t\t\"attributeScale\": {\r\n\t\t\t\t\"size\": {\r\n\t\t\t\t\t\"inputInterval\": [0,1],\r\n\t\t\t\t\t\"outputInterval\": [5,20]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},{\r\n\t\t\t\"attributeKey\": \"attr2\",\r\n\t\t\t\"attributeScale\": {\r\n\t\t\t\t\"arrowLength\": {\r\n\t\t\t\t\t\"inputTransformation\": [\"abs\"],\r\n\t\t\t\t\t\"inputInterval\": [0,10],\r\n\t\t\t\t\t\"outputInterval\": [0,30]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},{\r\n\t\t\t\"attributeKey\": \"attr2\",\r\n\t\t\t\"attributeTransformation\": {\r\n\t\t\t\t\"arrowDirection\": {\r\n\t\t\t\t\t\"inputTransformation\": [\"sign\"]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}`\r\n\t\t\t\t\t}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<div style={{marginTop: 10, height: 400}}>\r\n\t\t\t\t\t<PresentationMap\r\n\t\t\t\t\t\tlevelsBased={levelsRange}\r\n\t\t\t\t\t\tmapComponent={WorldWindMap}\r\n\t\t\t\t\t\tbackgroundLayer={backgroundLayer}\r\n\t\t\t\t\t\tlayers={largeDataLayers}\r\n\t\t\t\t\t\tview={{\r\n\t\t\t\t\t\t\tboxRange: 20000,\r\n\t\t\t\t\t\t\tcenter: {\r\n\t\t\t\t\t\t\t\tlat: 50.25,\r\n\t\t\t\t\t\t\t\tlon: 15.75\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tpointAsMarker\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapControls levelsBased={levelsRange}/>\r\n\t\t\t\t\t</PresentationMap>\r\n\t\t\t\t</div>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withNamespaces()(Index);","import React from 'react';\r\nimport Page, {InlineCodeHighlighter, SyntaxHighlighter} from \"../../../../Page\";\r\nimport {MapControls, PresentationMap, ReactLeafletMap} from \"@gisatcz/ptr-maps\";\r\nimport ComponentPropsTable, {Prop} from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\nimport {Link} from \"react-router-dom\";\r\nimport cz_gadm from \"../../../../mockData/map/czGadm1WithStyles/geometries.json\";\r\n\r\nconst view = {\r\n\tcenter: {lat: 50, lon: 15},\r\n\tboxRange: 1000000\r\n};\r\n\r\nconst backgroundLayer = {\r\n\tkey: 'background-osm',\r\n\ttype: 'wmts',\r\n\toptions: {\r\n\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t}\r\n};\r\n\r\n// WMS layer\r\nconst cuzk = {\r\n\tkey: 'cuzk_ortofoto',\r\n\tname: 'CUZK Ortofoto',\r\n\ttype: 'wms',\r\n\toptions: {\r\n\t\turl: 'http://geoportal.cuzk.cz/WMS_ORTOFOTO_PUB/WMService.aspx?',\r\n\t\tparams: {\r\n\t\t\tlayers: 'GR_ORTFOTORGB'\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// Vector\r\nconst polygons = {\r\n\tkey: \"gadm-1-cz\",\r\n\ttype: \"vector\",\r\n\toptions: {\r\n\t\tfeatures: cz_gadm.features,\r\n\t\tfidColumnName: \"GID_1\",\r\n\t\topacity: 0.5\r\n\t}\r\n};\r\n\r\nconst wmsExampleLayers = [cuzk];\r\nconst polygonLayers = [polygons];\r\n\r\nclass ReactLeafletMapDoc extends React.PureComponent {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"ReactLeafletMap\">\r\n\t\t\t\t<p>This component is based on <a href=\"https://react-leaflet.js.org/en/\" target=\"_blank\">React-Leaflet</a> library, an abstraction of popular <a href=\"https://leafletjs.com/\" target=\"_blank\">Leaflet</a> map library as React components.</p>\r\n\r\n\t\t\t\t<h2>Props</h2>\r\n\t\t\t\t<p>Bellow are listed specific props for ReactLeafletMap. Other props are common to all maps (<Link to=\"/components/maps/map\">see Map documentation</Link>).</p>\r\n\t\t\t\t<ComponentPropsTable>\r\n\t\t\t\t\t<Prop name=\"mapKey\" required type=\"string\">Key required by leaflet to setup a map</Prop>\r\n\t\t\t\t\t<Prop name=\"crs\" defaultValue=\"EPSG:3857\" type=\"string\"><Link to=\"#crs\">Coordinates reference system</Link> used for map. Default is <a href=\"https://epsg.io/3857\" target=\"_blank\">EPSG:3857 (Pseudo-Mercator)</a>. <Link to=\"#crs\">See complete list of available crs</Link>.</Prop>\r\n\t\t\t\t</ComponentPropsTable>\r\n\r\n\t\t\t\t<h2>Layers</h2>\r\n\t\t\t\t<p>Layer component is always used inside ReactLeafletMap component. The data are passed via layers prop (see <Link to=\"/components/maps/map\">Map</Link> documentation), where each layer is represented by specific layer data type. For general information about layer system data type, see <Link to=\"/architecture/systemDataTypes/layers\">Layers</Link> in System data types section.</p>\r\n\r\n\t\t\t\t<p>It is possible to use following layer types inside ReactLeafletMap component:</p>\r\n\t\t\t\t<ul className=\"ptr-docs-basic-list\">\r\n\t\t\t\t\t<li><Link to=\"#wmts\">WMTS layer</Link></li>\r\n\t\t\t\t\t<li><Link to=\"#wms\">WMS layer</Link></li>\r\n\t\t\t\t\t<li><Link to=\"./reactLeaflet/vectorLayer\">Vector layer</Link></li>\r\n\t\t\t\t\t<li><Link to=\"./reactLeaflet/diagramLayer\">Diagram layer</Link></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3 id=\"wmts\">WMTS layer</h3>\r\n\t\t\t\t<p>Typical usage of WMTS layer as background.</p>\r\n\t\t\t\t<div style={{height: 400, marginBottom: 10}}>\r\n\t\t\t\t\t<ReactLeafletMap\r\n\t\t\t\t\t\tmapKey='react-leaflet-map'\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\tbackgroundLayer={backgroundLayer}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`<ReactLeafletMap\r\n\tmapKey='react-leaflet-map'\r\n\tview={{\r\n\t\tcenter: {lat: 50, lon: 15},\r\n\t\tboxRange: 2000000\r\n\t}}\r\n\tbackgroundLayer={{\r\n\t\tkey: 'background-osm',\r\n\t\ttype: 'wmts',\r\n\t\toptions: {\r\n\t\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t\t}\r\n\t}}\r\n/>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h3 id=\"wms\">WMS layer</h3>\r\n\t\t\t\t<div style={{height: 400, marginBottom: 10}}>\r\n\t\t\t\t\t<ReactLeafletMap\r\n\t\t\t\t\t\tmapKey='react-leaflet-map-2'\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\tbackgroundLayer={backgroundLayer}\r\n\t\t\t\t\t\tlayers={wmsExampleLayers}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`<ReactLeafletMap\r\n\tmapKey='react-leaflet-map-2'\r\n\tview={{\r\n\t\tcenter: {lat: 50, lon: 15},\r\n\t\tboxRange: 2000000\r\n\t}}\r\n\tbackgroundLayer={{\r\n\t\tkey: 'background-osm',\r\n\t\ttype: 'wmts',\r\n\t\toptions: {\r\n\t\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t\t}\r\n\t}}\r\n\tlayers={[\r\n\t\t{\r\n\t\t\tkey: 'cuzk_ortofoto',\r\n\t\t\tname: 'CUZK Ortofoto',\r\n\t\t\ttype: 'wms',\r\n\t\t\toptions: {\r\n\t\t\t\turl: 'http://geoportal.cuzk.cz/WMS_ORTOFOTO_PUB/WMService.aspx?',\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlayers: 'GR_ORTFOTORGB'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t]}\r\n/>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h2 id=\"crs\">Coordinates reference system</h2>\r\n\t\t\t\t<p>A coordinate reference system (CRS) defines, with the help of coordinates, how the two-dimensional, projected map is related to real places on the earth. The decision as to which map projection and coordinate reference system to use, depends on the regional extent of the area you want to work in.</p>\r\n\t\t\t\t<p>Currently, it is possible to use following CRS in ReactLeafletMap: </p>\r\n\t\t\t\t<ul className=\"ptr-docs-basic-list\">\r\n\t\t\t\t\t<li>Geographic coordinate systems (GCS):</li>\r\n\t\t\t\t\t<ul className=\"ptr-docs-basic-list\">\r\n\t\t\t\t\t\t<li><a href=\"https://epsg.io/4326\" target=\"_blank\">WGS-84</a> (<InlineCodeHighlighter>'EPSG:4326'</InlineCodeHighlighter>)</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<li>Projected coordinate reference systems (PCRS):</li>\r\n\t\t\t\t\t<ul className=\"ptr-docs-basic-list\">\r\n\t\t\t\t\t\t<li><a href=\"https://epsg.io/3857\" target=\"_blank\">Pseudo-Mercator</a> (<InlineCodeHighlighter>'EPSG:3857'</InlineCodeHighlighter>) - default value</li>\r\n\t\t\t\t\t\t<li><a href=\"https://epsg.io/5514\" target=\"_blank\">S-JTSK/Krovak East-North</a> (<InlineCodeHighlighter>'EPSG:5514'</InlineCodeHighlighter>)</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<p>GCS defines where the data is located on the earth’s surface. PCRS tells the data how to draw on a flat surface, like on a paper map or a computer screen. The GCS is round, and so records locations in degrees. The PCRS is flat, so it records locations in linear units (usually meters).</p>\r\n\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`<PresentationMap\r\n\tmapComponent={ReactLeafletMap}\r\n\tmapKey='react-leaflet-map-krovak'\r\n\tview={{}}\r\n\tbackgroundLayer={{}}\r\n\tlayers={[]}\r\n\tcrs=\"EPSG:5514\"\r\n>\r\n\t<MapControls zoomOnly levelsBased/>\r\n</PresentationMap>`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<div style={{height: 500, marginBottom: 10}}>\r\n\t\t\t\t\t<PresentationMap\r\n\t\t\t\t\t\tmapComponent={ReactLeafletMap}\r\n\t\t\t\t\t\tmapKey='react-leaflet-map-krovak'\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\tbackgroundLayer={cuzk}\r\n\t\t\t\t\t\tlayers={polygonLayers}\r\n\t\t\t\t\t\tcrs=\"EPSG:5514\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MapControls zoomOnly levelsBased/>\r\n\t\t\t\t\t</PresentationMap>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<p>Alternatively, you can set crs for WMS layer only (e.g. in cases, where WMS is not provided in Leaflet's default crs - EPSG:3857) from the list above.</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`//...\r\n\tlayers={[{\r\n\t    key: 'cuzk_ortofoto',\r\n\t\tname: 'CUZK Ortofoto',\r\n\t\ttype: 'wms',\r\n\t\toptions: {\r\n\t\t\turl: 'http://geoportal.cuzk.cz/WMS_ORTOFOTO_PUB/WMService.aspx?',\r\n\t\t\tparams: {\r\n\t\t\t\tlayers: 'GR_ORTFOTORGB',\r\n\t\t\t\tcrs: 'EPSG:4326'\r\n\t\t\t}\r\n\t\t}\r\n\t}]}\r\n//...`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ReactLeafletMapDoc;","import React from 'react';\r\nimport Page, {SyntaxHighlighter} from \"../../../../Page\";\r\nimport {WorldWindMap} from \"@gisatcz/ptr-maps\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ComponentPropsTable, {Prop} from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\n\r\nconst view = {\r\n\tcenter: {lat: 50, lon: 15},\r\n\tboxRange: 2000000\r\n};\r\n\r\nconst backgroundLayer = {\r\n\tkey: 'background-osm',\r\n\ttype: 'wmts',\r\n\toptions: {\r\n\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t}\r\n};\r\n\r\n// WMS layer\r\nconst cuzk = {\r\n\tkey: 'cuzk_ortofoto',\r\n\tname: 'CUZK Ortofoto',\r\n\ttype: 'wms',\r\n\toptions: {\r\n\t\turl: 'http://geoportal.cuzk.cz/WMS_ORTOFOTO_PUB/WMService.aspx?',\r\n\t\tparams: {\r\n\t\t\tlayers: 'GR_ORTFOTORGB'\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst wmsLayers = [cuzk];\r\n\r\nclass WorldWindMapDoc extends React.PureComponent {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Page title=\"WorldWindMap\">\r\n\t\t\t\t<p>This component is based on <a href=\"https://worldwind.arc.nasa.gov/web/\" target=\"_blank\">NASA Web World Wind</a> map library.</p>\r\n\t\t\t\t<h2>Props</h2>\r\n\t\t\t\t<p>Bellow are listed specific props for ReactLeafletMap. Other props are common to all maps (<Link to=\"/components/maps/map\">see Map documentation</Link>).</p>\r\n\t\t\t\t<ComponentPropsTable>\r\n\t\t\t\t\t<Prop name=\"elevationModel\" defaultValue=\"default\" type=\"string|null\">If null, the map will be rendered without elevation model.</Prop>\r\n\t\t\t\t</ComponentPropsTable>\r\n\r\n\t\t\t\t<h2>Layers</h2>\r\n\t\t\t\t<p>The data for layers are passed via layers prop (see <Link to=\"/components/maps/map\">Map</Link> documentation), where each layer is represented by specific layer data type. For general information about layer system data type, see <Link to=\"/architecture/systemDataTypes/layers\">Layers</Link> in System data types section.</p>\r\n\r\n\t\t\t\t<p>It is possible to use following layer types currently:</p>\r\n\t\t\t\t<ul className=\"ptr-docs-basic-list\">\r\n\t\t\t\t\t<li><Link to=\"#wmts\">WMTS layer</Link></li>\r\n\t\t\t\t\t<li><Link to=\"#wms\">WMS layer</Link></li>\r\n\t\t\t\t\t<li><Link to=\"./webWorldWind/vectorLayer\">Vector layer</Link></li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\t<h3 id=\"wmts\">WMTS layer</h3>\r\n\t\t\t\t<p>Typical usage of WMTS layer as background.</p>\r\n\t\t\t\t<div style={{height: 300, marginBottom: 10}}>\r\n\t\t\t\t\t<WorldWindMap\r\n\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\tbackgroundLayer={backgroundLayer}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`<WorldWindMap\r\n\tview={{\r\n\t\tcenter: {lat: 50, lon: 15},\r\n\t\tboxRange: 2000000\r\n\t}}\r\n\tbackgroundLayer={{\r\n\t\tkey: 'background-osm',\r\n\t\ttype: 'wmts',\r\n\t\toptions: {\r\n\t\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t\t}\r\n\t}}\r\n/>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\r\n\t\t\t\t<h3 id=\"wms\">WMS layer</h3>\r\n\t\t\t\t<div style={{height: 300, marginBottom: 10}}>\r\n\t\t\t\t\t<HoverHandler>\r\n\t\t\t\t\t\t<WorldWindMap\r\n\t\t\t\t\t\t\tmapKey=\"wms-layers\"\r\n\t\t\t\t\t\t\tview={view}\r\n\t\t\t\t\t\t\tbackgroundLayer={backgroundLayer}\r\n\t\t\t\t\t\t\tlayers={wmsLayers}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</HoverHandler>\r\n\t\t\t\t</div>\r\n\t\t\t\t<SyntaxHighlighter language=\"jsx\">{`<WorldWindMap\r\n\tview={{\r\n\t\tcenter: {lat: 50, lon: 15},\r\n\t\tboxRange: 2000000\r\n\t}}\r\n\tbackgroundLayer={{\r\n\t\tkey: 'background-osm',\r\n\t\ttype: 'wmts',\r\n\t\toptions: {\r\n\t\t\turl: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n\t\t}\r\n\t}}\r\n\tlayers={[\r\n\t\t{\r\n\t\t\tkey: 'cuzk_ortofoto',\r\n\t\t\tname: 'CUZK Ortofoto',\r\n\t\t\ttype: 'wms',\r\n\t\t\toptions: {\r\n\t\t\t\turl: 'http://geoportal.cuzk.cz/WMS_ORTOFOTO_PUB/WMService.aspx?',\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlayers: 'GR_ORTFOTORGB'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t]}\r\n/>\r\n`}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t</Page>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default WorldWindMapDoc;","import fetch from 'isomorphic-fetch';\r\nimport queryString from 'query-string';\r\n\r\nfunction request (url, method, query, payload) {\r\n\r\n    if (query) {\r\n        url += '?' + queryString.stringify(query);\r\n    }\r\n\r\n    return fetch(url, {\r\n        method: method,\r\n        body: payload ? JSON.stringify(payload) : null\r\n    }).then(\r\n        response => {\r\n            if (response.ok) {\r\n                return response.json().then(body => {\r\n                    if (body) {\r\n                        return body;\r\n                    } else {\r\n                        throw new Error('no data returned');\r\n                    }\r\n                });\r\n            } else {\r\n                throw new Error('response error');\r\n            }\r\n        },\r\n        error => {\r\n            throw error;\r\n        }\r\n    );\r\n}\r\n\r\nexport default {\r\n    request\r\n}","import React from 'react';\r\nimport _ from \"lodash\";\r\nimport Page, {\r\n    DocsToDo,\r\n    DocsToDoInline,\r\n    ImplementationToDo,\r\n    InlineCodeHighlighter,\r\n    LightDarkBlock,\r\n    SyntaxHighlighter\r\n} from \"../../../../Page\";\r\nimport {ReactLeafletMap} from \"@gisatcz/ptr-maps\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport {Link} from \"react-router-dom\";\r\nimport cz_gadm from \"../../../../mockData/map/czGadm1WithStyles/geometries.json\";\r\nimport mixed_features from \"../../../../mockData/map/mixedVectorFeaturesLayer/geometries.json\";\r\nimport pointData from \"../../../../mockData/map/largePointData/geometries.json\";\r\nimport pointStyle from \"../../../../mockData/map/largePointData/style-simple-point.json\";\r\nimport nuts_2 from \"../../../../mockData/map/nuts_2.json\";\r\nimport config from \"../../../../../config\";\r\nimport utils from \"../../../../../utils\";\r\n\r\n// *** VIEWS ***\r\nconst view = {\r\n    center: {lat: 50, lon: 15},\r\n    boxRange: 1000000\r\n};\r\n\r\nconst viewEurope = {\r\n    center: {lat: 50, lon: 15},\r\n    boxRange: 2000000\r\n};\r\n\r\nconst viewHradec = {\r\n    center: {lat: 50.2, lon: 15.8},\r\n    boxRange: 50000\r\n};\r\n\r\nconst backgroundLayer = {\r\n    key: 'background-osm',\r\n    type: 'wmts',\r\n    options: {\r\n        url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n// *** POLYGONS ***\r\n// Basic polygon layer\r\nconst polygons = {\r\n    key: \"gadm-1-cz\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: cz_gadm.features,\r\n        fidColumnName: \"GID_1\"\r\n    }\r\n};\r\n\r\n// Basic polygon layer with selected features\r\nconst polygonsWithSelection = {\r\n    key: \"polygons-with-selection\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: cz_gadm.features,\r\n        selected: {\r\n            \"testSelection\": {\r\n                keys: [\"CZE.12_1\"]\r\n            }\r\n        },\r\n        fidColumnName: \"GID_1\"\r\n    }\r\n};\r\n\r\n// Choropleth\r\nconst choroplethStyle = {rules: [{\r\n    styles: [{\r\n        outlineWidth: 1,\r\n        outlineColor: \"#666666\"\r\n    },{\r\n        attributeKey: \"diverging_attr\",\r\n        attributeClasses: [\r\n            {\r\n                interval: [-5,-3],\r\n                intervalBounds: [true, false],\r\n                fill: \"#d7191c\"\r\n            },\r\n            {\r\n                interval: [-3,-1],\r\n                intervalBounds: [true, false],\r\n                fill: \"#fdae61\"\r\n            },{\r\n                interval: [-1,1],\r\n                intervalBounds: [true, false],\r\n                fill: \"#ffffbf\"\r\n            },{\r\n                interval: [1,3],\r\n                intervalBounds: [true, false],\r\n                fill: \"#a6d96a\"\r\n            },{\r\n                interval: [3,5],\r\n                intervalBounds: [true, false],\r\n                fill: \"#1a9641\"\r\n            }\r\n        ]\r\n    }]\r\n}]};\r\n\r\nconst choropleth = {\r\n    key: \"choropleth\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: nuts_2.features,\r\n        style: choroplethStyle,\r\n        selected: {\r\n            \"testSelection\": {\r\n                keys: []\r\n            }\r\n        },\r\n        fidColumnName: \"id\"\r\n    }\r\n};\r\n\r\nconst basicPolygonLayers = [polygons];\r\nconst basicPolygonLayersWithSelection = [polygonsWithSelection];\r\nconst choroplethLayers = [choropleth]\r\n\r\n\r\n\r\n\r\n// *** POINTS ***\r\n// Vector layer - hundreds of points - size independent of zoom\r\nconst pointsStyle = pointStyle.data.definition;\r\nconst pointsInPx = {\r\n    key: \"point-data-layer\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: pointData.features,\r\n        style: pointsStyle,\r\n        pointAsMarker: true,\r\n        fidColumnName: \"gid\"\r\n    }\r\n};\r\n\r\n// Vector layer - hundreds of points - size in meters\r\nlet pointsInMetersStyle = _.cloneDeep(pointsStyle);\r\npointsInMetersStyle.rules[0].styles[2].attributeScale.size.outputInterval = [500, 2000];\r\nconst pointsInMeters = {\r\n    key: \"point-data-layer-2\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: pointData.features,\r\n        style: pointsInMetersStyle,\r\n        fidColumnName: \"gid\"\r\n    }\r\n};\r\n\r\n\r\nconst pointsInPxLayers = [pointsInPx];\r\nconst pointsInMetersLayers = [pointsInMeters];\r\n\r\n// Shapes\r\nconst shapesStyle = {\r\n    \"rules\":[\r\n        {\r\n            \"styles\": [\r\n                {\r\n                    \"fillOpacity\": 0.85,\r\n                    \"outlineWidth\": 1,\r\n                    \"outlineColor\": \"#333333\"\r\n                },\r\n                {\r\n                    \"attributeKey\": \"attr1\",\r\n                    \"attributeClasses\": [\r\n                        {\r\n                            \"interval\": [0,25],\r\n                            \"fill\": \"#edf8fb\"\r\n                        },\r\n                        {\r\n                            \"interval\": [25,50],\r\n                            \"fill\": \"#b3cde3\"\r\n                        },{\r\n                            \"interval\": [50,75],\r\n                            \"fill\": \"#8c96c6\"\r\n                        },{\r\n                            \"interval\": [75,101],\r\n                            \"fill\": \"#88419d\"\r\n                        }\r\n                    ]\r\n                }, {\r\n                    \"attributeKey\": \"attr3\",\r\n                    \"attributeScale\": {\r\n                        \"size\": {\r\n                            \"inputInterval\": [0,1],\r\n                            \"outputInterval\": [5,20]\r\n                        }\r\n                    }\r\n                },{\r\n                    \"attributeKey\": \"attr2\",\r\n                    \"attributeClasses\": [\r\n                        {\r\n                            \"interval\": [-10, -3],\r\n                            \"shape\": \"square\",\r\n                        },\r\n                        {\r\n                            \"interval\": [-3,3],\r\n                            \"shape\": \"circle\"\r\n                        },{\r\n                            \"interval\": [3,10],\r\n                            \"shape\": \"diamond\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nconst shapes = {\r\n    key: \"shapes\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: pointData.features,\r\n        style: shapesStyle,\r\n        pointAsMarker: true,\r\n        fidColumnName: \"gid\"\r\n    }\r\n};\r\n\r\nconst shapeLayers = [shapes];\r\n\r\n/* LINES */\r\nconst lineFeaturesStyle = {rules: [{\r\n        styles: [{\r\n            outlineColor: \"#000000\",\r\n            outlineWidth: 2,\r\n        },{\r\n            attributeKey: \"TRIDA\",\r\n            attributeValues: {\r\n                1: {\r\n                    outlineColor: \"#b43300\",\r\n                    outlineWidth: 6\r\n                },\r\n                2: {\r\n                    outlineColor: \"#f89b7a\",\r\n                    outlineWidth: 6\r\n                },\r\n                3: {\r\n                    outlineColor: \"#6c92d0\",\r\n                    outlineWidth: 3\r\n                }\r\n            }\r\n        }]\r\n    }]};\r\n\r\nconst lineFeaturesLayer = {\r\n    key: \"mixed-features-layer\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: [],\r\n        style: lineFeaturesStyle,\r\n        fidColumnName: \"OBJECTID\"\r\n    }\r\n};\r\n\r\nconst lineFeaturesLayers = [lineFeaturesLayer];\r\n\r\n/* MIXED */\r\nconst mixedFeaturesStyle = {rules: [{\r\n    styles: [{\r\n        fill: \"#cccccc\",\r\n        outlineColor: \"#000000\",\r\n        outlineWidth: 2,\r\n        size: 20\r\n    }, {\r\n        attributeKey: \"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n        attributeClasses: [\r\n            {\r\n                interval: [0,5],\r\n                intervalBounds: [true, false],\r\n                fill: \"#edf8fb\"\r\n            },\r\n            {\r\n                interval: [5,10],\r\n                intervalBounds: [true, false],\r\n                fill: \"#b3cde3\"\r\n            },{\r\n                interval: [10,20],\r\n                intervalBounds: [true, false],\r\n                fill: \"#8c96c6\"\r\n            }\r\n        ]\r\n    }]\r\n}]};\r\n\r\nconst mixedFeaturesLayer = {\r\n    key: \"mixed-features-layer\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: mixed_features.features,\r\n        selected: {\r\n            \"testSelection\": {\r\n                keys: [\"CZE.12_1\"]\r\n            }\r\n        },\r\n        fidColumnName: \"GID_1\",\r\n        pointAsMarker: true,\r\n        style: mixedFeaturesStyle\r\n    }\r\n};\r\n\r\nconst mixedFeaturesLayers = [mixedFeaturesLayer];\r\n\r\n\r\nclass LeafletVectorLayer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            basicPolygonLayersWithSelection,\r\n            choroplethLayers,\r\n            lineFeaturesLayers,\r\n            mixedFeaturesLayers\r\n        }\r\n\r\n        this.onLayerClick = this.onLayerClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addLineData();\r\n    }\r\n\r\n    addLineData() {\r\n        let url = `${config.mockDataRepositoryUrl}pvlach/lines/cz-main-roads.geojson`;\r\n        return utils.request(url, \"GET\").then(data => {\r\n            if (data) {\r\n                let updatedLayers = [{\r\n                    ...this.state.lineFeaturesLayers[0],\r\n                    options: {\r\n                        ...this.state.lineFeaturesLayers[0].options,\r\n                        features: data.features\r\n                    }\r\n                }];\r\n\r\n                this.setState({\r\n                    lineFeaturesLayers: updatedLayers\r\n                });\r\n            }\r\n        }).catch(err => new Error(err));\r\n    }\r\n\r\n    onLayerClick(map, layer, features) {\r\n        if (map === 'basic-polygon-selection') {\r\n            let updatedLayers = [{\r\n               ...polygonsWithSelection,\r\n               options: {\r\n                   ...polygonsWithSelection.options,\r\n                   selected: {\r\n                       ...polygonsWithSelection.options.selected,\r\n                       testSelection: {\r\n                           ...polygonsWithSelection.options.selected.testSelection,\r\n                           keys: features\r\n                       }\r\n                   }\r\n               }\r\n            }];\r\n\r\n            this.setState({\r\n                basicPolygonLayersWithSelection: updatedLayers\r\n            })\r\n        } else if (map === 'choropleth-map') {\r\n            let updatedLayers = [{\r\n                ...choropleth,\r\n                options: {\r\n                    ...choropleth.options,\r\n                    selected: {\r\n                        ...choropleth.options.selected,\r\n                        testSelection: {\r\n                            ...choropleth.options.selected.testSelection,\r\n                            keys: features\r\n                        }\r\n                    }\r\n                }\r\n            }];\r\n\r\n            this.setState({\r\n                choroplethLayers: updatedLayers\r\n            })\r\n        } else if (map === 'mixed-features-map') {\r\n            let updatedLayers = [{\r\n                ...mixedFeaturesLayer,\r\n                options: {\r\n                    ...mixedFeaturesLayer.options,\r\n                    selected: {\r\n                        ...mixedFeaturesLayer.options.selected,\r\n                        testSelection: {\r\n                            ...mixedFeaturesLayer.options.selected.testSelection,\r\n                            keys: features\r\n                        }\r\n                    }\r\n                }\r\n            }];\r\n\r\n            this.setState({\r\n                mixedFeaturesLayers: updatedLayers\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Page title=\"Leaflet Vector layer\">\r\n\r\n                <p>Use this type of layer to display analytical units, for interactive layers or choropleths (see examples below).</p>\r\n\r\n                <p>VectorLayer component is always used inside ReactLeafletMap component and wrapped by <Link to=\"indexedVectorLayer\">Indexed Vector Layer</Link> component. The data are passed via layers prop (see <Link to=\"/components/maps/map\">Map</Link> documentation), where each layer is represented by Vector layer data type. For general information about Vector layer system data type, see <Link to=\"/architecture/systemDataTypes/layers#vector\">Layers</Link> section.</p>\r\n\r\n                <h2 id=\"polygons\">Polygons</h2>\r\n                <h3>Basic</h3>\r\n                <p>Basic usage with default style.</p>\r\n                <SyntaxHighlighter language=\"jsx\">{`<ReactLeafletMap\r\n    mapKey='basic-usage'\r\n    view={{\r\n        center: {lat: 50, lon: 15},\r\n        boxRange: 2000000\r\n    }}\r\n    backgroundLayer={{\r\n        key: 'background-osm',\r\n        type: 'wmts',\r\n        options: {\r\n            url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n        }\r\n    }}\r\n    layers={[{\r\n        key: \"gadm-1-cz\",\r\n        type: \"vector\",\r\n        options: {\r\n            features: [], //list of features\r\n            fidColumnName: \"GID_1\"\r\n        }\r\n    }]}\r\n/>`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <ReactLeafletMap\r\n                        mapKey='basic-usage'\r\n                        view={view}\r\n                        backgroundLayer={backgroundLayer}\r\n                        layers={basicPolygonLayers}\r\n                    />\r\n                </div>\r\n\r\n                <h3>With popups and selection</h3>\r\n                <p>Move cursor over area to see the popup. Click on the area to select it.</p>\r\n                <SyntaxHighlighter language=\"jsx\">{`<HoverHandler\r\n    popupContentComponent={\r\n        (props) => <b>{props.data[\"NAME_1\"]}</b>\r\n    }\r\n>\r\n    <ReactLeafletMap\r\n        //...\r\n        onLayerClick={this.onLayerClick}\r\n        layers={[{\r\n            key: \"polygons-with-selection\",\r\n            type: \"vector\",\r\n            options: {\r\n                features: cz_gadm.features,\r\n                selected: {\r\n                    \"testSelection\": {\r\n                        keys: [\"CZE.12_1\"]\r\n                    }\r\n                },\r\n                fidColumnName: \"GID_1\"\r\n            }\r\n        }]}\r\n    />\r\n</HoverHandler>`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => <b>{props.data[\"NAME_1\"]}</b>\r\n                        }\r\n                    >\r\n                        <ReactLeafletMap\r\n                            mapKey='basic-polygon-selection'\r\n                            view={view}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.basicPolygonLayersWithSelection}\r\n                            onLayerClick={this.onLayerClick}\r\n                        />\r\n                    </HoverHandler>\r\n                </div>\r\n\r\n                <h3>Choropleth with hundreds of polygons</h3>\r\n                <p>Move cursor over area to see the popup. Click on the area to select it.</p>\r\n                <SyntaxHighlighter language=\"jsx\">{`<HoverHandler\r\n    popupContentComponent={\r\n        (props) => {\r\n            return (<><b>{props.data[\"id\"]}</b>: {props.data[\"diverging_attr\"].toFixed(2)}</>);\r\n        }\r\n    }\r\n>\r\n    <ReactLeafletMap\r\n        //...\r\n        layers={[{\r\n            //...\r\n            options: {\r\n                //...\r\n                style: {\r\n                    rules: [{\r\n                        styles: [{\r\n                            outlineWidth: 1,\r\n                            outlineColor: \"#666\"\r\n                        },{\r\n                            attributeKey: \"diverging_attr\",\r\n                            attributeClasses: [\r\n                                {\r\n                                    interval: [-5,-3],\r\n                                    intervalBounds: [true, false],\r\n                                    fill: \"#d7191c\"\r\n                                },\r\n                                {\r\n                                    interval: [-3,-1],\r\n                                    intervalBounds: [true, false],\r\n                                    fill: \"#fdae61\"\r\n                                },{\r\n                                    interval: [-1,1],\r\n                                    intervalBounds: [true, false],\r\n                                    fill: \"#ffffbf\"\r\n                                },{\r\n                                    interval: [1,3],\r\n                                    intervalBounds: [true, false],\r\n                                    fill: \"#a6d96a\"\r\n                                },{\r\n                                    interval: [3,5],\r\n                                    intervalBounds: [true, false],\r\n                                    fill: \"#1a9641\"\r\n                                }\r\n                            ]\r\n                        }]\r\n                    }\r\n                ]}\r\n            }\r\n        }]}\r\n    />\r\n</HoverHandler>`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => {\r\n                                return (<><b>{props.data[\"id\"]}</b>: {props.data[\"diverging_attr\"].toFixed(2)}</>);\r\n                            }\r\n                        }\r\n                    >\r\n                        <ReactLeafletMap\r\n                            mapKey='choropleth-map'\r\n                            view={viewEurope}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.choroplethLayers}\r\n                            onLayerClick={this.onLayerClick}\r\n                        />\r\n                    </HoverHandler>\r\n                </div>\r\n\r\n                <h2 id=\"points\">Points</h2>\r\n                <h3>Render as markers - size in pixels</h3>\r\n                <p>Try to zoom in and out. The size of circle is the same for each zoom level (independent of zoom) and varies between 5 and 20 px.</p>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => {\r\n                                return (<p>Value: {props.data[\"attr1\"]}</p>);\r\n                            }\r\n                        }\r\n                    >\r\n                        <ReactLeafletMap\r\n                            mapKey='react-leaflet-map-3'\r\n                            view={viewHradec}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={pointsInPxLayers}\r\n                        />\r\n                    </HoverHandler>\r\n                </div>\r\n\r\n                <p>Markers can have different shapes. Currently, circle, square and diamond is implemented.</p>\r\n                <SyntaxHighlighter language=\"jsx\">{`<HoverHandler\r\n    popupContentComponent={\r\n        (props) => {\r\n            return (<p>\r\n                Color: {props.data[\"attr1\"]}<br/>\r\n                Shape: {props.data[\"attr2\"]}<br/>\r\n                Size: {props.data[\"attr3\"]}\r\n            </p>);\r\n        }\r\n    }\r\n>\r\n    <ReactLeafletMap\r\n        //...\r\n        layers={[{\r\n            //...\r\n            options: {\r\n                //...\r\n                pointAsMarker: true,\r\n                style: {\r\n                    \"rules\":[{\r\n                        \"styles\": [\r\n                            {\r\n                                \"fillOpacity\": 0.85,\r\n                                \"outlineWidth\": 1,\r\n                                \"outlineColor\": \"#333333\"\r\n                            },\r\n                            {\r\n                                \"attributeKey\": \"attr1\",\r\n                                \"attributeClasses\": [\r\n                                    {\r\n                                        \"interval\": [0,25],\r\n                                        \"fill\": \"#edf8fb\"\r\n                                    },\r\n                                    {\r\n                                        \"interval\": [25,50],\r\n                                        \"fill\": \"#b3cde3\"\r\n                                    },{\r\n                                        \"interval\": [50,75],\r\n                                        \"fill\": \"#8c96c6\"\r\n                                    },{\r\n                                        \"interval\": [75,101],\r\n                                        \"fill\": \"#88419d\"\r\n                                    }\r\n                                ]\r\n                            }, {\r\n                                \"attributeKey\": \"attr3\",\r\n                                \"attributeScale\": {\r\n                                    \"size\": {\r\n                                        \"inputInterval\": [0,1],\r\n                                        \"outputInterval\": [5,20]\r\n                                    }\r\n                                }\r\n                            },{\r\n                                \"attributeKey\": \"attr2\",\r\n                                \"attributeClasses\": [\r\n                                    {\r\n                                        \"interval\": [-10, -3],\r\n                                        \"shape\": \"square\",\r\n                                    },\r\n                                    {\r\n                                        \"interval\": [-3,3],\r\n                                        \"shape\": \"circle\"\r\n                                    },{\r\n                                        \"interval\": [3,10],\r\n                                        \"shape\": \"diamond\"\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]}\r\n            }\r\n        }]}\r\n    />\r\n</HoverHandler>`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => {\r\n                                return (<p>\r\n                                    Color: {props.data[\"attr1\"]}<br/>\r\n                                    Shape: {props.data[\"attr2\"]}<br/>\r\n                                    Size: {props.data[\"attr3\"]}\r\n                                </p>);\r\n                            }\r\n                        }\r\n                    >\r\n                        <ReactLeafletMap\r\n                            mapKey='react-leaflet-map-3'\r\n                            view={viewHradec}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={shapeLayers}\r\n                        />\r\n                    </HoverHandler>\r\n                </div>\r\n\r\n                <h3>Size in meters</h3>\r\n                <p>Try to zoom in and out. The size of circle is in meters and varies between 500 and 2000 meters.</p>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => {\r\n                                return (<p>Value: {props.data[\"attr1\"]}</p>);\r\n                            }\r\n                        }\r\n                    >\r\n                        <ReactLeafletMap\r\n                            mapKey='react-leaflet-map-4'\r\n                            view={viewHradec}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={pointsInMetersLayers}\r\n                        />\r\n                    </HoverHandler>\r\n                </div>\r\n\r\n                <h2 id=\"lines\">Lines</h2>\r\n                <SyntaxHighlighter language=\"jsx\">{`<HoverHandler\r\n//...\r\n>\r\n    <ReactLeafletMap\r\n        //...\r\n        layers={[{\r\n            //...\r\n            options: {\r\n                //...\r\n                style: {\r\n                    rules: [{\r\n                        styles: [{\r\n                            outlineColor: \"#000000\",\r\n                            outlineWidth: 2,\r\n                        },{\r\n                            attributeKey: \"TRIDA\",\r\n                            attributeValues: {\r\n                                1: {\r\n                                    outlineColor: \"#b43300\",\r\n                                    outlineWidth: 6\r\n                                },\r\n                                2: {\r\n                                    outlineColor: \"#f89b7a\",\r\n                                    outlineWidth: 6\r\n                                },\r\n                                3: {\r\n                                    outlineColor: \"#6c92d0\",\r\n                                    outlineWidth: 3\r\n                                }\r\n                            }\r\n                        }]\r\n                    }]\r\n                }\r\n            }\r\n        }]}\r\n    />\r\n</HoverHandler>`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => {\r\n                                return (<><b>{props.data[\"CISLO_SILNICE\"]}</b></>);\r\n                            }\r\n                        }\r\n                    >\r\n                        <ReactLeafletMap\r\n                            mapKey='lines-map'\r\n                            view={view}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.lineFeaturesLayers}\r\n                        />\r\n                    </HoverHandler>\r\n                </div>\r\n\r\n                <h2 id=\"mixed\">Mixed</h2>\r\n                <p>The source GeoJSON contains features of different types.</p>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => {\r\n                                return (<><b>{props.data[\"NAME_1\"]}</b></>);\r\n                            }\r\n                        }\r\n                    >\r\n                        <ReactLeafletMap\r\n                            mapKey='mixed-features-map'\r\n                            view={view}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.mixedFeaturesLayers}\r\n                            onLayerClick={this.onLayerClick}\r\n                        />\r\n                    </HoverHandler>\r\n                </div>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeafletVectorLayer;","import React from 'react';\r\nimport _ from \"lodash\";\r\nimport Page, {\r\n    InlineCodeHighlighter,\r\n    SyntaxHighlighter\r\n} from \"../../../../Page\";\r\nimport {MapControls, PresentationMap, ReactLeafletMap} from \"@gisatcz/ptr-maps\";\r\nimport cz_gadm from \"../../../../mockData/map/czGadm1WithStyles/geometries.json\";\r\nimport nuts_2 from \"../../../../mockData/map/nuts_2.json\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst europeView = {\r\n    center: {lat: 49.8, lon: 12},\r\n    boxRange: 2000000\r\n};\r\n\r\nconst czView = {\r\n    center: {lat: 49.8, lon: 15},\r\n    boxRange: 1000000\r\n};\r\n\r\nconst backgroundLayer = {\r\n    key: 'background-osm',\r\n    type: 'wmts',\r\n    options: {\r\n        url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n    }\r\n};\r\n\r\n// Polygons & diagrams\r\nconst diagramStyle = {rules: [{\r\n        styles: [{\r\n            fill: \"#aaaaaa\",\r\n            outlineWidth: 1,\r\n            outlineColor: \"#000000\",\r\n            diagramShape: \"circle\",\r\n            diagramFillOpacity: 1,\r\n            diagramFill: \"#ffffff\",\r\n            diagramOutlineWidth: 1,\r\n            diagramOutlineColor: \"#364049\"\r\n        }, {\r\n            attributeKey: \"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n            attributeScale: {\r\n                diagramSize: {\r\n                    \"inputInterval\": [0,10],\r\n                    \"outputInterval\": [10000, 30000]\r\n                }\r\n            }\r\n        }, {\r\n            attributeKey: \"attr-2\",\r\n            attributeValues: {\r\n                red: {\r\n                    diagramFill: \"#ff0000\",\r\n                },\r\n                blue: {\r\n                    diagramFill: \"#0000ff\",\r\n                },\r\n                green: {\r\n                    diagramFill: \"#00ff00\",\r\n                }\r\n            }\r\n        }]\r\n    }]};\r\n\r\nconst polygonLayers_diagrams = [{\r\n    key: \"polygons\",\r\n    type: \"diagram\",\r\n    options: {\r\n        features: cz_gadm.features,\r\n        style: diagramStyle,\r\n        fidColumnName: \"GID_1\",\r\n        selected: {\r\n            \"testSelection\": {\r\n                keys: [\"CZE.12_1\"]\r\n            }\r\n        }\r\n    }\r\n}];\r\n\r\n// Choropleth and diagrams\r\nconst diagramChoroplethStyle = {rules: [{\r\n        styles: [{\r\n            outlineWidth: 1,\r\n            outlineColor: \"#666\",\r\n            diagramShape: \"circle\",\r\n            diagramFill: \"#14a8b4\",\r\n            diagramFillOpacity: 0.7,\r\n            diagramOutlineWidth: 1,\r\n            diagramOutlineColor: \"#0d393d\"\r\n        }, {\r\n            attributeKey: \"positive_attr\",\r\n            attributeScale: {\r\n                diagramSize: {\r\n                    \"inputInterval\": [0,10],\r\n                    \"outputInterval\": [2000, 20000]\r\n                }\r\n            }\r\n        }, {\r\n            attributeKey: \"diverging_attr\",\r\n            attributeClasses: [\r\n                {\r\n                    interval: [-5,-3],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#d7191c\"\r\n                },\r\n                {\r\n                    interval: [-3,-1],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#fdae61\"\r\n                },{\r\n                    interval: [-1,1],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#ffffbf\"\r\n                },{\r\n                    interval: [1,3],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#a6d96a\"\r\n                },{\r\n                    interval: [3,5],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#1a9641\"\r\n                }\r\n            ]\r\n        }]\r\n    }]};\r\n\r\nconst polygonLayers_countries = [{\r\n    key: \"countries\",\r\n    type: \"diagram\",\r\n    options: {\r\n        features: nuts_2.features,\r\n        style: diagramChoroplethStyle,\r\n        fidColumnName: \"id\",\r\n        selected: {\r\n            \"testSelection\": {\r\n                keys: [\"PL41\"]\r\n            }\r\n        }\r\n    }\r\n}];\r\n\r\nclass LeafletDiagramLayer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            polygonLayers_diagrams,\r\n            polygonLayers_countries\r\n        }\r\n\r\n        this.onLayerClick = this.onLayerClick.bind(this);\r\n    }\r\n\r\n    onLayerClick(map, layer, features) {\r\n        if (map === 'czechia') {\r\n            let updatedLayers = _.cloneDeep(this.state.polygonLayers_diagrams);\r\n            updatedLayers[0].options.selected.testSelection.keys = features;\r\n\r\n            this.setState({\r\n                polygonLayers_diagrams: updatedLayers\r\n            })\r\n        } else if (map === 'europe') {\r\n            let updatedLayers = _.cloneDeep(this.state.polygonLayers_countries);\r\n            updatedLayers[0].options.selected.testSelection.keys = features;\r\n\r\n            this.setState({\r\n                polygonLayers_countries: updatedLayers\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Page title=\"Leaflet diagram layer\">\r\n                <p>Use diagram to visualize absolute value for area. See the examples bellow how diagrams can be drawn on the top of choropleth map.</p>\r\n\r\n                <p>DiagramLayer component extends <Link to=\"./vectorLayer\">VectorLayer</Link> component and it is always used inside ReactLeafletMap component. The data are passed via layers prop (see <Link to=\"/components/maps/map\">Map</Link> documentation), where each layer is represented by Vector layer data type. For general information about Vector layer system data type, see <Link to=\"/architecture/systemDataTypes/layers#vector\">Layers</Link> section.</p>\r\n\r\n                <p>In case of Diagram layer, following options are different from Vector layer data type definition:</p>\r\n                <SyntaxHighlighter language=\"javascript\">\r\n                    {\r\n                        `{\r\n    // ...\r\n\ttype: \"diagram\"\r\n}`\r\n                    }\r\n                </SyntaxHighlighter>\r\n                <h2>Basic diagrams</h2>\r\n                <SyntaxHighlighter language=\"jsx\">{`<PresentationMap\r\n    mapKey=\"czechia\"\r\n    mapComponent={ReactLeafletMap}\r\n    view={{\r\n        center: {lat: 50, lon: 15},\r\n        boxRange: 2000000\r\n    }}\r\n    backgroundLayer={{\r\n        key: 'background-osm',\r\n        type: 'wmts',\r\n        options: {\r\n            url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n        }\r\n    }}\r\n    layers={[{\r\n        key: \"polygons\",\r\n        type: \"diagram\",\r\n        options: {\r\n            features: cz_gadm.features,\r\n            style: {rules: [{\r\n                styles: [{\r\n                    fill: \"#cccccc\",\r\n                    outlineWidth: 1,\r\n                    outlineColor: \"#000000\",\r\n                    diagramShape: \"circle\",\r\n                    diagramFillOpacity: 0.5,\r\n                    diagramFill: \"#ffffff\",\r\n                    diagramOutlineWidth: 1,\r\n                    diagramOutlineColor: \"#256293\"\r\n                }, {\r\n                    attributeKey: \"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n                    attributeScale: {\r\n                        diagramSize: {\r\n                            \"inputInterval\": [0,10],\r\n                            \"outputInterval\": [10000, 30000]\r\n                        }\r\n                    }\r\n                }, {\r\n                    attributeKey: \"attr-2\",\r\n                    attributeValues: {\r\n                        red: {\r\n                            diagramFill: \"#ff0000\",\r\n                        },\r\n                        blue: {\r\n                            diagramFill: \"#0000ff\",\r\n                        },\r\n                        green: {\r\n                            diagramFill: \"#00ff00\",\r\n                        }\r\n                    }\r\n                }]\r\n            }]},\r\n            fidColumnName: \"GID_1\",\r\n            selected: {\r\n                \"testSelection\": {\r\n                    keys: [\"CZE.12_1\"]\r\n                }\r\n            }\r\n        }\r\n    }]}\r\n    onLayerClick={this.onLayerClick}\r\n>\r\n    <MapControls zoomOnly levelsBased/>\r\n</PresentationMap>`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => {\r\n                                return (<><b>{props.data[\"GID_1\"]}</b>: {props.data[\"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\"] ? props.data[\"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\"].toFixed(2): null}</>);\r\n                            }\r\n                        }\r\n                    >\r\n                        <PresentationMap\r\n                            mapComponent={ReactLeafletMap}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.polygonLayers_diagrams}\r\n                            view={czView}\r\n                            mapKey=\"czechia\"\r\n                            onLayerClick={this.onLayerClick}\r\n                        >\r\n                            <MapControls zoomOnly levelsBased/>\r\n                        </PresentationMap>\r\n                    </HoverHandler>\r\n                </div>\r\n\r\n\r\n                <h2>Basic diagrams with choropleth</h2>\r\n                <SyntaxHighlighter language=\"jsx\">{`<PresentationMap\r\n    //...\r\n    layers={[{\r\n        key: \"countries\",\r\n        type: \"diagram\",\r\n        options: {\r\n            features: nuts_2.features,\r\n            fidColumnName: \"id\",\r\n            selected: {\r\n                \"testSelection\": {\r\n                    keys: [\"PL41\"]\r\n                }\r\n            },\r\n            style: {rules: [{\r\n                styles: [{\r\n                    outlineWidth: 1,\r\n                    outlineColor: \"#666\",\r\n                    diagramShape: \"circle\",\r\n                    diagramFill: \"#14a8b4\",\r\n                    diagramFillOpacity: 0.7,\r\n                    diagramOutlineWidth: 1,\r\n                    diagramOutlineColor: \"#0d393d\"\r\n                }, {\r\n                    attributeKey: \"positive_attr\",\r\n                    attributeScale: {\r\n                        diagramSize: {\r\n                            \"inputInterval\": [0,10],\r\n                            \"outputInterval\": [2000, 20000]\r\n                        }\r\n                    }\r\n                }, {\r\n                    attributeKey: \"diverging_attr\",\r\n                    attributeClasses: [\r\n                        {\r\n                            interval: [-5,-3],\r\n                            intervalBounds: [true, false],\r\n                            fill: \"#d7191c\"\r\n                        },\r\n                        {\r\n                            interval: [-3,-1],\r\n                            intervalBounds: [true, false],\r\n                            fill: \"#fdae61\"\r\n                        },{\r\n                            interval: [-1,1],\r\n                            intervalBounds: [true, false],\r\n                            fill: \"#ffffbf\"\r\n                        },{\r\n                            interval: [1,3],\r\n                            intervalBounds: [true, false],\r\n                            fill: \"#a6d96a\"\r\n                        },{\r\n                            interval: [3,5],\r\n                            intervalBounds: [true, false],\r\n                            fill: \"#1a9641\"\r\n                        }\r\n                    ]\r\n                }]\r\n            }]} \r\n        }\r\n    }]}\r\n>\r\n    <MapControls zoomOnly levelsBased/>\r\n</PresentationMap>`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => {\r\n                                return (<><b>{props.data[\"id\"]}</b>:<br/>\r\n                                    Diagram: {props.data[\"positive_attr\"].toFixed(2)}<br/>\r\n                                    Choropleth: {props.data[\"diverging_attr\"].toFixed(2)}<br/>\r\n                                </>);\r\n                            }\r\n                        }\r\n                    >\r\n                        <PresentationMap\r\n                            mapComponent={ReactLeafletMap}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.polygonLayers_countries}\r\n                            view={europeView}\r\n                            mapKey={\"europe\"}\r\n                            onLayerClick={this.onLayerClick}\r\n                        >\r\n                            <MapControls zoomOnly levelsBased/>\r\n                        </PresentationMap>\r\n                    </HoverHandler>\r\n                </div>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeafletDiagramLayer;","import React from 'react';\r\nimport _ from \"lodash\";\r\nimport Page, {\r\n    DocsToDo,\r\n    DocsToDoInline,\r\n    ImplementationToDo,\r\n    InlineCodeHighlighter,\r\n    LightDarkBlock,\r\n    SyntaxHighlighter\r\n} from \"../../../../Page\";\r\nimport {WorldWindMap} from \"@gisatcz/ptr-maps\";\r\nimport cz_gadm from \"../../../../mockData/map/czGadm1WithStyles/geometries.json\";\r\nimport style from \"../../../../mockData/map/czGadm1WithStyles/style.json\";\r\nimport pointData from \"../../../../mockData/map/largePointData/geometries.json\";\r\nimport largePointDataFeatures from \"../../../../mockData/map/largePointData/sample_points_5000_mini.json\";\r\nimport pointStyle from \"../../../../mockData/map/largePointData/style-simple-point.json\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport nuts_2 from \"../../../../mockData/map/nuts_2.json\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst view = {\r\n    center: {lat: 50, lon: 15},\r\n    boxRange: 1000000\r\n};\r\n\r\nconst viewEurope = {\r\n    center: {lat: 50, lon: 15},\r\n    boxRange: 3000000\r\n};\r\n\r\nconst backgroundLayer = {\r\n    key: 'background-osm',\r\n    type: 'wmts',\r\n    options: {\r\n        url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n    }\r\n};\r\n\r\n/* Polygons */\r\n// Without style\r\nconst polygonsWithoutStyle = {\r\n    key: \"gadm-1-cz\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: cz_gadm.features\r\n    }\r\n};\r\n\r\n// With style\r\nconst polygonsStyle = {\r\n    \"rules\":[\r\n        {\r\n            \"styles\":[\r\n                {\r\n                    \"fillOpacity\": 0.8,\r\n                    \"outlineColor\": \"#262626\",\r\n                    \"fill\": \"#d2d2d2\"\r\n                },\r\n                {\r\n                    \"attributeKey\":\"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n                    \"attributeClasses\":[\r\n                        {\r\n                            \"interval\": [0,5],\r\n                            \"intervalBounds\": [true, false],\r\n                            \"fill\": \"#e41a1c\"\r\n                        },{\r\n                            \"interval\": [5,10],\r\n                            \"intervalBounds\": [true, false],\r\n                            \"fill\": \"#377eb8\"\r\n                        },{\r\n                            \"interval\": [10,20],\r\n                            \"intervalBounds\": [true, false],\r\n                            \"fill\": \"#984ea3\"\r\n                        }\r\n                    ]\r\n                }, {\r\n                    \"attributeKey\": \"22a43eb3-6552-476f-97a5-b47490519642\",\r\n                    \"attributeScale\": {\r\n                        \"outlineWidth\": {\r\n                            \"inputInterval\": [-10,10],\r\n                            \"outputInterval\": [0,7]\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nconst polygonsWithStyle = {\r\n    key: \"gadm-1-cz\",\r\n    type: \"vector\",\r\n    options: {\r\n        style: polygonsStyle,\r\n        features: cz_gadm.features,\r\n        fidColumnName: \"GID_1\",\r\n        selected: {\r\n            \"testSelection\": {\r\n                keys: [\"CZE.12_1\"]\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// Hundreds of polygons\r\nconst choroplethStyle = {rules: [{\r\n        styles: [{\r\n            outlineWidth: 1,\r\n            outlineColor: \"#666666\"\r\n        },{\r\n            attributeKey: \"diverging_attr\",\r\n            attributeClasses: [\r\n                {\r\n                    interval: [-5,-3],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#d7191c\"\r\n                },\r\n                {\r\n                    interval: [-3,-1],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#fdae61\"\r\n                },{\r\n                    interval: [-1,1],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#ffffbf\"\r\n                },{\r\n                    interval: [1,3],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#a6d96a\"\r\n                },{\r\n                    interval: [3,5],\r\n                    intervalBounds: [true, false],\r\n                    fill: \"#1a9641\"\r\n                }\r\n            ]\r\n        }]\r\n    }]};\r\n\r\nconst choropleth = {\r\n    key: \"choropleth\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: nuts_2.features,\r\n        style: choroplethStyle,\r\n        selected: {\r\n            \"testSelection\": {\r\n                keys: []\r\n            }\r\n        },\r\n        fidColumnName: \"id\"\r\n    }\r\n};\r\n\r\n/* Points */\r\n// TODO\r\n\r\n/* Lines */\r\n// TODO\r\n\r\nconst polygonsWithoutStyleLayers = [polygonsWithoutStyle];\r\nconst polygonsWithStyleLayers = [polygonsWithStyle];\r\nconst hundredsOfPolygonsLayers = [choropleth];\r\n\r\nclass WorldWindVectorLayer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            polygonsWithStyleLayers,\r\n            hundredsOfPolygonsLayers\r\n        }\r\n\r\n        this.onLayerClick = this.onLayerClick.bind(this);\r\n    }\r\n\r\n    onLayerClick(map, layer, features) {\r\n        if (map === \"polygons-with-style-map\") {\r\n            let updatedLayers = [{\r\n                ...polygonsWithStyle,\r\n                options: {\r\n                    ...polygonsWithStyle.options,\r\n                    selected: {\r\n                        ...polygonsWithStyle.options.selected,\r\n                        testSelection: {\r\n                            ...polygonsWithStyle.options.selected.testSelection,\r\n                            keys: features\r\n                        }\r\n                    }\r\n                }\r\n            }];\r\n\r\n            this.setState({\r\n                polygonsWithStyleLayers: updatedLayers\r\n            })\r\n        } else if (map === \"choropleth\") {\r\n            let updatedLayers2 = [{\r\n                ...choropleth,\r\n                options: {\r\n                    ...choropleth.options,\r\n                    selected: {\r\n                        ...choropleth.options.selected,\r\n                        testSelection: {\r\n                            ...choropleth.options.selected.testSelection,\r\n                            keys: features\r\n                        }\r\n                    }\r\n                }\r\n            }];\r\n\r\n            this.setState({\r\n                hundredsOfPolygonsLayers: updatedLayers2\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Page title=\"World Wind Vector layer\">\r\n                <p>Use this type of layer to display analytical units, for interactive layers or choropleths (see examples below).</p>\r\n\r\n                <p>The data are passed via layers prop (see <Link to=\"/components/maps/map\">Map</Link> documentation), where each layer is represented by Vector layer data type. For general information about Vector layer system data type, see <Link to=\"/architecture/systemDataTypes/layers#vector\">Layers</Link> section.</p>\r\n\r\n\r\n                <h2 id=\"polygons\">Polygons</h2>\r\n\r\n                <h3>Basic usage</h3>\r\n                <p>If style is not defined, fallback style is used.</p>\r\n                <SyntaxHighlighter language=\"jsx\">{`<WorldWindMap\r\n    mapKey='basic-usage'\r\n    view={{\r\n        center: {lat: 50, lon: 15},\r\n        boxRange: 1000000\r\n    }}\r\n    backgroundLayer={{\r\n        key: 'background-osm',\r\n        type: 'wmts',\r\n        options: {\r\n            url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n        }\r\n    }}\r\n    layers={[{\r\n        key: \"gadm-1-cz\",\r\n        type: \"vector\",\r\n        options: {\r\n            features: [] //list of features\r\n        }\r\n    }]}\r\n/>`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 400, marginBottom: 10}}>\r\n                    <WorldWindMap\r\n                        view={view}\r\n                        backgroundLayer={backgroundLayer}\r\n                        layers={polygonsWithoutStyleLayers}\r\n                    />\r\n                </div>\r\n\r\n                <h3>With defined style & interactive</h3>\r\n                <SyntaxHighlighter language=\"jsx\">{`<WorldWindMap\r\n    mapKey='basic-usage'\r\n    view={{\r\n        center: {lat: 50, lon: 15},\r\n        boxRange: 1000000\r\n    }}\r\n    backgroundLayer={{\r\n        key: 'background-osm',\r\n        type: 'wmts',\r\n        options: {\r\n            url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n        }\r\n    }}\r\n    layers={[{\r\n        key: \"gadm-1-cz\",\r\n        type: \"vector\",\r\n        options: {\r\n            style: {\r\n                \"rules\":[\r\n                    {\r\n                        \"styles\":[\r\n                            {\r\n                                \"fillOpacity\": 0.8,\r\n                                \"outlineColor\": \"#262626\",\r\n                                \"fill\": \"#d2d2d2\"\r\n                            },\r\n                            {\r\n                                \"attributeKey\":\"e575b4d4-7c7a-4658-bb9a-a9b61fcc2587\",\r\n                                \"attributeClasses\":[\r\n                                    {\r\n                                        \"interval\": [0,5],\r\n                                        \"intervalBounds\": [true, false],\r\n                                        \"fill\": \"#e41a1c\"\r\n                                    },{\r\n                                        \"interval\": [5,10],\r\n                                        \"intervalBounds\": [true, false],\r\n                                        \"fill\": \"#377eb8\"\r\n                                    },{\r\n                                        \"interval\": [10,20],\r\n                                        \"intervalBounds\": [true, false],\r\n                                        \"fill\": \"#984ea3\"\r\n                                    }\r\n                                ]\r\n                            }, {\r\n                                \"attributeKey\": \"22a43eb3-6552-476f-97a5-b47490519642\",\r\n                                \"attributeScale\": {\r\n                                    \"outlineWidth\": {\r\n                                        \"inputInterval\": [-10,10],\r\n                                        \"outputInterval\": [0,7]\r\n                                    }\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            features: cz_gadm.features,\r\n            fidColumnName: \"GID_1\",\r\n            selected: {\r\n                \"testSelection\": {\r\n                    keys: [\"CZE.12_1\"]\r\n                }\r\n            }\r\n        }\r\n    }]}\r\n/>`}\r\n                </SyntaxHighlighter>\r\n                <p>Move cursor over area to see the popup. Click on the area to select it.</p>\r\n                <HoverHandler>\r\n                    <div style={{height: 400, marginBottom: 10}}>\r\n                        <WorldWindMap\r\n                            mapKey=\"polygons-with-style-map\"\r\n                            view={view}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.polygonsWithStyleLayers}\r\n                            onLayerClick={this.onLayerClick}\r\n                        />\r\n                    </div>\r\n                </HoverHandler>\r\n\r\n                <h3>Hundreds of polygons</h3>\r\n                <HoverHandler>\r\n                    <div style={{height: 500, marginBottom: 10}}>\r\n                        <WorldWindMap\r\n                            mapKey=\"choropleth\"\r\n                            view={viewEurope}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.hundredsOfPolygonsLayers}\r\n                            onLayerClick={this.onLayerClick}\r\n                        />\r\n                    </div>\r\n                </HoverHandler>\r\n\r\n                <h2 id=\"points\">Points</h2>\r\n                <h3>Markers - size in px</h3>\r\n                <SyntaxHighlighter language=\"jsx\">{`<WorldWindMap\r\n    //...\r\n    layers={[{\r\n        key: \"large-data\",\r\n        type: \"vector\",\r\n        options: {\r\n            //...\r\n            pointAsMarker: true\r\n        }\r\n    }]}\r\n/>`}\r\n                </SyntaxHighlighter>\r\n                See example in <Link to=\"/architecture/storeDataTypes/common/style#large-data-layer\">Styles section</Link>.\r\n\r\n                <h3>Size in meters</h3>\r\n                <ImplementationToDo>Not implemented currently.</ImplementationToDo>\r\n\r\n                <h2 id=\"lines\">Lines</h2>\r\n                <ImplementationToDo>Lines are not implemented currently.</ImplementationToDo>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorldWindVectorLayer;","import React from 'react';\r\nimport _ from \"lodash\";\r\nimport Page, {\r\n    DocsToDo,\r\n    DocsToDoInline,\r\n    ImplementationToDo,\r\n    InlineCodeHighlighter,\r\n    LightDarkBlock,\r\n    SyntaxHighlighter\r\n} from \"../../../../Page\";\r\n\r\nimport {ReactLeafletMap, PresentationMap, MapControls} from \"@gisatcz/ptr-maps\";\r\nimport {HoverHandler} from \"@gisatcz/ptr-core\";\r\nimport {Button, Buttons, ButtonSwitchOption, ButtonGroup} from \"@gisatcz/ptr-atoms\";\r\nimport {Link} from \"react-router-dom\";\r\nimport utils from \"../../../../../utils\";\r\nimport config from \"../../../../../config\";\r\n\r\nconst default_points_boxRangeRange = [null, 50000];\r\nconst default_polygons_boxRangeRange = [500000, 3000000];\r\n\r\n// *** VIEWS ***\r\nconst view = {\r\n    center: {lat: 50.05, lon: 15.15},\r\n    boxRange: 30000\r\n};\r\n\r\nconst viewEurope = {\r\n    center: {lat: 50.05, lon: 15.15},\r\n    boxRange: 1000000\r\n};\r\n\r\nconst backgroundLayer = {\r\n    key: 'background-osm',\r\n    type: 'wmts',\r\n    options: {\r\n        url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n    }\r\n};\r\n\r\n// *** POINTS ***\r\nconst cz_large_data_style = {\r\n    \"rules\":[\r\n        {\r\n            \"styles\": [\r\n                {\r\n                    \"fillOpacity\": 0.85,\r\n                    \"outlineWidth\": 1,\r\n                    \"outlineColor\": \"#333333\",\r\n                    \"size\": 10\r\n                },\r\n                {\r\n                    \"attributeKey\": \"a1\",\r\n                    \"attributeClasses\": [\r\n                        {\r\n                            \"interval\": [0,25],\r\n                            \"fill\": \"#edf8fb\"\r\n                        },\r\n                        {\r\n                            \"interval\": [25,50],\r\n                            \"fill\": \"#b3cde3\"\r\n                        },{\r\n                            \"interval\": [50,75],\r\n                            \"fill\": \"#6d99d0\"\r\n                        },{\r\n                            \"interval\": [75,101],\r\n                            \"fill\": \"#264d7b\"\r\n                        }\r\n                    ]\r\n                }, {\r\n                    \"attributeKey\": \"a2\",\r\n                    \"attributeClasses\": [\r\n                        {\r\n                            \"interval\": [-10, -3],\r\n                            \"shape\": \"square\",\r\n                        },\r\n                        {\r\n                            \"interval\": [-3,3],\r\n                            \"shape\": \"circle\"\r\n                        },{\r\n                            \"interval\": [3,10],\r\n                            \"shape\": \"diamond\"\r\n                        }\r\n                    ]\r\n                }, {\r\n                    \"attributeKey\": \"a3\",\r\n                    \"attributeScale\": {\r\n                        \"size\": {\r\n                            \"inputInterval\": [10,10000],\r\n                            \"outputInterval\": [5,15]\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\n\r\nconst cz_large_data_layer = {\r\n    key: \"cz_large_data_layer\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: [],\r\n        selected: {\r\n          testSelection: {}\r\n        },\r\n        style: cz_large_data_style,\r\n        pointAsMarker: true,\r\n        fidColumnName: \"gid\",\r\n        boxRangeRange: default_points_boxRangeRange\r\n    }\r\n};\r\n\r\nconst cz_large_data_layers = [cz_large_data_layer];\r\n\r\n// *** POLYGONS ***\r\nconst polygons_style = {\r\n    \"rules\":[\r\n        {\r\n            \"styles\": [\r\n                {\r\n                    \"fillOpacity\": 0.85,\r\n                    \"outlineWidth\": 1,\r\n                    \"outlineColor\": \"#333333\"\r\n                },\r\n                {\r\n                    \"attributeKey\": \"attr_3\",\r\n                    \"attributeClasses\": [\r\n                        {\r\n                            \"interval\": [0,25],\r\n                            \"fill\": \"#edf8fb\"\r\n                        },\r\n                        {\r\n                            \"interval\": [25,50],\r\n                            \"fill\": \"#b3cde3\"\r\n                        },{\r\n                            \"interval\": [50,75],\r\n                            \"fill\": \"#6d99d0\"\r\n                        },{\r\n                            \"interval\": [75,101],\r\n                            \"fill\": \"#264d7b\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nconst polygon_layer = {\r\n    key: \"polygon_layer\",\r\n    type: \"vector\",\r\n    options: {\r\n        features: [],\r\n        style: polygons_style,\r\n        fidColumnName: \"id\",\r\n        boxRangeRange: default_polygons_boxRangeRange\r\n    }\r\n};\r\n\r\nconst polygon_layers = [polygon_layer];\r\n\r\nclass LeafletIndexedVectorLayer extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cz_large_data_layers,\r\n            polygon_layers,\r\n            maxBoxRange: default_points_boxRangeRange[1],\r\n            currentPointsBoxRange: view.boxRange,\r\n            currentPolygonsBoxRange: viewEurope.boxRange\r\n        };\r\n\r\n        this.onLayerClick = this.onLayerClick.bind(this);\r\n        this.removeAllPoints = this.removeAllPoints.bind(this);\r\n        this.onViewChange = this.onViewChange.bind(this);\r\n    }\r\n\r\n    onViewChange(mapKey, view) {\r\n        if (mapKey === 'large-data') {\r\n            this.setState({\r\n                currentPointsBoxRange: view.boxRange\r\n            });\r\n        } else if (mapKey === 'large-data-polygons') {\r\n            this.setState({\r\n                currentPolygonsBoxRange: view.boxRange\r\n            });\r\n        }\r\n    }\r\n\r\n    onLayerClick(map, layer, features) {\r\n        if (layer === 'cz_large_data_layer') {\r\n            let updatedLayers = [{\r\n                ...this.state.cz_large_data_layers[0],\r\n                options: {\r\n                    ...this.state.cz_large_data_layers[0].options,\r\n                    selected: {\r\n                        ...this.state.cz_large_data_layers[0].options.selected,\r\n                        testSelection: {\r\n                            ...this.state.cz_large_data_layers[0].options.selected.testSelection,\r\n                            keys: features\r\n                        }\r\n                    }\r\n                }\r\n            }];\r\n\r\n            this.setState({\r\n                cz_large_data_layers: updatedLayers\r\n            })\r\n        }\r\n    }\r\n\r\n    addData(limit) {\r\n        let promises = [];\r\n        for (let i=1; i<=limit; i++) {\r\n            let url = `${config.mockDataRepositoryUrl}pvlach/largeData/cz_200000/${i}.json`;\r\n            promises.push(utils.request(url, \"GET\"));\r\n        }\r\n\r\n        if (promises.length) {\r\n            this.setState({loading: [\"Loading started...\"]});\r\n            Promise.all(promises).then(data => {\r\n               if (data.length) {\r\n                   this.setState({loading: [...this.state.loading, \"Data loaded\"]});\r\n                   const features = _.flatten(data.map(item => item.features));\r\n                   this.populateLayer('cz_large_data_layer', features);\r\n               }\r\n            }).catch(err => new Error(err));\r\n        }\r\n    }\r\n\r\n    addPolygonData() {\r\n        let url = `${config.mockDataRepositoryUrl}pvlach/largeData/nutsrg_3.json`;\r\n        utils.request(url, \"GET\").then(data => {\r\n           if (data) {\r\n               this.populateLayer('polygon_layer', data.features);\r\n           }\r\n        }).catch(err => new Error(err));\r\n    }\r\n\r\n    removeAllPoints() {\r\n        this.populateLayer('cz_large_data_layer', []);\r\n    }\r\n\r\n    removePolygonData() {\r\n        this.populateLayer('polygon_layer', []);\r\n    }\r\n\r\n    populateLayer(layer, features) {\r\n        if (layer === 'cz_large_data_layer') {\r\n            let updatedLayers = [{\r\n                ...this.state.cz_large_data_layers[0],\r\n                options: {\r\n                    ...this.state.cz_large_data_layers[0].options,\r\n                    features\r\n                }\r\n            }];\r\n\r\n            this.setState({\r\n                cz_large_data_layers: updatedLayers,\r\n                loading: features.length ? [...this.state.loading, \"Add data to map\"] : [\"Remove data from map\"]\r\n            });\r\n        } else if (layer === 'polygon_layer') {\r\n            let updatedLayers = [{\r\n                ...this.state.polygon_layers[0],\r\n                options: {\r\n                    ...this.state.polygon_layers[0].options,\r\n                    features\r\n                }\r\n            }];\r\n\r\n            this.setState({\r\n                polygon_layers: updatedLayers,\r\n            });\r\n        }\r\n    }\r\n\r\n    onMaxRangeChange(maxBoxRange) {\r\n        let updatedLayers = [{\r\n            ...this.state.cz_large_data_layers[0],\r\n            options: {\r\n                ...this.state.cz_large_data_layers[0].options,\r\n                boxRangeRange: [null, maxBoxRange]\r\n            }\r\n        }];\r\n\r\n        this.setState({\r\n            maxBoxRange,\r\n            cz_large_data_layers: updatedLayers\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Page title=\"Indexed Vector layer\">\r\n                <p>Indexed Vector layer wraps both <Link to=\"vectorLayer\">Vector layer</Link> and <Link to=\"diagramLayer\">Diagram layer</Link>. All features are indexed using <a target=\"_blank\" href=\"https://www.npmjs.com/package/geojson-rbush\">B-tree</a>. Only features in visible area (bounding box) are rendered. Consider using <Link to=\"/architecture/systemDataTypes/layers#vector\"><InlineCodeHighlighter>boxRangeRange</InlineCodeHighlighter></Link> property to limit range where layer is rendered - useful for layers with big amount of features.</p>\r\n\r\n                <h2>Playground</h2>\r\n                <h3>Point</h3>\r\n                <div>First, load desired amount of point features (and then optionally remove them again):</div>\r\n                <Buttons>\r\n                    <Button onClick={this.addData.bind(this,1)}>Add 20 000 points</Button>\r\n                    <Button onClick={this.addData.bind(this,10)}>Add 200 000 points</Button>\r\n                    <Button onClick={this.removeAllPoints}>Remove all point data</Button>\r\n                </Buttons>\r\n\r\n                <div className=\"ptr-docs-process-info-box\">\r\n                {this.state.loading && this.state.loading.map((step, i) => <div key={i}>{step}</div>)}\r\n                </div>\r\n\r\n                <div>Next, you can optionaly switch the maximum range to draw the features: </div>\r\n                <ButtonGroup>\r\n                    <ButtonSwitchOption primary={this.state.maxBoxRange === 20000} onClick={this.onMaxRangeChange.bind(this, 20000)}>20 km</ButtonSwitchOption>\r\n                    <ButtonSwitchOption primary={this.state.maxBoxRange === 50000} onClick={this.onMaxRangeChange.bind(this, 50000)}>50 km</ButtonSwitchOption>\r\n                    <ButtonSwitchOption primary={this.state.maxBoxRange === 100000} onClick={this.onMaxRangeChange.bind(this, 100000)}>100 km</ButtonSwitchOption>\r\n                </ButtonGroup>\r\n\r\n                <div style={{marginTop: '1rem'}}>Zoom in/out to see current range change: <b>{Math.round(this.state.currentPointsBoxRange/1000)}</b> km</div>\r\n\r\n                <div style={{height: 500, marginBottom: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => <>\r\n                                Value for color: <b>{props.data[\"a1\"]}</b><br/>\r\n                                Value for size: <b>{props.data[\"a3\"]}</b><br/>\r\n                                Value for shape: <b>{props.data[\"a2\"]}</b>\r\n                            </>\r\n                        }\r\n                    >\r\n                        <PresentationMap\r\n                            mapComponent={ReactLeafletMap}\r\n                            mapKey='large-data'\r\n                            view={view}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.cz_large_data_layers}\r\n                            onLayerClick={this.onLayerClick}\r\n                            onViewChange={this.onViewChange.bind(this, 'large-data')}\r\n                        >\r\n                            <MapControls levelsBased zoomOnly/>\r\n                        </PresentationMap>\r\n                    </HoverHandler>\r\n                </div>\r\n\r\n                <h3>Polygons</h3>\r\n                <div>First, load point features (and then optionally remove them again):</div>\r\n                <Buttons>\r\n                    <Button onClick={this.addPolygonData.bind(this)}>Add 1500 polygons</Button>\r\n                    <Button onClick={this.removePolygonData.bind(this)}>Remove polygon data</Button>\r\n                </Buttons>\r\n                <div style={{marginTop: '1rem'}}>Min box range to draw features: {default_polygons_boxRangeRange[0]/1000} km</div>\r\n                <div>Max box range to draw features: {default_polygons_boxRangeRange[1]/1000} km</div>\r\n                <div>Zoom in/out to see current range change: <b>{Math.round(this.state.currentPolygonsBoxRange/1000)}</b> km</div>\r\n                <div style={{height: 500, marginBottom: 10, marginTop: 10}}>\r\n                    <HoverHandler\r\n                        popupContentComponent={\r\n                            (props) => <>\r\n                                Name: <b>{props.data[\"na\"]}</b>\r\n                            </>\r\n                        }\r\n                    >\r\n                        <PresentationMap\r\n                            mapComponent={ReactLeafletMap}\r\n                            mapKey='large-data-polygons'\r\n                            view={viewEurope}\r\n                            backgroundLayer={backgroundLayer}\r\n                            layers={this.state.polygon_layers}\r\n                            onViewChange={this.onViewChange.bind(this, 'large-data-polygons')}\r\n                        >\r\n                            <MapControls levelsBased zoomOnly/>\r\n                        </PresentationMap>\r\n                    </HoverHandler>\r\n                </div>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeafletIndexedVectorLayer;","import React from 'react';\r\nimport Page, {SyntaxHighlighter} from \"../../../Page\";\r\nimport {ReactLeafletMap, WorldWindMap} from \"@gisatcz/ptr-maps\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst view = {\r\n    center: {lat: 50, lon: 15},\r\n    boxRange: 10000000\r\n};\r\n\r\nconst backgroundLayer = {\r\n    key: 'background-osm',\r\n    type: 'wmts',\r\n    options: {\r\n        url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n    }\r\n};\r\n\r\nclass MapPresentational extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        // TODO intended to use directly or used by Map component\r\n\r\n        return (\r\n            <Page title=\"Presentational map\">\r\n                <p>Presentational map components don't take care of data loading. They are not connected to the store and only display data.</p>\r\n                <p>The API should be the same for all presentational map components in it's core, although some props may be specific for particular framework.</p>\r\n\r\n                <p>Presentational map components could be used directly to display map data (see examples below) or as mapComponent prop of the <Link to=\"./Map\">Map component</Link>.</p>\r\n\r\n                <h2>WorldWindMap</h2>\r\n                Go to <Link to=\"./presentational/webWorldWind\">WorldWindMap</Link> section for details.\r\n                <SyntaxHighlighter language=\"jsx\">{`<WorldWindMap\r\n    mapKey=\"world-wind-map\"\r\n    view={{\r\n        center: {lat: 50, lon: 15},\r\n        boxRange: 10000000\r\n    }}\r\n    backgroundLayer={{\r\n        key: 'background-osm',\r\n        type: 'wmts',\r\n        options: {\r\n            url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n        }\r\n    }}\r\n/>\r\n`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 300, marginBottom: 10}}>\r\n                    <WorldWindMap\r\n                        mapKey=\"world-wind-map\"\r\n                        view={view}\r\n                        backgroundLayer={backgroundLayer}\r\n                    />\r\n                </div>\r\n\r\n                <h2>ReactLeafletMap</h2>\r\n                Go to <Link to=\"./presentational/reactLeaflet\">ReactLeafletMap</Link> section for details.\r\n                <SyntaxHighlighter language=\"jsx\">{`<ReactLeafletMap\r\n    mapKey=\"leaflet-map\"\r\n    view={{\r\n        center: {lat: 50, lon: 15},\r\n        boxRange: 10000000\r\n    }}\r\n    backgroundLayer={{\r\n        key: 'background-osm',\r\n        type: 'wmts',\r\n        options: {\r\n            url: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n        }\r\n    }}\r\n/>\r\n`}\r\n                </SyntaxHighlighter>\r\n                <div style={{height: 300, marginBottom: 10}}>\r\n                    <ReactLeafletMap\r\n                        mapKey=\"leaflet-map\"\r\n                        view={view}\r\n                        backgroundLayer={backgroundLayer}\r\n                    />\r\n                </div>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapPresentational;","import React from 'react';\r\nimport Page, {DocsToDo} from \"../../../../Page\";\r\nimport {PresentationMap, MapControls, WorldWindMap, ReactLeafletMap} from \"@gisatcz/ptr-maps\";\r\nimport ComponentPropsTable, {Prop} from \"../../../../ComponentPropsTable/ComponentPropsTable\";\r\n\r\nconst view = {\r\n    center: {lat: 50, lon: 14},\r\n    boxRange: 64000\r\n};\r\n\r\nconst osm = {\r\n    key: 'background-osm',\r\n    type: 'wmts',\r\n    options: {\r\n        url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n    }\r\n};\r\n\r\nclass MapControlsDocs extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <Page title=\"Map controls\">\r\n                <div className=\"ptr-light\" style={{height: 300, width: 500, marginBottom: 10}}>\r\n                    <PresentationMap\r\n                        mapComponent={WorldWindMap}\r\n                        backgroundLayer={osm}\r\n                        view={view}\r\n                    >\r\n                        <MapControls/>\r\n                    </PresentationMap>\r\n                </div>\r\n                <p>Click on, touch or hold particular button to control map zoom, rotation or tilt.</p>\r\n                <h2>Props</h2>\r\n                <ComponentPropsTable>\r\n                    <Prop name=\"levelsBased\" defaultValue=\"false\" type=\"boolean\">Zoom in/out is not smooth but by levels.</Prop>\r\n                    <Prop name=\"zoomOnly\" defaultValue=\"false\" type=\"boolean\">Display controls for zooming only.</Prop>\r\n                </ComponentPropsTable>\r\n\r\n                <h2>Examples</h2>\r\n                <p><b>First map</b> - full controls, try to click or hold buttons to see the map response. <b>Second map</b> - Lightweight controls for zoom control only. <b>Third map</b> - zooming by levels.</p>\r\n\r\n                <div style={{display: 'flex', flexWrap: 'wrap'}}>\r\n                    <div className=\"ptr-light\" style={{height: 300, width: 300, margin: 5}}>\r\n                        <PresentationMap\r\n                            mapComponent={WorldWindMap}\r\n                            backgroundLayer={osm}\r\n                            view={view}\r\n                        >\r\n                            <MapControls/>\r\n                        </PresentationMap>\r\n                    </div>\r\n                    <div className=\"ptr-light\" style={{height: 300, width: 300, margin: 5}}>\r\n                        <PresentationMap\r\n                            mapComponent={WorldWindMap}\r\n                            backgroundLayer={osm}\r\n                            view={view}\r\n                        >\r\n                            <MapControls zoomOnly/>\r\n                        </PresentationMap>\r\n                    </div>\r\n                    <div className=\"ptr-light\" style={{height: 300, width: 300, margin: 5}}>\r\n                        <PresentationMap\r\n                            mapComponent={ReactLeafletMap}\r\n                            backgroundLayer={osm}\r\n                            view={view}\r\n                            levelsBased={true}\r\n                        >\r\n                            <MapControls zoomOnly levelsBased/>\r\n                        </PresentationMap>\r\n                    </div>\r\n                </div>\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MapControlsDocs;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from '@gisatcz/ptr-state';\r\nimport { connectRouter, routerMiddleware, ConnectedRouter } from 'connected-react-router';\r\nimport Helmet from \"react-helmet\";\r\nimport createStore,{history} from './state/Store';\r\nimport {Action} from '@gisatcz/ptr-state';\r\n\r\n\r\nimport config from \"./config\";\r\n\r\nimport '@gisatcz/ptr-core/lib/styles/reset.css';\r\nimport '@gisatcz/ptr-core/lib/styles/base.scss';\r\nimport './styles/index.scss';\r\n\r\n\r\nimport Docs, {Directory, Page, Anchor} from \"./components/Docs\";\r\n\r\nimport Index from \"./components/pages/index\";\r\nimport Design from \"./components/pages/design\";\r\nimport Typography from \"./components/pages/design/Typography\";\r\nimport Buttons from \"./components/pages/components/atoms/ButtonsDoc\";\r\nimport CartesianCharts from \"./components/pages/components/visualizations/cartesianCharts/CartesianCharts\";\r\nimport ColumnChartDoc from \"./components/pages/components/visualizations/cartesianCharts/ColumnChartDoc\";\r\nimport LineChartDoc from \"./components/pages/components/visualizations/cartesianCharts/LineChartDoc\";\r\nimport ScatterChartDoc from \"./components/pages/components/visualizations/cartesianCharts/ScatterChartDoc\";\r\nimport AsterChartDoc from \"./components/pages/components/visualizations/AsterChartDoc\";\r\nimport SankesChartDoc from \"./components/pages/components/visualizations/SankeyChartDoc\";\r\nimport FormsDoc from \"./components/pages/components/atoms/FormsDoc\";\r\nimport ItemSelectDoc from \"./components/pages/components/atoms/ItemSelectDoc\";\r\nimport MapDoc from \"./components/pages/components/maps/MapDoc\";\r\nimport MapSetDoc from \"./components/pages/components/maps/MapSetDoc\";\r\nimport HoverHandlerDoc from \"./components/pages/components/commonFeatures/HoverHandlerDoc\";\r\nimport LayersDoc from \"./components/pages/architecture/systemDataTypes/LayersDoc\";\r\nimport MapViewDoc from \"./components/pages/architecture/systemDataTypes/MapViewDoc\";\r\nimport StyleDoc from \"./components/pages/architecture/commonDataTypes/StyleDoc\";\r\nimport ReactLeafletMapDoc from \"./components/pages/components/maps/ReactLeafletMapDoc\";\r\nimport WorldWindMapDoc from \"./components/pages/components/maps/WorldWindMapDoc\";\r\nimport LeafletVectorLayer from \"./components/pages/components/maps/ReactLeafletMapDoc/LeafletVectorLayer\";\r\nimport LeafletDiagramLayer from \"./components/pages/components/maps/ReactLeafletMapDoc/LeafletDiagramLayer\";\r\nimport WorldWindVectorLayer from \"./components/pages/components/maps/WorldWindMapDoc/WorldWindVectorLayer\";\r\nimport LeafletIndexedVectorLayer from \"./components/pages/components/maps/ReactLeafletMapDoc/LeafletIndexedVectorLayer\";\r\nimport MapPresentational from \"./components/pages/components/maps/MapPresentational\";\r\nimport MapControls from \"./components/pages/components/maps/MapControls\";\r\n\r\nconst {store} = createStore();\r\n\r\nstore.dispatch(Action.app.updateLocalConfiguration(config));\r\nstore.dispatch(Action.app.setKey('docs'));\r\n// Store.dispatch(Action.app.setBaseUrl(baseUrl)); //TODO get base URL\r\n\r\n\r\n// Load Current User\r\nstore.dispatch(Action.users.apiLoadCurrentUser());\r\n\r\n// Set local configuration\r\nstore.dispatch(Action.app.updateLocalConfiguration(config));\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Helmet\r\n            titleTemplate=\"%s | Panther docs\"\r\n            defaultTitle=\"Panther docs\"\r\n        />\r\n        <ConnectedRouter history={history}>\r\n            <Docs component={Index}>\r\n                <Directory label=\"Architecture\" path=\"architecture\">\r\n                    <Page label=\"Applications\" path=\"applications\"/>\r\n                    <Directory label=\"Store data types\" path=\"storeDataTypes\">\r\n                        <Directory label=\"Common data types\" path=\"common\">\r\n                            <Page label=\"Style\" path=\"style\" component={StyleDoc}>\r\n                                <Anchor label=\"Without style\" path=\"without-style\"/>\r\n                                <Anchor label=\"Fill styling\" path=\"fill\"/>\r\n                                <Anchor label=\"Outline styling\" path=\"outline\"/>\r\n                                <Anchor label=\"Hovered & selected\" path=\"hovered-selected\"/>\r\n                                <Anchor label=\"Attribute values\" path=\"values\"/>\r\n                                <Anchor label=\"Intervals\" path=\"intervals\"/>\r\n                                <Anchor label=\"Scales\" path=\"scales\"/>\r\n                                <Anchor label=\"Transformations\" path=\"transformations\"/>\r\n                                <Anchor label=\"Symbols\" path=\"symbols\"/>\r\n                                <Anchor label=\"Diagrams\" path=\"diagrams\"/>\r\n                            </Page>\r\n                        </Directory>\r\n                        <Page label=\"Specific data types\" path=\"specific\"/>\r\n                    </Directory>\r\n                    <Directory label=\"System data types\" path=\"systemDataTypes\">\r\n                        <Page label=\"Layers\" path=\"layers\" component={LayersDoc}/>\r\n                        <Page label=\"Map view\" path=\"mapView\" component={MapViewDoc}/>\r\n                    </Directory>\r\n                </Directory>\r\n                <Directory label=\"Design\" path=\"design\" component={Design}>\r\n                    <Page label=\"Typography\" path=\"typography\" component={Typography} />\r\n                    <Page label=\"Colours\" path=\"colours\"/>\r\n                </Directory>\r\n                <Directory label=\"Components\" path=\"components\">\r\n                    <Directory label=\"Maps\" path=\"maps\">\r\n                        <Page label=\"Map\" path=\"map\" component={MapDoc}/>\r\n                        <Page label=\"Map set\" path=\"mapSet\" component={MapSetDoc}/>\r\n                        <Directory label=\"Presentational\" path=\"presentational\" component={MapPresentational}>\r\n                            <Directory label=\"WebWorldWind\" path=\"webWorldWind\" component={WorldWindMapDoc}>\r\n                                <Page label=\"Vector layer\" path=\"vectorLayer\" component={WorldWindVectorLayer}/>\r\n                            </Directory>\r\n                            <Directory label=\"ReactLeafletMap\" path=\"reactLeaflet\" component={ReactLeafletMapDoc}>\r\n                                <Page label=\"Vector layer\" path=\"vectorLayer\" component={LeafletVectorLayer}>\r\n                                    <Anchor label=\"Props\" path=\"props\"/>\r\n                                    <Anchor label=\"Polygons\" path=\"polygons\"/>\r\n                                    <Anchor label=\"Points\" path=\"points\"/>\r\n                                    <Anchor label=\"Lines\" path=\"lines\"/>\r\n                                    <Anchor label=\"Mixed\" path=\"mixed\"/>\r\n                                </Page>\r\n                                <Page label=\"Diagram layer\" path=\"diagramLayer\" component={LeafletDiagramLayer}/>\r\n                                <Page label=\"Indexed Vector layer\" path=\"indexedVectorLayer\" component={LeafletIndexedVectorLayer}/>\r\n                            </Directory>\r\n                        </Directory>\r\n                        <Directory label=\"Controls\" path=\"controls\">\r\n                            <Page label=\"Map controls\" path=\"mapControls\" component={MapControls}/>\r\n                        </Directory>\r\n                    </Directory>\r\n                    <Directory label=\"Visualizations\" path=\"visualizations\">\r\n                        <Directory label=\"Cartesian charts\" path=\"cartesianCharts\" component={CartesianCharts}>\r\n                            <Page label=\"Line chart\" path=\"lineChart\" component={LineChartDoc}>\r\n                                <Anchor label=\"Props\" path=\"props\"/>\r\n                                <Anchor label=\"Data structure\" path=\"dataStructure\"/>\r\n                                <Anchor label=\"Basic settings\" path=\"basicSettings\"/>\r\n                                <Anchor label=\"Lines without points\" path=\"withoutPoints\"/>\r\n                                <Anchor label=\"Graying and aggregation\" path=\"graying\"/>\r\n                            </Page>\r\n                            <Page label=\"Column chart\" path=\"columnChart\" component={ColumnChartDoc}>\r\n                                <Anchor label=\"Props\" path=\"props\"/>\r\n                                <Anchor label=\"Data structure\" path=\"dataStructure\"/>\r\n                                <Anchor label=\"Basic settings\" path=\"basicSettings\"/>\r\n                                <Anchor label=\"Serial data handling\" path=\"serialData\"/>\r\n                                <Anchor label=\"Custom bar colors\" path=\"barColors\"/>\r\n                                <Anchor label=\"Aggregation\" path=\"aggregation\"/>\r\n                                <Anchor label=\"Diverging\" path=\"diverging\"/>\r\n                                <Anchor label=\"Stacked\" path=\"stacked\"/>\r\n                            </Page>\r\n                            <Page label=\"Scatter chart\" path=\"scatterChart\" component={ScatterChartDoc}>\r\n                                <Anchor label=\"Props\" path=\"props\"/>\r\n                                <Anchor label=\"Data structure\" path=\"dataStructure\"/>\r\n                                <Anchor label=\"Basic settings\" path=\"basicSettings\"/>\r\n                                <Anchor label=\"Point radius\" path=\"pointRadius\"/>\r\n                                <Anchor label=\"Serial data handling\" path=\"serialData\"/>\r\n                                <Anchor label=\"Custom symbols\" path=\"symbols\"/>\r\n                            </Page>\r\n                        </Directory>\r\n                        <Page label=\"Aster chart\" path=\"asterChart\" component={AsterChartDoc}>\r\n                            <Anchor label=\"Props\" path=\"props\"/>\r\n                            <Anchor label=\"Data structure\" path=\"dataStructure\"/>\r\n                            <Anchor label=\"Basic settings\" path=\"basicSettings\"/>\r\n                            <Anchor label=\"Relative values\" path=\"relativeValues\"/>\r\n                            <Anchor label=\"Dimensions\" path=\"dimensions\"/>\r\n                            <Anchor label=\"Forced min & max\" path=\"forceMinMax\"/>\r\n                            <Anchor label=\"Grid\" path=\"grid\"/>\r\n                            <Anchor label=\"Radials & legend\" path=\"radials\"/>\r\n                            <Anchor label=\"Custom hover value\" path=\"customHover\"/>\r\n                        </Page>\r\n                        <Page label=\"Sankey chart\" path=\"sankesChart\" component={SankesChartDoc}>\r\n                            {/* <Anchor label=\"Props\" path=\"props\"/>\r\n\t\t\t\t\t\t\t\t<Anchor label=\"Data structure\" path=\"dataStructure\"/>\r\n\t\t\t\t\t\t\t\t<Anchor label=\"Basic settings\" path=\"basicSettings\"/>\r\n\t\t\t\t\t\t\t\t<Anchor label=\"Relative values\" path=\"relativeValues\"/>\r\n\t\t\t\t\t\t\t\t<Anchor label=\"Dimensions\" path=\"dimensions\"/>\r\n\t\t\t\t\t\t\t\t<Anchor label=\"Forced min & max\" path=\"forceMinMax\"/>\r\n\t\t\t\t\t\t\t\t<Anchor label=\"Grid\" path=\"grid\"/>\r\n\t\t\t\t\t\t\t\t<Anchor label=\"Radials & legend\" path=\"radials\"/>\r\n\t\t\t\t\t\t\t\t<Anchor label=\"Custom hover value\" path=\"customHover\"/> */}\r\n                        </Page>\r\n                    </Directory>\r\n                    <Directory label=\"Atoms\" path=\"atoms\">\r\n                        <Page label=\"Buttons\" path=\"buttons\" component={Buttons}>\r\n                            <Anchor label=\"Props\" path=\"props\"/>\r\n                            <Anchor label=\"Levels\" path=\"levels\"/>\r\n                            <Anchor label=\"Sizes\" path=\"sizes\"/>\r\n                        </Page>\r\n                        <Page label=\"Forms\" path=\"forms\" component={FormsDoc}/>\r\n                        <Page label=\"ItemSelect\" path=\"itemSelect\" component={ItemSelectDoc}/>\r\n                        <Page label=\"Icon\" path=\"icon\"/>\r\n                        <Page label=\"Loader\" path=\"loader\"/>\r\n                        <Page label=\"EditableText\" path=\"editableText\"/>\r\n                        <Page label=\"Utilities ???\" path=\"utilities\"/>{/* center, fadeIn, expandRowButton, etc. */}\r\n                    </Directory>\r\n                    <Directory label=\"Interface elements\" path=\"interfaceElements\">\r\n                        <Page label=\"Panther select\" path=\"pantherSelect\">\r\n                            <Anchor label=\"Usage\" path=\"usage\"/>\r\n                            <Anchor label=\"Extending\" path=\"extending\"/>\r\n                        </Page>\r\n                        <Page label=\"Adjustable columns\" path=\"adjustableColumns\" />\r\n                        <Page label=\"ScreenAnimator\" path=\"screenAnimator\" />\r\n                    </Directory>\r\n                    <Directory label=\"Controls\" path=\"controls\">\r\n                        <Directory label=\"Timeline\" path=\"timeline\">\r\n                            <Page label=\"Map Timeline\" path=\"mapTimeline\"/>\r\n                        </Directory>\r\n                        <Page label=\"Areas\" path=\"areas\" />\r\n                        <Page label=\"Layers\" path=\"layers\" />\r\n                        <Page label=\"User & login overlay\" path=\"user\"/>\r\n                        <Page label=\"Share ???\" path=\"share\"/>\r\n                    </Directory>\r\n                    <Directory label=\"Common features\" path=\"commonFeatures\">\r\n                        <Page label=\"AppContainer\" path=\"appContainer\"/>\r\n                        <Page label=\"HoverHandler\" path=\"hoverHandler\" component={HoverHandlerDoc}/>\r\n                        <Page label=\"WindowsContainer\" path=\"windowsContainer\"/>\r\n                    </Directory>\r\n                </Directory>\r\n                <Directory label=\"Code\" path=\"code\">\r\n                    <Page label=\"Using data in applications ??\" path=\"usingData\" />\r\n                    <Page label=\"API\" path=\"api\" />\r\n                </Directory>\r\n                <Page label=\"Panther 2\" path=\"panther2\" />\r\n            </Docs>\r\n        </ConnectedRouter>\r\n    </Provider>,document.getElementById('ptr')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}